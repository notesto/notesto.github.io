<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>VPS —— 一键部署</title>
      <link href="/2023/06/30/vps/"/>
      <url>/2023/06/30/vps/</url>
      
        <content type="html"><![CDATA[<h1 id="VPS"><a href="#VPS" class="headerlink" title="VPS"></a>VPS</h1><blockquote><p>Ubuntu Server 20.04 一键部署。</p></blockquote><hr><h2 id="WireGuard-服务器"><a href="#WireGuard-服务器" class="headerlink" title="WireGuard 服务器"></a>WireGuard 服务器</h2><blockquote><p>使用一键脚本安装 WireGuard VPN</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wget -O wireguard.sh https://get.vpnsetup.net/wg</span><br><span class="line">bash wireguard.sh --auto</span><br></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br><span class="line">606</span><br><span class="line">607</span><br><span class="line">608</span><br><span class="line">609</span><br><span class="line">610</span><br><span class="line">611</span><br><span class="line">612</span><br><span class="line">613</span><br><span class="line">614</span><br><span class="line">615</span><br><span class="line">616</span><br><span class="line">617</span><br><span class="line">618</span><br><span class="line">619</span><br><span class="line">620</span><br><span class="line">621</span><br><span class="line">622</span><br><span class="line">623</span><br><span class="line">624</span><br><span class="line">625</span><br><span class="line">626</span><br><span class="line">627</span><br><span class="line">628</span><br><span class="line">629</span><br><span class="line">630</span><br><span class="line">631</span><br><span class="line">632</span><br><span class="line">633</span><br><span class="line">634</span><br><span class="line">635</span><br><span class="line">636</span><br><span class="line">637</span><br><span class="line">638</span><br><span class="line">639</span><br><span class="line">640</span><br><span class="line">641</span><br><span class="line">642</span><br><span class="line">643</span><br><span class="line">644</span><br><span class="line">645</span><br><span class="line">646</span><br><span class="line">647</span><br><span class="line">648</span><br><span class="line">649</span><br><span class="line">650</span><br><span class="line">651</span><br><span class="line">652</span><br><span class="line">653</span><br><span class="line">654</span><br><span class="line">655</span><br><span class="line">656</span><br><span class="line">657</span><br><span class="line">658</span><br><span class="line">659</span><br><span class="line">660</span><br><span class="line">661</span><br><span class="line">662</span><br><span class="line">663</span><br><span class="line">664</span><br><span class="line">665</span><br><span class="line">666</span><br><span class="line">667</span><br><span class="line">668</span><br><span class="line">669</span><br><span class="line">670</span><br><span class="line">671</span><br><span class="line">672</span><br><span class="line">673</span><br><span class="line">674</span><br><span class="line">675</span><br><span class="line">676</span><br><span class="line">677</span><br><span class="line">678</span><br><span class="line">679</span><br><span class="line">680</span><br><span class="line">681</span><br><span class="line">682</span><br><span class="line">683</span><br><span class="line">684</span><br><span class="line">685</span><br><span class="line">686</span><br><span class="line">687</span><br><span class="line">688</span><br><span class="line">689</span><br><span class="line">690</span><br><span class="line">691</span><br><span class="line">692</span><br><span class="line">693</span><br><span class="line">694</span><br><span class="line">695</span><br><span class="line">696</span><br><span class="line">697</span><br><span class="line">698</span><br><span class="line">699</span><br><span class="line">700</span><br><span class="line">701</span><br><span class="line">702</span><br><span class="line">703</span><br><span class="line">704</span><br><span class="line">705</span><br><span class="line">706</span><br><span class="line">707</span><br><span class="line">708</span><br><span class="line">709</span><br><span class="line">710</span><br><span class="line">711</span><br><span class="line">712</span><br><span class="line">713</span><br><span class="line">714</span><br><span class="line">715</span><br><span class="line">716</span><br><span class="line">717</span><br><span class="line">718</span><br><span class="line">719</span><br><span class="line">720</span><br><span class="line">721</span><br><span class="line">722</span><br><span class="line">723</span><br><span class="line">724</span><br><span class="line">725</span><br><span class="line">726</span><br><span class="line">727</span><br><span class="line">728</span><br><span class="line">729</span><br><span class="line">730</span><br><span class="line">731</span><br><span class="line">732</span><br><span class="line">733</span><br><span class="line">734</span><br><span class="line">735</span><br><span class="line">736</span><br><span class="line">737</span><br><span class="line">738</span><br><span class="line">739</span><br><span class="line">740</span><br><span class="line">741</span><br><span class="line">742</span><br><span class="line">743</span><br><span class="line">744</span><br><span class="line">745</span><br><span class="line">746</span><br><span class="line">747</span><br><span class="line">748</span><br><span class="line">749</span><br><span class="line">750</span><br><span class="line">751</span><br><span class="line">752</span><br><span class="line">753</span><br><span class="line">754</span><br><span class="line">755</span><br><span class="line">756</span><br><span class="line">757</span><br><span class="line">758</span><br><span class="line">759</span><br><span class="line">760</span><br><span class="line">761</span><br><span class="line">762</span><br><span class="line">763</span><br><span class="line">764</span><br><span class="line">765</span><br><span class="line">766</span><br><span class="line">767</span><br><span class="line">768</span><br><span class="line">769</span><br><span class="line">770</span><br><span class="line">771</span><br><span class="line">772</span><br><span class="line">773</span><br><span class="line">774</span><br><span class="line">775</span><br><span class="line">776</span><br><span class="line">777</span><br><span class="line">778</span><br><span class="line">779</span><br><span class="line">780</span><br><span class="line">781</span><br><span class="line">782</span><br><span class="line">783</span><br><span class="line">784</span><br><span class="line">785</span><br><span class="line">786</span><br><span class="line">787</span><br><span class="line">788</span><br><span class="line">789</span><br><span class="line">790</span><br><span class="line">791</span><br><span class="line">792</span><br><span class="line">793</span><br><span class="line">794</span><br><span class="line">795</span><br><span class="line">796</span><br><span class="line">797</span><br><span class="line">798</span><br><span class="line">799</span><br><span class="line">800</span><br><span class="line">801</span><br><span class="line">802</span><br><span class="line">803</span><br><span class="line">804</span><br><span class="line">805</span><br><span class="line">806</span><br><span class="line">807</span><br><span class="line">808</span><br><span class="line">809</span><br><span class="line">810</span><br><span class="line">811</span><br><span class="line">812</span><br><span class="line">813</span><br><span class="line">814</span><br><span class="line">815</span><br><span class="line">816</span><br><span class="line">817</span><br><span class="line">818</span><br><span class="line">819</span><br><span class="line">820</span><br><span class="line">821</span><br><span class="line">822</span><br><span class="line">823</span><br><span class="line">824</span><br><span class="line">825</span><br><span class="line">826</span><br><span class="line">827</span><br><span class="line">828</span><br><span class="line">829</span><br><span class="line">830</span><br><span class="line">831</span><br><span class="line">832</span><br><span class="line">833</span><br><span class="line">834</span><br><span class="line">835</span><br><span class="line">836</span><br><span class="line">837</span><br><span class="line">838</span><br><span class="line">839</span><br><span class="line">840</span><br><span class="line">841</span><br><span class="line">842</span><br><span class="line">843</span><br><span class="line">844</span><br><span class="line">845</span><br><span class="line">846</span><br><span class="line">847</span><br><span class="line">848</span><br><span class="line">849</span><br><span class="line">850</span><br><span class="line">851</span><br><span class="line">852</span><br><span class="line">853</span><br><span class="line">854</span><br><span class="line">855</span><br><span class="line">856</span><br><span class="line">857</span><br><span class="line">858</span><br><span class="line">859</span><br><span class="line">860</span><br><span class="line">861</span><br><span class="line">862</span><br><span class="line">863</span><br><span class="line">864</span><br><span class="line">865</span><br><span class="line">866</span><br><span class="line">867</span><br><span class="line">868</span><br><span class="line">869</span><br><span class="line">870</span><br><span class="line">871</span><br><span class="line">872</span><br><span class="line">873</span><br><span class="line">874</span><br><span class="line">875</span><br><span class="line">876</span><br><span class="line">877</span><br><span class="line">878</span><br><span class="line">879</span><br><span class="line">880</span><br><span class="line">881</span><br><span class="line">882</span><br><span class="line">883</span><br><span class="line">884</span><br><span class="line">885</span><br><span class="line">886</span><br><span class="line">887</span><br><span class="line">888</span><br><span class="line">889</span><br><span class="line">890</span><br><span class="line">891</span><br><span class="line">892</span><br><span class="line">893</span><br><span class="line">894</span><br><span class="line">895</span><br><span class="line">896</span><br><span class="line">897</span><br><span class="line">898</span><br><span class="line">899</span><br><span class="line">900</span><br><span class="line">901</span><br><span class="line">902</span><br><span class="line">903</span><br><span class="line">904</span><br><span class="line">905</span><br><span class="line">906</span><br><span class="line">907</span><br><span class="line">908</span><br><span class="line">909</span><br><span class="line">910</span><br><span class="line">911</span><br><span class="line">912</span><br><span class="line">913</span><br><span class="line">914</span><br><span class="line">915</span><br><span class="line">916</span><br><span class="line">917</span><br><span class="line">918</span><br><span class="line">919</span><br><span class="line">920</span><br><span class="line">921</span><br><span class="line">922</span><br><span class="line">923</span><br><span class="line">924</span><br><span class="line">925</span><br><span class="line">926</span><br><span class="line">927</span><br><span class="line">928</span><br><span class="line">929</span><br><span class="line">930</span><br><span class="line">931</span><br><span class="line">932</span><br><span class="line">933</span><br><span class="line">934</span><br><span class="line">935</span><br><span class="line">936</span><br><span class="line">937</span><br><span class="line">938</span><br><span class="line">939</span><br><span class="line">940</span><br><span class="line">941</span><br><span class="line">942</span><br><span class="line">943</span><br><span class="line">944</span><br><span class="line">945</span><br><span class="line">946</span><br><span class="line">947</span><br><span class="line">948</span><br><span class="line">949</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># https://github.com/hwdsl2/wireguard-install</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Based on the work of Nyr and contributors at:</span></span><br><span class="line"><span class="comment"># https://github.com/Nyr/wireguard-install</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Copyright (c) 2022-2023 Lin Song &lt;linsongui@gmail.com&gt;</span></span><br><span class="line"><span class="comment"># Copyright (c) 2020-2023 Nyr</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Released under the MIT License, see the accompanying file LICENSE.txt</span></span><br><span class="line"><span class="comment"># or https://opensource.org/licenses/MIT</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">exiterr</span></span>()  &#123; <span class="built_in">echo</span> <span class="string">&quot;Error: <span class="variable">$1</span>&quot;</span> &gt;&amp;2; <span class="built_in">exit</span> 1; &#125;</span><br><span class="line"><span class="function"><span class="title">exiterr2</span></span>() &#123; exiterr <span class="string">&quot;&#x27;apt-get install&#x27; failed.&quot;</span>; &#125;</span><br><span class="line"><span class="function"><span class="title">exiterr3</span></span>() &#123; exiterr <span class="string">&quot;&#x27;yum install&#x27; failed.&quot;</span>; &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">check_ip</span></span>() &#123;</span><br><span class="line">IP_REGEX=<span class="string">&#x27;^(([0-9]|[1-9][0-9]|1[0-9]&#123;2&#125;|2[0-4][0-9]|25[0-5])\.)&#123;3&#125;([0-9]|[1-9][0-9]|1[0-9]&#123;2&#125;|2[0-4][0-9]|25[0-5])$&#x27;</span></span><br><span class="line"><span class="built_in">printf</span> <span class="string">&#x27;%s&#x27;</span> <span class="string">&quot;<span class="variable">$1</span>&quot;</span> | <span class="built_in">tr</span> -d <span class="string">&#x27;\n&#x27;</span> | grep -Eq <span class="string">&quot;<span class="variable">$IP_REGEX</span>&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">check_os</span></span>() &#123;</span><br><span class="line"><span class="keyword">if</span> grep -qs <span class="string">&quot;ubuntu&quot;</span> /etc/os-release; <span class="keyword">then</span></span><br><span class="line">os=<span class="string">&quot;ubuntu&quot;</span></span><br><span class="line">os_version=$(grep <span class="string">&#x27;VERSION_ID&#x27;</span> /etc/os-release | <span class="built_in">cut</span> -d <span class="string">&#x27;&quot;&#x27;</span> -f 2 | <span class="built_in">tr</span> -d <span class="string">&#x27;.&#x27;</span>)</span><br><span class="line"><span class="keyword">elif</span> [[ -e /etc/debian_version ]]; <span class="keyword">then</span></span><br><span class="line">os=<span class="string">&quot;debian&quot;</span></span><br><span class="line">os_version=$(grep -oE <span class="string">&#x27;[0-9]+&#x27;</span> /etc/debian_version | <span class="built_in">head</span> -1)</span><br><span class="line"><span class="keyword">elif</span> [[ -e /etc/almalinux-release || -e /etc/rocky-release || -e /etc/centos-release ]]; <span class="keyword">then</span></span><br><span class="line">os=<span class="string">&quot;centos&quot;</span></span><br><span class="line">os_version=$(grep -shoE <span class="string">&#x27;[0-9]+&#x27;</span> /etc/almalinux-release /etc/rocky-release /etc/centos-release | <span class="built_in">head</span> -1)</span><br><span class="line"><span class="keyword">elif</span> [[ -e /etc/fedora-release ]]; <span class="keyword">then</span></span><br><span class="line">os=<span class="string">&quot;fedora&quot;</span></span><br><span class="line">os_version=$(grep -oE <span class="string">&#x27;[0-9]+&#x27;</span> /etc/fedora-release | <span class="built_in">head</span> -1)</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">exiterr <span class="string">&quot;This installer seems to be running on an unsupported distribution.</span></span><br><span class="line"><span class="string">Supported distros are Ubuntu, Debian, AlmaLinux, Rocky Linux, CentOS and Fedora.&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">check_os_ver</span></span>() &#123;</span><br><span class="line"><span class="keyword">if</span> [[ <span class="string">&quot;<span class="variable">$os</span>&quot;</span> == <span class="string">&quot;ubuntu&quot;</span> &amp;&amp; <span class="string">&quot;<span class="variable">$os_version</span>&quot;</span> -lt 1804 ]]; <span class="keyword">then</span></span><br><span class="line">exiterr <span class="string">&quot;Ubuntu 18.04 or higher is required to use this installer.</span></span><br><span class="line"><span class="string">This version of Ubuntu is too old and unsupported.&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [[ <span class="string">&quot;<span class="variable">$os</span>&quot;</span> == <span class="string">&quot;debian&quot;</span> &amp;&amp; <span class="string">&quot;<span class="variable">$os_version</span>&quot;</span> -lt 10 ]]; <span class="keyword">then</span></span><br><span class="line">exiterr <span class="string">&quot;Debian 10 or higher is required to use this installer.</span></span><br><span class="line"><span class="string">This version of Debian is too old and unsupported.&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [[ <span class="string">&quot;<span class="variable">$os</span>&quot;</span> == <span class="string">&quot;centos&quot;</span> &amp;&amp; <span class="string">&quot;<span class="variable">$os_version</span>&quot;</span> -lt 7 ]]; <span class="keyword">then</span></span><br><span class="line">exiterr <span class="string">&quot;CentOS 7 or higher is required to use this installer.</span></span><br><span class="line"><span class="string">This version of CentOS is too old and unsupported.&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">check_nftables</span></span>() &#123;</span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$os</span>&quot;</span> = <span class="string">&quot;centos&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line"><span class="keyword">if</span> grep -qs <span class="string">&quot;hwdsl2 VPN script&quot;</span> /etc/sysconfig/nftables.conf \</span><br><span class="line">|| systemctl is-active --quiet nftables 2&gt;/dev/null; <span class="keyword">then</span></span><br><span class="line">exiterr <span class="string">&quot;This system has nftables enabled, which is not supported by this installer.&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">install_wget</span></span>() &#123;</span><br><span class="line"><span class="comment"># Detect some Debian minimal setups where neither wget nor curl are installed</span></span><br><span class="line"><span class="keyword">if</span> ! <span class="built_in">hash</span> wget 2&gt;/dev/null &amp;&amp; ! <span class="built_in">hash</span> curl 2&gt;/dev/null; <span class="keyword">then</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$auto</span>&quot;</span> = 0 ]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Wget is required to use this installer.&quot;</span></span><br><span class="line"><span class="built_in">read</span> -n1 -r -p <span class="string">&quot;Press any key to install Wget and continue...&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">export</span> DEBIAN_FRONTEND=noninteractive</span><br><span class="line">(</span><br><span class="line"><span class="built_in">set</span> -x</span><br><span class="line">apt-get -yqq update || apt-get -yqq update</span><br><span class="line">apt-get -yqq install wget &gt;/dev/null</span><br><span class="line">) || exiterr2</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">install_iproute</span></span>() &#123;</span><br><span class="line"><span class="keyword">if</span> ! <span class="built_in">hash</span> ip 2&gt;/dev/null; <span class="keyword">then</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$auto</span>&quot;</span> = 0 ]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;iproute is required to use this installer.&quot;</span></span><br><span class="line"><span class="built_in">read</span> -n1 -r -p <span class="string">&quot;Press any key to install iproute and continue...&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$os</span>&quot;</span> = <span class="string">&quot;debian&quot;</span> ] || [ <span class="string">&quot;<span class="variable">$os</span>&quot;</span> = <span class="string">&quot;ubuntu&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">export</span> DEBIAN_FRONTEND=noninteractive</span><br><span class="line">(</span><br><span class="line"><span class="built_in">set</span> -x</span><br><span class="line">apt-get -yqq update || apt-get -yqq update</span><br><span class="line">apt-get -yqq install iproute2 &gt;/dev/null</span><br><span class="line">) || exiterr2</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">(</span><br><span class="line"><span class="built_in">set</span> -x</span><br><span class="line">yum -y -q install iproute &gt;/dev/null</span><br><span class="line">) || exiterr3</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">show_start_setup</span></span>() &#123;</span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$auto</span>&quot;</span> = 0 ]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;Welcome to this WireGuard server installer!&#x27;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;GitHub: https://github.com/hwdsl2/wireguard-install&#x27;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;I need to ask you a few questions before starting setup.&#x27;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;You can use the default options and just press enter if you are OK with them.&#x27;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">show_header</span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;Starting WireGuard setup using default options.&#x27;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">find_public_ip</span></span>() &#123;</span><br><span class="line">ip_url1=<span class="string">&quot;http://ipv4.icanhazip.com&quot;</span></span><br><span class="line">ip_url2=<span class="string">&quot;http://ip1.dynupdate.no-ip.com&quot;</span></span><br><span class="line"><span class="comment"># Get public IP and sanitize with grep</span></span><br><span class="line">get_public_ip=$(grep -m 1 -oE <span class="string">&#x27;^[0-9]&#123;1,3&#125;(\.[0-9]&#123;1,3&#125;)&#123;3&#125;$&#x27;</span> &lt;&lt;&lt; <span class="string">&quot;<span class="subst">$(wget -T 10 -t 1 -4qO- <span class="string">&quot;<span class="variable">$ip_url1</span>&quot;</span> || curl -m 10 -4Ls <span class="string">&quot;<span class="variable">$ip_url1</span>&quot;</span>)</span>&quot;</span>)</span><br><span class="line"><span class="keyword">if</span> ! check_ip <span class="string">&quot;<span class="variable">$get_public_ip</span>&quot;</span>; <span class="keyword">then</span></span><br><span class="line">get_public_ip=$(grep -m 1 -oE <span class="string">&#x27;^[0-9]&#123;1,3&#125;(\.[0-9]&#123;1,3&#125;)&#123;3&#125;$&#x27;</span> &lt;&lt;&lt; <span class="string">&quot;<span class="subst">$(wget -T 10 -t 1 -4qO- <span class="string">&quot;<span class="variable">$ip_url2</span>&quot;</span> || curl -m 10 -4Ls <span class="string">&quot;<span class="variable">$ip_url2</span>&quot;</span>)</span>&quot;</span>)</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">detect_ip</span></span>() &#123;</span><br><span class="line"><span class="comment"># If system has a single IPv4, it is selected automatically.</span></span><br><span class="line"><span class="keyword">if</span> [[ $(ip -4 addr | grep inet | grep -vEc <span class="string">&#x27;127(\.[0-9]&#123;1,3&#125;)&#123;3&#125;&#x27;</span>) -eq 1 ]]; <span class="keyword">then</span></span><br><span class="line">ip=$(ip -4 addr | grep inet | grep -vE <span class="string">&#x27;127(\.[0-9]&#123;1,3&#125;)&#123;3&#125;&#x27;</span> | <span class="built_in">cut</span> -d <span class="string">&#x27;/&#x27;</span> -f 1 | grep -oE <span class="string">&#x27;[0-9]&#123;1,3&#125;(\.[0-9]&#123;1,3&#125;)&#123;3&#125;&#x27;</span>)</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="comment"># Use the IP address on the default route</span></span><br><span class="line">ip=$(ip -4 route get 1 | sed <span class="string">&#x27;s/ uid .*//&#x27;</span> | awk <span class="string">&#x27;&#123;print $NF;exit&#125;&#x27;</span> 2&gt;/dev/null)</span><br><span class="line"><span class="keyword">if</span> ! check_ip <span class="string">&quot;<span class="variable">$ip</span>&quot;</span>; <span class="keyword">then</span></span><br><span class="line">find_public_ip</span><br><span class="line">ip_match=0</span><br><span class="line"><span class="keyword">if</span> [ -n <span class="string">&quot;<span class="variable">$get_public_ip</span>&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">ip_list=$(ip -4 addr | grep inet | grep -vE <span class="string">&#x27;127(\.[0-9]&#123;1,3&#125;)&#123;3&#125;&#x27;</span> | <span class="built_in">cut</span> -d <span class="string">&#x27;/&#x27;</span> -f 1 | grep -oE <span class="string">&#x27;[0-9]&#123;1,3&#125;(\.[0-9]&#123;1,3&#125;)&#123;3&#125;&#x27;</span>)</span><br><span class="line"><span class="keyword">while</span> IFS= <span class="built_in">read</span> -r line; <span class="keyword">do</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$line</span>&quot;</span> = <span class="string">&quot;<span class="variable">$get_public_ip</span>&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">ip_match=1</span><br><span class="line">ip=<span class="string">&quot;<span class="variable">$line</span>&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">done</span> &lt;&lt;&lt; <span class="string">&quot;<span class="variable">$ip_list</span>&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$ip_match</span>&quot;</span> = 0 ]; <span class="keyword">then</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$auto</span>&quot;</span> = 0 ]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Which IPv4 address should be used?&quot;</span></span><br><span class="line">number_of_ip=$(ip -4 addr | grep inet | grep -vEc <span class="string">&#x27;127(\.[0-9]&#123;1,3&#125;)&#123;3&#125;&#x27;</span>)</span><br><span class="line">ip -4 addr | grep inet | grep -vE <span class="string">&#x27;127(\.[0-9]&#123;1,3&#125;)&#123;3&#125;&#x27;</span> | <span class="built_in">cut</span> -d <span class="string">&#x27;/&#x27;</span> -f 1 | grep -oE <span class="string">&#x27;[0-9]&#123;1,3&#125;(\.[0-9]&#123;1,3&#125;)&#123;3&#125;&#x27;</span> | <span class="built_in">nl</span> -s <span class="string">&#x27;) &#x27;</span></span><br><span class="line"><span class="built_in">read</span> -rp <span class="string">&quot;IPv4 address [1]: &quot;</span> ip_number</span><br><span class="line"><span class="keyword">until</span> [[ -z <span class="string">&quot;<span class="variable">$ip_number</span>&quot;</span> || <span class="string">&quot;<span class="variable">$ip_number</span>&quot;</span> =~ ^[0-9]+$ &amp;&amp; <span class="string">&quot;<span class="variable">$ip_number</span>&quot;</span> -le <span class="string">&quot;<span class="variable">$number_of_ip</span>&quot;</span> ]]; <span class="keyword">do</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$ip_number</span>: invalid selection.&quot;</span></span><br><span class="line"><span class="built_in">read</span> -rp <span class="string">&quot;IPv4 address [1]: &quot;</span> ip_number</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line">[[ -z <span class="string">&quot;<span class="variable">$ip_number</span>&quot;</span> ]] &amp;&amp; ip_number=1</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">ip_number=1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">ip=$(ip -4 addr | grep inet | grep -vE <span class="string">&#x27;127(\.[0-9]&#123;1,3&#125;)&#123;3&#125;&#x27;</span> | <span class="built_in">cut</span> -d <span class="string">&#x27;/&#x27;</span> -f 1 | grep -oE <span class="string">&#x27;[0-9]&#123;1,3&#125;(\.[0-9]&#123;1,3&#125;)&#123;3&#125;&#x27;</span> | sed -n <span class="string">&quot;<span class="variable">$ip_number</span>&quot;</span>p)</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> ! check_ip <span class="string">&quot;<span class="variable">$ip</span>&quot;</span>; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Error: Could not detect this server&#x27;s IP address.&quot;</span> &gt;&amp;2</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Abort. No changes were made.&quot;</span> &gt;&amp;2</span><br><span class="line"><span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">check_nat_ip</span></span>() &#123;</span><br><span class="line"><span class="comment"># If $ip is a private IP address, the server must be behind NAT</span></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">printf</span> <span class="string">&#x27;%s&#x27;</span> <span class="string">&quot;<span class="variable">$ip</span>&quot;</span> | grep -qE <span class="string">&#x27;^(10|127|172\.(1[6-9]|2[0-9]|3[0-1])|192\.168|169\.254)\.&#x27;</span>; <span class="keyword">then</span></span><br><span class="line">find_public_ip</span><br><span class="line"><span class="keyword">if</span> ! check_ip <span class="string">&quot;<span class="variable">$get_public_ip</span>&quot;</span>; <span class="keyword">then</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$auto</span>&quot;</span> = 0 ]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;This server is behind NAT. What is the public IPv4 address?&quot;</span></span><br><span class="line"><span class="built_in">read</span> -rp <span class="string">&quot;Public IPv4 address: &quot;</span> public_ip</span><br><span class="line"><span class="keyword">until</span> check_ip <span class="string">&quot;<span class="variable">$public_ip</span>&quot;</span>; <span class="keyword">do</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Invalid input.&quot;</span></span><br><span class="line"><span class="built_in">read</span> -rp <span class="string">&quot;Public IPv4 address: &quot;</span> public_ip</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Error: Could not detect this server&#x27;s public IP.&quot;</span> &gt;&amp;2</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Abort. No changes were made.&quot;</span> &gt;&amp;2</span><br><span class="line"><span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">public_ip=<span class="string">&quot;<span class="variable">$get_public_ip</span>&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">show_config</span></span>() &#123;</span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$auto</span>&quot;</span> != 0 ]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line"><span class="built_in">printf</span> <span class="string">&#x27;%s&#x27;</span> <span class="string">&quot;Server IP: &quot;</span></span><br><span class="line">[ -n <span class="string">&quot;<span class="variable">$public_ip</span>&quot;</span> ] &amp;&amp; <span class="built_in">printf</span> <span class="string">&#x27;%s\n&#x27;</span> <span class="string">&quot;<span class="variable">$public_ip</span>&quot;</span> || <span class="built_in">printf</span> <span class="string">&#x27;%s\n&#x27;</span> <span class="string">&quot;<span class="variable">$ip</span>&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Port: UDP/51820&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Client name: client&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Client DNS: Google Public DNS&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">detect_ipv6</span></span>() &#123;</span><br><span class="line"><span class="comment"># If system has a single IPv6, it is selected automatically</span></span><br><span class="line"><span class="keyword">if</span> [[ $(ip -6 addr | grep -c <span class="string">&#x27;inet6 [23]&#x27;</span>) -eq 1 ]]; <span class="keyword">then</span></span><br><span class="line">ip6=$(ip -6 addr | grep <span class="string">&#x27;inet6 [23]&#x27;</span> | <span class="built_in">cut</span> -d <span class="string">&#x27;/&#x27;</span> -f 1 | grep -oE <span class="string">&#x27;([0-9a-fA-F]&#123;0,4&#125;:)&#123;1,7&#125;[0-9a-fA-F]&#123;0,4&#125;&#x27;</span>)</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="comment"># If system has multiple IPv6, ask the user to select one</span></span><br><span class="line"><span class="keyword">if</span> [[ $(ip -6 addr | grep -c <span class="string">&#x27;inet6 [23]&#x27;</span>) -gt 1 ]]; <span class="keyword">then</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$auto</span>&quot;</span> = 0 ]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Which IPv6 address should be used?&quot;</span></span><br><span class="line">number_of_ip6=$(ip -6 addr | grep -c <span class="string">&#x27;inet6 [23]&#x27;</span>)</span><br><span class="line">ip -6 addr | grep <span class="string">&#x27;inet6 [23]&#x27;</span> | <span class="built_in">cut</span> -d <span class="string">&#x27;/&#x27;</span> -f 1 | grep -oE <span class="string">&#x27;([0-9a-fA-F]&#123;0,4&#125;:)&#123;1,7&#125;[0-9a-fA-F]&#123;0,4&#125;&#x27;</span> | <span class="built_in">nl</span> -s <span class="string">&#x27;) &#x27;</span></span><br><span class="line"><span class="built_in">read</span> -rp <span class="string">&quot;IPv6 address [1]: &quot;</span> ip6_number</span><br><span class="line"><span class="keyword">until</span> [[ -z <span class="string">&quot;<span class="variable">$ip6_number</span>&quot;</span> || <span class="string">&quot;<span class="variable">$ip6_number</span>&quot;</span> =~ ^[0-9]+$ &amp;&amp; <span class="string">&quot;<span class="variable">$ip6_number</span>&quot;</span> -le <span class="string">&quot;<span class="variable">$number_of_ip6</span>&quot;</span> ]]; <span class="keyword">do</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$ip6_number</span>: invalid selection.&quot;</span></span><br><span class="line"><span class="built_in">read</span> -rp <span class="string">&quot;IPv6 address [1]: &quot;</span> ip6_number</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line">[[ -z <span class="string">&quot;<span class="variable">$ip6_number</span>&quot;</span> ]] &amp;&amp; ip6_number=1</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">ip6_number=1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">ip6=$(ip -6 addr | grep <span class="string">&#x27;inet6 [23]&#x27;</span> | <span class="built_in">cut</span> -d <span class="string">&#x27;/&#x27;</span> -f 1 | grep -oE <span class="string">&#x27;([0-9a-fA-F]&#123;0,4&#125;:)&#123;1,7&#125;[0-9a-fA-F]&#123;0,4&#125;&#x27;</span> | sed -n <span class="string">&quot;<span class="variable">$ip6_number</span>&quot;</span>p)</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">select_port</span></span>() &#123;</span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$auto</span>&quot;</span> = 0 ]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;What port should WireGuard listen to?&quot;</span></span><br><span class="line"><span class="built_in">read</span> -rp <span class="string">&quot;Port [51820]: &quot;</span> port</span><br><span class="line"><span class="keyword">until</span> [[ -z <span class="string">&quot;<span class="variable">$port</span>&quot;</span> || <span class="string">&quot;<span class="variable">$port</span>&quot;</span> =~ ^[0-9]+$ &amp;&amp; <span class="string">&quot;<span class="variable">$port</span>&quot;</span> -le 65535 ]]; <span class="keyword">do</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$port</span>: invalid port.&quot;</span></span><br><span class="line"><span class="built_in">read</span> -rp <span class="string">&quot;Port [51820]: &quot;</span> port</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line">[[ -z <span class="string">&quot;<span class="variable">$port</span>&quot;</span> ]] &amp;&amp; port=51820</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">port=51820</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">enter_custom_dns</span></span>() &#123;</span><br><span class="line"><span class="built_in">read</span> -rp <span class="string">&quot;Enter primary DNS server: &quot;</span> dns1</span><br><span class="line"><span class="keyword">until</span> check_ip <span class="string">&quot;<span class="variable">$dns1</span>&quot;</span>; <span class="keyword">do</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Invalid DNS server.&quot;</span></span><br><span class="line"><span class="built_in">read</span> -rp <span class="string">&quot;Enter primary DNS server: &quot;</span> dns1</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"><span class="built_in">read</span> -rp <span class="string">&quot;Enter secondary DNS server (Enter to skip): &quot;</span> dns2</span><br><span class="line"><span class="keyword">until</span> [ -z <span class="string">&quot;<span class="variable">$dns2</span>&quot;</span> ] || check_ip <span class="string">&quot;<span class="variable">$dns2</span>&quot;</span>; <span class="keyword">do</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Invalid DNS server.&quot;</span></span><br><span class="line"><span class="built_in">read</span> -rp <span class="string">&quot;Enter secondary DNS server (Enter to skip): &quot;</span> dns2</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">set_client_name</span></span>() &#123;</span><br><span class="line"><span class="comment"># Allow a limited set of characters to avoid conflicts</span></span><br><span class="line">client=$(sed <span class="string">&#x27;s/[^0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_-]/_/g&#x27;</span> &lt;&lt;&lt; <span class="string">&quot;<span class="variable">$unsanitized_client</span>&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">enter_client_name</span></span>() &#123;</span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$auto</span>&quot;</span> = 0 ]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Enter a name for the first client:&quot;</span></span><br><span class="line"><span class="built_in">read</span> -rp <span class="string">&quot;Name [client]: &quot;</span> unsanitized_client</span><br><span class="line">set_client_name</span><br><span class="line">[[ -z <span class="string">&quot;<span class="variable">$client</span>&quot;</span> ]] &amp;&amp; client=client</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">client=client</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">check_firewall</span></span>() &#123;</span><br><span class="line"><span class="comment"># Install a firewall if firewalld or iptables are not already available</span></span><br><span class="line"><span class="keyword">if</span> ! systemctl is-active --quiet firewalld.service &amp;&amp; ! <span class="built_in">hash</span> iptables 2&gt;/dev/null; <span class="keyword">then</span></span><br><span class="line"><span class="keyword">if</span> [[ <span class="string">&quot;<span class="variable">$os</span>&quot;</span> == <span class="string">&quot;centos&quot;</span> || <span class="string">&quot;<span class="variable">$os</span>&quot;</span> == <span class="string">&quot;fedora&quot;</span> ]]; <span class="keyword">then</span></span><br><span class="line">firewall=<span class="string">&quot;firewalld&quot;</span></span><br><span class="line"><span class="comment"># We don&#x27;t want to silently enable firewalld, so we give a subtle warning</span></span><br><span class="line"><span class="comment"># If the user continues, firewalld will be installed and enabled during setup</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Note: firewalld, which is required to manage routing tables, will also be installed.&quot;</span></span><br><span class="line"><span class="keyword">elif</span> [[ <span class="string">&quot;<span class="variable">$os</span>&quot;</span> == <span class="string">&quot;debian&quot;</span> || <span class="string">&quot;<span class="variable">$os</span>&quot;</span> == <span class="string">&quot;ubuntu&quot;</span> ]]; <span class="keyword">then</span></span><br><span class="line">firewall=<span class="string">&quot;iptables&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">abort_and_exit</span></span>() &#123;</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Abort. No changes were made.&quot;</span> &gt;&amp;2</span><br><span class="line"><span class="built_in">exit</span> 1</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">confirm_setup</span></span>() &#123;</span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$auto</span>&quot;</span> = 0 ]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">printf</span> <span class="string">&quot;Do you want to continue? [Y/n] &quot;</span></span><br><span class="line"><span class="built_in">read</span> -r response</span><br><span class="line"><span class="keyword">case</span> <span class="variable">$response</span> <span class="keyword">in</span></span><br><span class="line">[yY][eE][sS]|[yY]|<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">:</span><br><span class="line">;;</span><br><span class="line">*)</span><br><span class="line">abort_and_exit</span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">new_client_dns</span></span>() &#123;</span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$auto</span>&quot;</span> = 0 ]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Select a DNS server for the client:&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;   1) Current system resolvers&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;   2) Google Public DNS&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;   3) Cloudflare DNS&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;   4) OpenDNS&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;   5) Quad9&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;   6) AdGuard DNS&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;   7) Custom&quot;</span></span><br><span class="line"><span class="built_in">read</span> -rp <span class="string">&quot;DNS server [2]: &quot;</span> dns</span><br><span class="line"><span class="keyword">until</span> [[ -z <span class="string">&quot;<span class="variable">$dns</span>&quot;</span> || <span class="string">&quot;<span class="variable">$dns</span>&quot;</span> =~ ^[1-7]$ ]]; <span class="keyword">do</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$dns</span>: invalid selection.&quot;</span></span><br><span class="line"><span class="built_in">read</span> -rp <span class="string">&quot;DNS server [2]: &quot;</span> dns</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">dns=2</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="comment"># DNS</span></span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$dns</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">1)</span><br><span class="line"><span class="comment"># Locate the proper resolv.conf</span></span><br><span class="line"><span class="comment"># Needed for systems running systemd-resolved</span></span><br><span class="line"><span class="keyword">if</span> grep <span class="string">&#x27;^nameserver&#x27;</span> <span class="string">&quot;/etc/resolv.conf&quot;</span> | grep -qv <span class="string">&#x27;127.0.0.53&#x27;</span> ; <span class="keyword">then</span></span><br><span class="line">resolv_conf=<span class="string">&quot;/etc/resolv.conf&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">resolv_conf=<span class="string">&quot;/run/systemd/resolve/resolv.conf&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="comment"># Extract nameservers and provide them in the required format</span></span><br><span class="line">dns=$(grep -v <span class="string">&#x27;^#\|^;&#x27;</span> <span class="string">&quot;<span class="variable">$resolv_conf</span>&quot;</span> | grep <span class="string">&#x27;^nameserver&#x27;</span> | grep -v <span class="string">&#x27;127.0.0.53&#x27;</span> | grep -oE <span class="string">&#x27;[0-9]&#123;1,3&#125;(\.[0-9]&#123;1,3&#125;)&#123;3&#125;&#x27;</span> | xargs | sed -e <span class="string">&#x27;s/ /, /g&#x27;</span>)</span><br><span class="line">;;</span><br><span class="line">2|<span class="string">&quot;&quot;</span>)</span><br><span class="line">dns=<span class="string">&quot;8.8.8.8, 8.8.4.4&quot;</span></span><br><span class="line">;;</span><br><span class="line">3)</span><br><span class="line">dns=<span class="string">&quot;1.1.1.1, 1.0.0.1&quot;</span></span><br><span class="line">;;</span><br><span class="line">4)</span><br><span class="line">dns=<span class="string">&quot;208.67.222.222, 208.67.220.220&quot;</span></span><br><span class="line">;;</span><br><span class="line">5)</span><br><span class="line">dns=<span class="string">&quot;9.9.9.9, 149.112.112.112&quot;</span></span><br><span class="line">;;</span><br><span class="line">6)</span><br><span class="line">dns=<span class="string">&quot;94.140.14.14, 94.140.15.15&quot;</span></span><br><span class="line">;;</span><br><span class="line">7)</span><br><span class="line">enter_custom_dns</span><br><span class="line"><span class="keyword">if</span> [ -n <span class="string">&quot;<span class="variable">$dns2</span>&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">dns=<span class="string">&quot;<span class="variable">$dns1</span>, <span class="variable">$dns2</span>&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">dns=<span class="string">&quot;<span class="variable">$dns1</span>&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">get_export_dir</span></span>() &#123;</span><br><span class="line">export_to_home_dir=0</span><br><span class="line">export_dir=~/</span><br><span class="line"><span class="keyword">if</span> [ -n <span class="string">&quot;<span class="variable">$SUDO_USER</span>&quot;</span> ] &amp;&amp; getent group <span class="string">&quot;<span class="variable">$SUDO_USER</span>&quot;</span> &gt;/dev/null 2&gt;&amp;1; <span class="keyword">then</span></span><br><span class="line">user_home_dir=$(getent passwd <span class="string">&quot;<span class="variable">$SUDO_USER</span>&quot;</span> 2&gt;/dev/null | <span class="built_in">cut</span> -d: -f6)</span><br><span class="line"><span class="keyword">if</span> [ -d <span class="string">&quot;<span class="variable">$user_home_dir</span>&quot;</span> ] &amp;&amp; [ <span class="string">&quot;<span class="variable">$user_home_dir</span>&quot;</span> != <span class="string">&quot;/&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">export_dir=<span class="string">&quot;<span class="variable">$user_home_dir</span>/&quot;</span></span><br><span class="line">export_to_home_dir=1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">new_client_setup</span></span>() &#123;</span><br><span class="line">get_export_dir</span><br><span class="line"><span class="comment"># Given a list of the assigned internal IPv4 addresses, obtain the lowest still</span></span><br><span class="line"><span class="comment"># available octet. Important to start looking at 2, because 1 is our gateway.</span></span><br><span class="line">octet=2</span><br><span class="line"><span class="keyword">while</span> grep AllowedIPs /etc/wireguard/wg0.conf | <span class="built_in">cut</span> -d <span class="string">&quot;.&quot;</span> -f 4 | <span class="built_in">cut</span> -d <span class="string">&quot;/&quot;</span> -f 1 | grep -q <span class="string">&quot;<span class="variable">$octet</span>&quot;</span>; <span class="keyword">do</span></span><br><span class="line">(( octet++ ))</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"><span class="comment"># Don&#x27;t break the WireGuard configuration in case the address space is full</span></span><br><span class="line"><span class="keyword">if</span> [[ <span class="string">&quot;<span class="variable">$octet</span>&quot;</span> -eq 255 ]]; <span class="keyword">then</span></span><br><span class="line">exiterr <span class="string">&quot;253 clients are already configured. The WireGuard internal subnet is full!&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">key=$(wg genkey)</span><br><span class="line">psk=$(wg genpsk)</span><br><span class="line"><span class="comment"># Configure client in the server</span></span><br><span class="line"><span class="built_in">cat</span> &lt;&lt; <span class="string">EOF &gt;&gt; /etc/wireguard/wg0.conf</span></span><br><span class="line"><span class="string"># BEGIN_PEER $client</span></span><br><span class="line"><span class="string">[Peer]</span></span><br><span class="line"><span class="string">PublicKey = $(wg pubkey &lt;&lt;&lt; &quot;$key&quot;)</span></span><br><span class="line"><span class="string">PresharedKey = $psk</span></span><br><span class="line"><span class="string">AllowedIPs = 10.7.0.$octet/32$(grep -q &#x27;fddd:2c4:2c4:2c4::1&#x27; /etc/wireguard/wg0.conf &amp;&amp; echo &quot;, fddd:2c4:2c4:2c4::$octet/128&quot;)</span></span><br><span class="line"><span class="string"># END_PEER $client</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"><span class="comment"># Create client configuration</span></span><br><span class="line"><span class="built_in">cat</span> &lt;&lt; <span class="string">EOF &gt; &quot;$export_dir$client&quot;.conf</span></span><br><span class="line"><span class="string">[Interface]</span></span><br><span class="line"><span class="string">Address = 10.7.0.$octet/24$(grep -q &#x27;fddd:2c4:2c4:2c4::1&#x27; /etc/wireguard/wg0.conf &amp;&amp; echo &quot;, fddd:2c4:2c4:2c4::$octet/64&quot;)</span></span><br><span class="line"><span class="string">DNS = $dns</span></span><br><span class="line"><span class="string">PrivateKey = $key</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[Peer]</span></span><br><span class="line"><span class="string">PublicKey = $(grep PrivateKey /etc/wireguard/wg0.conf | cut -d &quot; &quot; -f 3 | wg pubkey)</span></span><br><span class="line"><span class="string">PresharedKey = $psk</span></span><br><span class="line"><span class="string">AllowedIPs = 0.0.0.0/0, ::/0</span></span><br><span class="line"><span class="string">Endpoint = $(grep &#x27;^# ENDPOINT&#x27; /etc/wireguard/wg0.conf | cut -d &quot; &quot; -f 3):$(grep ListenPort /etc/wireguard/wg0.conf | cut -d &quot; &quot; -f 3)</span></span><br><span class="line"><span class="string">PersistentKeepalive = 25</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$export_to_home_dir</span>&quot;</span> = 1 ]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">chown</span> <span class="string">&quot;<span class="variable">$SUDO_USER</span>:<span class="variable">$SUDO_USER</span>&quot;</span> <span class="string">&quot;$export_dir<span class="variable">$client</span>&quot;</span>.conf</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">chmod</span> 600 <span class="string">&quot;$export_dir<span class="variable">$client</span>&quot;</span>.conf</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">update_sysctl</span></span>() &#123;</span><br><span class="line"><span class="built_in">mkdir</span> -p /etc/sysctl.d</span><br><span class="line">conf_fwd=<span class="string">&quot;/etc/sysctl.d/99-wireguard-forward.conf&quot;</span></span><br><span class="line">conf_opt=<span class="string">&quot;/etc/sysctl.d/99-wireguard-optimize.conf&quot;</span></span><br><span class="line"><span class="comment"># Enable net.ipv4.ip_forward for the system</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;net.ipv4.ip_forward=1&#x27;</span> &gt; <span class="string">&quot;<span class="variable">$conf_fwd</span>&quot;</span></span><br><span class="line"><span class="keyword">if</span> [[ -n <span class="string">&quot;<span class="variable">$ip6</span>&quot;</span> ]]; <span class="keyword">then</span></span><br><span class="line"><span class="comment"># Enable net.ipv6.conf.all.forwarding for the system</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;net.ipv6.conf.all.forwarding=1&quot;</span> &gt;&gt; <span class="string">&quot;<span class="variable">$conf_fwd</span>&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="comment"># Optimize sysctl settings such as TCP buffer sizes</span></span><br><span class="line">base_url=<span class="string">&quot;https://github.com/hwdsl2/vpn-extras/releases/download/v1.0.0&quot;</span></span><br><span class="line">conf_url=<span class="string">&quot;<span class="variable">$base_url</span>/sysctl-wg-<span class="variable">$os</span>&quot;</span></span><br><span class="line">[ <span class="string">&quot;<span class="variable">$auto</span>&quot;</span> != 0 ] &amp;&amp; conf_url=<span class="string">&quot;<span class="variable">$&#123;conf_url&#125;</span>-auto&quot;</span></span><br><span class="line">wget -t 3 -T 30 -q -O <span class="string">&quot;<span class="variable">$conf_opt</span>&quot;</span> <span class="string">&quot;<span class="variable">$conf_url</span>&quot;</span> 2&gt;/dev/null \</span><br><span class="line">|| curl -m 30 -fsL <span class="string">&quot;<span class="variable">$conf_url</span>&quot;</span> -o <span class="string">&quot;<span class="variable">$conf_opt</span>&quot;</span> 2&gt;/dev/null \</span><br><span class="line">|| &#123; /bin/rm -f <span class="string">&quot;<span class="variable">$conf_opt</span>&quot;</span>; <span class="built_in">touch</span> <span class="string">&quot;<span class="variable">$conf_opt</span>&quot;</span>; &#125;</span><br><span class="line"><span class="comment"># Enable TCP BBR congestion control if kernel version &gt;= 4.20</span></span><br><span class="line"><span class="keyword">if</span> modprobe -q tcp_bbr \</span><br><span class="line">&amp;&amp; <span class="built_in">printf</span> <span class="string">&#x27;%s\n%s&#x27;</span> <span class="string">&quot;4.20&quot;</span> <span class="string">&quot;<span class="subst">$(uname -r)</span>&quot;</span> | <span class="built_in">sort</span> -C -V \</span><br><span class="line">&amp;&amp; [ -f /proc/sys/net/ipv4/tcp_congestion_control ]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">cat</span> &gt;&gt; <span class="string">&quot;<span class="variable">$conf_opt</span>&quot;</span> &lt;&lt;<span class="string">&#x27;EOF&#x27;</span></span><br><span class="line">net.core.default_qdisc = fq</span><br><span class="line">net.ipv4.tcp_congestion_control = bbr</span><br><span class="line">EOF</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="comment"># Apply sysctl settings</span></span><br><span class="line">sysctl -e -q -p <span class="string">&quot;<span class="variable">$conf_fwd</span>&quot;</span></span><br><span class="line">sysctl -e -q -p <span class="string">&quot;<span class="variable">$conf_opt</span>&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">update_rclocal</span></span>() &#123;</span><br><span class="line">ipt_cmd=<span class="string">&quot;systemctl restart wg-iptables.service&quot;</span></span><br><span class="line"><span class="keyword">if</span> ! grep -qs <span class="string">&quot;<span class="variable">$ipt_cmd</span>&quot;</span> /etc/rc.local; <span class="keyword">then</span></span><br><span class="line"><span class="keyword">if</span> [ ! -f /etc/rc.local ]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;#!/bin/sh&#x27;</span> &gt; /etc/rc.local</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$os</span>&quot;</span> = <span class="string">&quot;ubuntu&quot;</span> ] || [ <span class="string">&quot;<span class="variable">$os</span>&quot;</span> = <span class="string">&quot;debian&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">sed --follow-symlinks -i <span class="string">&#x27;/^exit 0/d&#x27;</span> /etc/rc.local</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">cat</span> &gt;&gt; /etc/rc.local &lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">$ipt_cmd</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$os</span>&quot;</span> = <span class="string">&quot;ubuntu&quot;</span> ] || [ <span class="string">&quot;<span class="variable">$os</span>&quot;</span> = <span class="string">&quot;debian&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;exit 0&quot;</span> &gt;&gt; /etc/rc.local</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">chmod</span> +x /etc/rc.local</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">show_header</span></span>() &#123;</span><br><span class="line"><span class="built_in">cat</span> &lt;&lt;<span class="string">&#x27;EOF&#x27;</span></span><br><span class="line"></span><br><span class="line">WireGuard Script</span><br><span class="line">https://github.com/hwdsl2/wireguard-install</span><br><span class="line">EOF</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">show_header2</span></span>() &#123;</span><br><span class="line"><span class="built_in">cat</span> &lt;&lt;<span class="string">&#x27;EOF&#x27;</span></span><br><span class="line"></span><br><span class="line">Copyright (c) 2022-2023 Lin Song</span><br><span class="line">Copyright (c) 2020-2023 Nyr</span><br><span class="line">EOF</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">show_usage</span></span>() &#123;</span><br><span class="line"><span class="keyword">if</span> [ -n <span class="string">&quot;<span class="variable">$1</span>&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Error: <span class="variable">$1</span>&quot;</span> &gt;&amp;2</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">show_header</span><br><span class="line">show_header2</span><br><span class="line"><span class="built_in">cat</span> 1&gt;&amp;2 &lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Usage: bash $0 [options]</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Options:</span></span><br><span class="line"><span class="string">  --auto      auto install WireGuard using default options</span></span><br><span class="line"><span class="string">  -h, --help  show this help message and exit</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">To customize install options, run this script without arguments.</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"><span class="built_in">exit</span> 1</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">wgsetup</span></span>() &#123;</span><br><span class="line"></span><br><span class="line"><span class="built_in">export</span> PATH=<span class="string">&quot;/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="subst">$(id -u)</span>&quot;</span> != 0 ]; <span class="keyword">then</span></span><br><span class="line">exiterr <span class="string">&quot;This installer must be run as root. Try &#x27;sudo bash <span class="variable">$0</span>&#x27;&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Detect Debian users running the script with &quot;sh&quot; instead of bash</span></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">readlink</span> /proc/$$/exe | grep -q <span class="string">&quot;dash&quot;</span>; <span class="keyword">then</span></span><br><span class="line">exiterr <span class="string">&#x27;This installer needs to be run with &quot;bash&quot;, not &quot;sh&quot;.&#x27;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Detect OpenVZ 6</span></span><br><span class="line"><span class="keyword">if</span> [[ $(<span class="built_in">uname</span> -r | <span class="built_in">cut</span> -d <span class="string">&quot;.&quot;</span> -f 1) -eq 2 ]]; <span class="keyword">then</span></span><br><span class="line">exiterr <span class="string">&quot;The system is running an old kernel, which is incompatible with this installer.&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">check_os</span><br><span class="line">check_os_ver</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> systemd-detect-virt -cq 2&gt;/dev/null; <span class="keyword">then</span></span><br><span class="line">exiterr <span class="string">&quot;This system is running inside a container, which is not supported by this installer.&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">auto=0</span><br><span class="line"><span class="keyword">if</span> [[ ! -e /etc/wireguard/wg0.conf ]]; <span class="keyword">then</span></span><br><span class="line">check_nftables</span><br><span class="line"><span class="keyword">while</span> [ <span class="string">&quot;<span class="variable">$#</span>&quot;</span> -gt 0 ]; <span class="keyword">do</span></span><br><span class="line"><span class="keyword">case</span> <span class="variable">$1</span> <span class="keyword">in</span></span><br><span class="line">--auto)</span><br><span class="line">auto=1</span><br><span class="line"><span class="built_in">shift</span></span><br><span class="line">;;</span><br><span class="line">-h|--<span class="built_in">help</span>)</span><br><span class="line">show_usage</span><br><span class="line">;;</span><br><span class="line">*)</span><br><span class="line">show_usage <span class="string">&quot;Unknown parameter: <span class="variable">$1</span>&quot;</span></span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line">install_wget</span><br><span class="line">install_iproute</span><br><span class="line">show_start_setup</span><br><span class="line">detect_ip</span><br><span class="line">check_nat_ip</span><br><span class="line">show_config</span><br><span class="line">detect_ipv6</span><br><span class="line">select_port</span><br><span class="line">enter_client_name</span><br><span class="line">new_client_dns</span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$auto</span>&quot;</span> = 0 ]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;WireGuard installation is ready to begin.&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">check_firewall</span><br><span class="line">confirm_setup</span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Installing WireGuard, please wait...&quot;</span></span><br><span class="line"><span class="keyword">if</span> [[ <span class="string">&quot;<span class="variable">$os</span>&quot;</span> == <span class="string">&quot;ubuntu&quot;</span> ]]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">export</span> DEBIAN_FRONTEND=noninteractive</span><br><span class="line">(</span><br><span class="line"><span class="built_in">set</span> -x</span><br><span class="line">apt-get -yqq update || apt-get -yqq update</span><br><span class="line">apt-get -yqq install wireguard qrencode <span class="variable">$firewall</span> &gt;/dev/null</span><br><span class="line">) || exiterr2</span><br><span class="line"><span class="keyword">elif</span> [[ <span class="string">&quot;<span class="variable">$os</span>&quot;</span> == <span class="string">&quot;debian&quot;</span> &amp;&amp; <span class="string">&quot;<span class="variable">$os_version</span>&quot;</span> -ge 11 ]]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">export</span> DEBIAN_FRONTEND=noninteractive</span><br><span class="line">(</span><br><span class="line"><span class="built_in">set</span> -x</span><br><span class="line">apt-get -yqq update || apt-get -yqq update</span><br><span class="line">apt-get -yqq install wireguard qrencode <span class="variable">$firewall</span> &gt;/dev/null</span><br><span class="line">) || exiterr2</span><br><span class="line"><span class="keyword">elif</span> [[ <span class="string">&quot;<span class="variable">$os</span>&quot;</span> == <span class="string">&quot;debian&quot;</span> &amp;&amp; <span class="string">&quot;<span class="variable">$os_version</span>&quot;</span> -eq 10 ]]; <span class="keyword">then</span></span><br><span class="line"><span class="keyword">if</span> ! grep -qs <span class="string">&#x27;^deb .* buster-backports main&#x27;</span> /etc/apt/sources.list /etc/apt/sources.list.d/*.list; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;deb http://deb.debian.org/debian buster-backports main&quot;</span> &gt;&gt; /etc/apt/sources.list</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">export</span> DEBIAN_FRONTEND=noninteractive</span><br><span class="line">(</span><br><span class="line"><span class="built_in">set</span> -x</span><br><span class="line">apt-get -yqq update || apt-get -yqq update</span><br><span class="line"><span class="comment"># Try to install kernel headers for the running kernel and avoid a reboot. This</span></span><br><span class="line"><span class="comment"># can fail, so it&#x27;s important to run separately from the other apt-get command.</span></span><br><span class="line">apt-get -yqq install linux-headers-<span class="string">&quot;<span class="subst">$(uname -r)</span>&quot;</span> &gt;/dev/null</span><br><span class="line">)</span><br><span class="line"><span class="comment"># There are cleaner ways to find out the $architecture, but we require an</span></span><br><span class="line"><span class="comment"># specific format for the package name and this approach provides what we need.</span></span><br><span class="line">architecture=$(dpkg --get-selections <span class="string">&#x27;linux-image-*-*&#x27;</span> | <span class="built_in">cut</span> -f 1 | grep -oE <span class="string">&#x27;[^-]*$&#x27;</span> -m 1)</span><br><span class="line"><span class="comment"># linux-headers-$architecture points to the latest headers. We install it</span></span><br><span class="line"><span class="comment"># because if the system has an outdated kernel, there is no guarantee that old</span></span><br><span class="line"><span class="comment"># headers were still downloadable and to provide suitable headers for future</span></span><br><span class="line"><span class="comment"># kernel updates.</span></span><br><span class="line">(</span><br><span class="line"><span class="built_in">set</span> -x</span><br><span class="line">apt-get -yqq install linux-headers-<span class="string">&quot;<span class="variable">$architecture</span>&quot;</span> &gt;/dev/null</span><br><span class="line">apt-get -yqq install wireguard qrencode <span class="variable">$firewall</span> &gt;/dev/null</span><br><span class="line">) || exiterr2</span><br><span class="line"><span class="keyword">elif</span> [[ <span class="string">&quot;<span class="variable">$os</span>&quot;</span> == <span class="string">&quot;centos&quot;</span> &amp;&amp; <span class="string">&quot;<span class="variable">$os_version</span>&quot;</span> -eq 9 ]]; <span class="keyword">then</span></span><br><span class="line">(</span><br><span class="line"><span class="built_in">set</span> -x</span><br><span class="line">yum -y -q install epel-release &gt;/dev/null</span><br><span class="line">yum -y -q install wireguard-tools qrencode <span class="variable">$firewall</span> &gt;/dev/null 2&gt;&amp;1</span><br><span class="line">) || exiterr3</span><br><span class="line"><span class="built_in">mkdir</span> -p /etc/wireguard/</span><br><span class="line"><span class="keyword">elif</span> [[ <span class="string">&quot;<span class="variable">$os</span>&quot;</span> == <span class="string">&quot;centos&quot;</span> &amp;&amp; <span class="string">&quot;<span class="variable">$os_version</span>&quot;</span> -eq 8 ]]; <span class="keyword">then</span></span><br><span class="line">(</span><br><span class="line"><span class="built_in">set</span> -x</span><br><span class="line">yum -y -q install epel-release elrepo-release &gt;/dev/null</span><br><span class="line">yum -y -q --nobest install kmod-wireguard &gt;/dev/null 2&gt;&amp;1</span><br><span class="line">yum -y -q install wireguard-tools qrencode <span class="variable">$firewall</span> &gt;/dev/null 2&gt;&amp;1</span><br><span class="line">) || exiterr3</span><br><span class="line"><span class="built_in">mkdir</span> -p /etc/wireguard/</span><br><span class="line"><span class="keyword">elif</span> [[ <span class="string">&quot;<span class="variable">$os</span>&quot;</span> == <span class="string">&quot;centos&quot;</span> &amp;&amp; <span class="string">&quot;<span class="variable">$os_version</span>&quot;</span> -eq 7 ]]; <span class="keyword">then</span></span><br><span class="line">(</span><br><span class="line"><span class="built_in">set</span> -x</span><br><span class="line">yum -y -q install epel-release https://www.elrepo.org/elrepo-release-7.el7.elrepo.noarch.rpm &gt;/dev/null</span><br><span class="line">yum -y -q install yum-plugin-elrepo &gt;/dev/null 2&gt;&amp;1</span><br><span class="line">yum -y -q install kmod-wireguard wireguard-tools qrencode <span class="variable">$firewall</span> &gt;/dev/null 2&gt;&amp;1</span><br><span class="line">) || exiterr3</span><br><span class="line"><span class="built_in">mkdir</span> -p /etc/wireguard/</span><br><span class="line"><span class="keyword">elif</span> [[ <span class="string">&quot;<span class="variable">$os</span>&quot;</span> == <span class="string">&quot;fedora&quot;</span> ]]; <span class="keyword">then</span></span><br><span class="line">(</span><br><span class="line"><span class="built_in">set</span> -x</span><br><span class="line">dnf install -y wireguard-tools qrencode <span class="variable">$firewall</span> &gt;/dev/null</span><br><span class="line">) || exiterr <span class="string">&quot;&#x27;dnf install&#x27; failed.&quot;</span></span><br><span class="line"><span class="built_in">mkdir</span> -p /etc/wireguard/</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">[ ! -d /etc/wireguard ] &amp;&amp; exiterr2</span><br><span class="line"><span class="comment"># If firewalld was just installed, enable it</span></span><br><span class="line"><span class="keyword">if</span> [[ <span class="string">&quot;<span class="variable">$firewall</span>&quot;</span> == <span class="string">&quot;firewalld&quot;</span> ]]; <span class="keyword">then</span></span><br><span class="line">(</span><br><span class="line"><span class="built_in">set</span> -x</span><br><span class="line">systemctl <span class="built_in">enable</span> --now firewalld.service &gt;/dev/null 2&gt;&amp;1</span><br><span class="line">)</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="comment"># Generate wg0.conf</span></span><br><span class="line"><span class="built_in">cat</span> &lt;&lt; <span class="string">EOF &gt; /etc/wireguard/wg0.conf</span></span><br><span class="line"><span class="string"># Do not alter the commented lines</span></span><br><span class="line"><span class="string"># They are used by wireguard-install</span></span><br><span class="line"><span class="string"># ENDPOINT $([[ -n &quot;$public_ip&quot; ]] &amp;&amp; echo &quot;$public_ip&quot; || echo &quot;$ip&quot;)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[Interface]</span></span><br><span class="line"><span class="string">Address = 10.7.0.1/24$([[ -n &quot;$ip6&quot; ]] &amp;&amp; echo &quot;, fddd:2c4:2c4:2c4::1/64&quot;)</span></span><br><span class="line"><span class="string">PrivateKey = $(wg genkey)</span></span><br><span class="line"><span class="string">ListenPort = $port</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"><span class="built_in">chmod</span> 600 /etc/wireguard/wg0.conf</span><br><span class="line">update_sysctl</span><br><span class="line"><span class="keyword">if</span> systemctl is-active --quiet firewalld.service; <span class="keyword">then</span></span><br><span class="line"><span class="comment"># Using both permanent and not permanent rules to avoid a firewalld reload</span></span><br><span class="line">firewall-cmd -q --add-port=<span class="string">&quot;<span class="variable">$port</span>&quot;</span>/udp</span><br><span class="line">firewall-cmd -q --zone=trusted --add-source=10.7.0.0/24</span><br><span class="line">firewall-cmd -q --permanent --add-port=<span class="string">&quot;<span class="variable">$port</span>&quot;</span>/udp</span><br><span class="line">firewall-cmd -q --permanent --zone=trusted --add-source=10.7.0.0/24</span><br><span class="line"><span class="comment"># Set NAT for the VPN subnet</span></span><br><span class="line">firewall-cmd -q --direct --add-rule ipv4 nat POSTROUTING 0 -s 10.7.0.0/24 ! -d 10.7.0.0/24 -j SNAT --to <span class="string">&quot;<span class="variable">$ip</span>&quot;</span></span><br><span class="line">firewall-cmd -q --permanent --direct --add-rule ipv4 nat POSTROUTING 0 -s 10.7.0.0/24 ! -d 10.7.0.0/24 -j SNAT --to <span class="string">&quot;<span class="variable">$ip</span>&quot;</span></span><br><span class="line"><span class="keyword">if</span> [[ -n <span class="string">&quot;<span class="variable">$ip6</span>&quot;</span> ]]; <span class="keyword">then</span></span><br><span class="line">firewall-cmd -q --zone=trusted --add-source=fddd:2c4:2c4:2c4::/64</span><br><span class="line">firewall-cmd -q --permanent --zone=trusted --add-source=fddd:2c4:2c4:2c4::/64</span><br><span class="line">firewall-cmd -q --direct --add-rule ipv6 nat POSTROUTING 0 -s fddd:2c4:2c4:2c4::/64 ! -d fddd:2c4:2c4:2c4::/64 -j SNAT --to <span class="string">&quot;<span class="variable">$ip6</span>&quot;</span></span><br><span class="line">firewall-cmd -q --permanent --direct --add-rule ipv6 nat POSTROUTING 0 -s fddd:2c4:2c4:2c4::/64 ! -d fddd:2c4:2c4:2c4::/64 -j SNAT --to <span class="string">&quot;<span class="variable">$ip6</span>&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="comment"># Create a service to set up persistent iptables rules</span></span><br><span class="line">iptables_path=$(<span class="built_in">command</span> -v iptables)</span><br><span class="line">ip6tables_path=$(<span class="built_in">command</span> -v ip6tables)</span><br><span class="line"><span class="comment"># nf_tables is not available as standard in OVZ kernels. So use iptables-legacy</span></span><br><span class="line"><span class="comment"># if we are in OVZ, with a nf_tables backend and iptables-legacy is available.</span></span><br><span class="line"><span class="keyword">if</span> [[ $(systemd-detect-virt) == <span class="string">&quot;openvz&quot;</span> ]] &amp;&amp; <span class="built_in">readlink</span> -f <span class="string">&quot;<span class="subst">$(command -v iptables)</span>&quot;</span> | grep -q <span class="string">&quot;nft&quot;</span> &amp;&amp; <span class="built_in">hash</span> iptables-legacy 2&gt;/dev/null; <span class="keyword">then</span></span><br><span class="line">iptables_path=$(<span class="built_in">command</span> -v iptables-legacy)</span><br><span class="line">ip6tables_path=$(<span class="built_in">command</span> -v ip6tables-legacy)</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;[Unit]</span></span><br><span class="line"><span class="string">Before=network.target</span></span><br><span class="line"><span class="string">[Service]</span></span><br><span class="line"><span class="string">Type=oneshot</span></span><br><span class="line"><span class="string">ExecStart=<span class="variable">$iptables_path</span> -t nat -A POSTROUTING -s 10.7.0.0/24 ! -d 10.7.0.0/24 -j SNAT --to <span class="variable">$ip</span></span></span><br><span class="line"><span class="string">ExecStart=<span class="variable">$iptables_path</span> -I INPUT -p udp --dport <span class="variable">$port</span> -j ACCEPT</span></span><br><span class="line"><span class="string">ExecStart=<span class="variable">$iptables_path</span> -I FORWARD -s 10.7.0.0/24 -j ACCEPT</span></span><br><span class="line"><span class="string">ExecStart=<span class="variable">$iptables_path</span> -I FORWARD -m state --state RELATED,ESTABLISHED -j ACCEPT</span></span><br><span class="line"><span class="string">ExecStop=<span class="variable">$iptables_path</span> -t nat -D POSTROUTING -s 10.7.0.0/24 ! -d 10.7.0.0/24 -j SNAT --to <span class="variable">$ip</span></span></span><br><span class="line"><span class="string">ExecStop=<span class="variable">$iptables_path</span> -D INPUT -p udp --dport <span class="variable">$port</span> -j ACCEPT</span></span><br><span class="line"><span class="string">ExecStop=<span class="variable">$iptables_path</span> -D FORWARD -s 10.7.0.0/24 -j ACCEPT</span></span><br><span class="line"><span class="string">ExecStop=<span class="variable">$iptables_path</span> -D FORWARD -m state --state RELATED,ESTABLISHED -j ACCEPT&quot;</span> &gt; /etc/systemd/system/wg-iptables.service</span><br><span class="line"><span class="keyword">if</span> [[ -n <span class="string">&quot;<span class="variable">$ip6</span>&quot;</span> ]]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;ExecStart=<span class="variable">$ip6tables_path</span> -t nat -A POSTROUTING -s fddd:2c4:2c4:2c4::/64 ! -d fddd:2c4:2c4:2c4::/64 -j SNAT --to <span class="variable">$ip6</span></span></span><br><span class="line"><span class="string">ExecStart=<span class="variable">$ip6tables_path</span> -I FORWARD -s fddd:2c4:2c4:2c4::/64 -j ACCEPT</span></span><br><span class="line"><span class="string">ExecStart=<span class="variable">$ip6tables_path</span> -I FORWARD -m state --state RELATED,ESTABLISHED -j ACCEPT</span></span><br><span class="line"><span class="string">ExecStop=<span class="variable">$ip6tables_path</span> -t nat -D POSTROUTING -s fddd:2c4:2c4:2c4::/64 ! -d fddd:2c4:2c4:2c4::/64 -j SNAT --to <span class="variable">$ip6</span></span></span><br><span class="line"><span class="string">ExecStop=<span class="variable">$ip6tables_path</span> -D FORWARD -s fddd:2c4:2c4:2c4::/64 -j ACCEPT</span></span><br><span class="line"><span class="string">ExecStop=<span class="variable">$ip6tables_path</span> -D FORWARD -m state --state RELATED,ESTABLISHED -j ACCEPT&quot;</span> &gt;&gt; /etc/systemd/system/wg-iptables.service</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;RemainAfterExit=yes</span></span><br><span class="line"><span class="string">[Install]</span></span><br><span class="line"><span class="string">WantedBy=multi-user.target&quot;</span> &gt;&gt; /etc/systemd/system/wg-iptables.service</span><br><span class="line">(</span><br><span class="line"><span class="built_in">set</span> -x</span><br><span class="line">systemctl <span class="built_in">enable</span> --now wg-iptables.service &gt;/dev/null 2&gt;&amp;1</span><br><span class="line">)</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">update_rclocal</span><br><span class="line"><span class="comment"># Generates the custom client.conf</span></span><br><span class="line">new_client_setup</span><br><span class="line"><span class="comment"># Enable and start the wg-quick service</span></span><br><span class="line">(</span><br><span class="line"><span class="built_in">set</span> -x</span><br><span class="line">systemctl <span class="built_in">enable</span> --now wg-quick@wg0.service &gt;/dev/null 2&gt;&amp;1</span><br><span class="line">)</span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">qrencode -t UTF8 &lt; <span class="string">&quot;$export_dir<span class="variable">$client</span>&quot;</span>.conf</span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&#x27;\xE2\x86\x91 That is a QR code containing the client configuration.&#x27;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line"><span class="comment"># If the kernel module didn&#x27;t load, system probably had an outdated kernel</span></span><br><span class="line"><span class="comment"># We&#x27;ll try to help, but will not force a kernel upgrade upon the user</span></span><br><span class="line"><span class="keyword">if</span> ! modprobe -nq wireguard; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Warning!&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Installation was finished, but the WireGuard kernel module could not load.&quot;</span></span><br><span class="line"><span class="keyword">if</span> [[ <span class="string">&quot;<span class="variable">$os</span>&quot;</span> == <span class="string">&quot;ubuntu&quot;</span> &amp;&amp; <span class="string">&quot;<span class="variable">$os_version</span>&quot;</span> -eq 1804 ]]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;Upgrade the kernel and headers with &quot;apt-get install linux-generic&quot; and restart.&#x27;</span></span><br><span class="line"><span class="keyword">elif</span> [[ <span class="string">&quot;<span class="variable">$os</span>&quot;</span> == <span class="string">&quot;debian&quot;</span> &amp;&amp; <span class="string">&quot;<span class="variable">$os_version</span>&quot;</span> -eq 10 ]]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Upgrade the kernel with \&quot;apt-get install linux-image-<span class="variable">$architecture</span>\&quot; and restart.&quot;</span></span><br><span class="line"><span class="keyword">elif</span> [[ <span class="string">&quot;<span class="variable">$os</span>&quot;</span> == <span class="string">&quot;centos&quot;</span> &amp;&amp; <span class="string">&quot;<span class="variable">$os_version</span>&quot;</span> -le 8 ]]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Reboot the system to load the most recent kernel.&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Finished!&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;The client configuration is available in: $export_dir<span class="variable">$client</span>.conf&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;New clients can be added by running this script again.&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">show_header</span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;WireGuard is already installed.&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Select an option:&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;   1) Add a new client&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;   2) List existing clients&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;   3) Remove an existing client&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;   4) Remove WireGuard&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;   5) Exit&quot;</span></span><br><span class="line"><span class="built_in">read</span> -rp <span class="string">&quot;Option: &quot;</span> option</span><br><span class="line"><span class="keyword">until</span> [[ <span class="string">&quot;<span class="variable">$option</span>&quot;</span> =~ ^[1-5]$ ]]; <span class="keyword">do</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$option</span>: invalid selection.&quot;</span></span><br><span class="line"><span class="built_in">read</span> -rp <span class="string">&quot;Option: &quot;</span> option</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$option</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">1)</span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Provide a name for the client:&quot;</span></span><br><span class="line"><span class="built_in">read</span> -rp <span class="string">&quot;Name: &quot;</span> unsanitized_client</span><br><span class="line">[ -z <span class="string">&quot;<span class="variable">$unsanitized_client</span>&quot;</span> ] &amp;&amp; abort_and_exit</span><br><span class="line">set_client_name</span><br><span class="line"><span class="keyword">while</span> [[ -z <span class="string">&quot;<span class="variable">$client</span>&quot;</span> ]] || grep -q <span class="string">&quot;^# BEGIN_PEER $client$&quot;</span> /etc/wireguard/wg0.conf; <span class="keyword">do</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$client</span>: invalid name.&quot;</span></span><br><span class="line"><span class="built_in">read</span> -rp <span class="string">&quot;Name: &quot;</span> unsanitized_client</span><br><span class="line">[ -z <span class="string">&quot;<span class="variable">$unsanitized_client</span>&quot;</span> ] &amp;&amp; abort_and_exit</span><br><span class="line">set_client_name</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line">new_client_dns</span><br><span class="line">new_client_setup</span><br><span class="line"><span class="comment"># Append new client configuration to the WireGuard interface</span></span><br><span class="line">wg addconf wg0 &lt;(sed -n <span class="string">&quot;/^# BEGIN_PEER <span class="variable">$client</span>/,/^# END_PEER <span class="variable">$client</span>/p&quot;</span> /etc/wireguard/wg0.conf)</span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">qrencode -t UTF8 &lt; <span class="string">&quot;$export_dir<span class="variable">$client</span>&quot;</span>.conf</span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&#x27;\xE2\x86\x91 That is a QR code containing the client configuration.&#x27;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$client</span> added. Configuration available in: $export_dir<span class="variable">$client</span>.conf&quot;</span></span><br><span class="line"><span class="built_in">exit</span></span><br><span class="line">;;</span><br><span class="line">2)</span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Checking for existing client(s)...&quot;</span></span><br><span class="line">number_of_clients=$(grep -c <span class="string">&#x27;^# BEGIN_PEER&#x27;</span> /etc/wireguard/wg0.conf)</span><br><span class="line"><span class="keyword">if</span> [[ <span class="string">&quot;<span class="variable">$number_of_clients</span>&quot;</span> = 0 ]]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;There are no existing clients!&quot;</span></span><br><span class="line"><span class="built_in">exit</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">grep <span class="string">&#x27;^# BEGIN_PEER&#x27;</span> /etc/wireguard/wg0.conf | <span class="built_in">cut</span> -d <span class="string">&#x27; &#x27;</span> -f 3 | <span class="built_in">nl</span> -s <span class="string">&#x27;) &#x27;</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$number_of_clients</span>&quot;</span> = 1 ]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">printf</span> <span class="string">&#x27;\n%s\n&#x27;</span> <span class="string">&quot;Total: 1 client&quot;</span></span><br><span class="line"><span class="keyword">elif</span> [ -n <span class="string">&quot;<span class="variable">$number_of_clients</span>&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">printf</span> <span class="string">&#x27;\n%s\n&#x27;</span> <span class="string">&quot;Total: <span class="variable">$number_of_clients</span> clients&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">;;</span><br><span class="line">3)</span><br><span class="line">number_of_clients=$(grep -c <span class="string">&#x27;^# BEGIN_PEER&#x27;</span> /etc/wireguard/wg0.conf)</span><br><span class="line"><span class="keyword">if</span> [[ <span class="string">&quot;<span class="variable">$number_of_clients</span>&quot;</span> = 0 ]]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;There are no existing clients!&quot;</span></span><br><span class="line"><span class="built_in">exit</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Select the client to remove:&quot;</span></span><br><span class="line">grep <span class="string">&#x27;^# BEGIN_PEER&#x27;</span> /etc/wireguard/wg0.conf | <span class="built_in">cut</span> -d <span class="string">&#x27; &#x27;</span> -f 3 | <span class="built_in">nl</span> -s <span class="string">&#x27;) &#x27;</span></span><br><span class="line"><span class="built_in">read</span> -rp <span class="string">&quot;Client: &quot;</span> client_number</span><br><span class="line">[ -z <span class="string">&quot;<span class="variable">$client_number</span>&quot;</span> ] &amp;&amp; abort_and_exit</span><br><span class="line"><span class="keyword">until</span> [[ <span class="string">&quot;<span class="variable">$client_number</span>&quot;</span> =~ ^[0-9]+$ &amp;&amp; <span class="string">&quot;<span class="variable">$client_number</span>&quot;</span> -le <span class="string">&quot;<span class="variable">$number_of_clients</span>&quot;</span> ]]; <span class="keyword">do</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$client_number</span>: invalid selection.&quot;</span></span><br><span class="line"><span class="built_in">read</span> -rp <span class="string">&quot;Client: &quot;</span> client_number</span><br><span class="line">[ -z <span class="string">&quot;<span class="variable">$client_number</span>&quot;</span> ] &amp;&amp; abort_and_exit</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line">client=$(grep <span class="string">&#x27;^# BEGIN_PEER&#x27;</span> /etc/wireguard/wg0.conf | <span class="built_in">cut</span> -d <span class="string">&#x27; &#x27;</span> -f 3 | sed -n <span class="string">&quot;<span class="variable">$client_number</span>&quot;</span>p)</span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line"><span class="built_in">read</span> -rp <span class="string">&quot;Confirm <span class="variable">$client</span> removal? [y/N]: &quot;</span> remove</span><br><span class="line"><span class="keyword">until</span> [[ <span class="string">&quot;<span class="variable">$remove</span>&quot;</span> =~ ^[yYnN]*$ ]]; <span class="keyword">do</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$remove</span>: invalid selection.&quot;</span></span><br><span class="line"><span class="built_in">read</span> -rp <span class="string">&quot;Confirm <span class="variable">$client</span> removal? [y/N]: &quot;</span> remove</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"><span class="keyword">if</span> [[ <span class="string">&quot;<span class="variable">$remove</span>&quot;</span> =~ ^[yY]$ ]]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Removing <span class="variable">$client</span>...&quot;</span></span><br><span class="line"><span class="comment"># The following is the right way to avoid disrupting other active connections:</span></span><br><span class="line"><span class="comment"># Remove from the live interface</span></span><br><span class="line">wg <span class="built_in">set</span> wg0 peer <span class="string">&quot;<span class="subst">$(sed -n <span class="string">&quot;/^# BEGIN_PEER $client$/,\$p&quot;</span> /etc/wireguard/wg0.conf | grep -m 1 PublicKey | cut -d <span class="string">&quot; &quot;</span> -f 3)</span>&quot;</span> remove</span><br><span class="line"><span class="comment"># Remove from the configuration file</span></span><br><span class="line">sed -i <span class="string">&quot;/^# BEGIN_PEER $client$/,/^# END_PEER $client$/d&quot;</span> /etc/wireguard/wg0.conf</span><br><span class="line">get_export_dir</span><br><span class="line">wg_file=<span class="string">&quot;$export_dir<span class="variable">$client</span>.conf&quot;</span></span><br><span class="line"><span class="keyword">if</span> [ -f <span class="string">&quot;<span class="variable">$wg_file</span>&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Removing <span class="variable">$wg_file</span>...&quot;</span></span><br><span class="line"><span class="built_in">rm</span> -f <span class="string">&quot;<span class="variable">$wg_file</span>&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$client</span> removed!&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$client</span> removal aborted!&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">exit</span></span><br><span class="line">;;</span><br><span class="line">4)</span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line"><span class="built_in">read</span> -rp <span class="string">&quot;Confirm WireGuard removal? [y/N]: &quot;</span> remove</span><br><span class="line"><span class="keyword">until</span> [[ <span class="string">&quot;<span class="variable">$remove</span>&quot;</span> =~ ^[yYnN]*$ ]]; <span class="keyword">do</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$remove</span>: invalid selection.&quot;</span></span><br><span class="line"><span class="built_in">read</span> -rp <span class="string">&quot;Confirm WireGuard removal? [y/N]: &quot;</span> remove</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"><span class="keyword">if</span> [[ <span class="string">&quot;<span class="variable">$remove</span>&quot;</span> =~ ^[yY]$ ]]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Removing WireGuard, please wait...&quot;</span></span><br><span class="line">port=$(grep <span class="string">&#x27;^ListenPort&#x27;</span> /etc/wireguard/wg0.conf | <span class="built_in">cut</span> -d <span class="string">&quot; &quot;</span> -f 3)</span><br><span class="line"><span class="keyword">if</span> systemctl is-active --quiet firewalld.service; <span class="keyword">then</span></span><br><span class="line">ip=$(firewall-cmd --direct --get-rules ipv4 nat POSTROUTING | grep <span class="string">&#x27;\-s 10.7.0.0/24 &#x27;</span><span class="string">&quot;&#x27;&quot;</span><span class="string">&#x27;!&#x27;</span><span class="string">&quot;&#x27;&quot;</span><span class="string">&#x27; -d 10.7.0.0/24&#x27;</span> | grep -oE <span class="string">&#x27;[^ ]+$&#x27;</span>)</span><br><span class="line"><span class="comment"># Using both permanent and not permanent rules to avoid a firewalld reload.</span></span><br><span class="line">firewall-cmd -q --remove-port=<span class="string">&quot;<span class="variable">$port</span>&quot;</span>/udp</span><br><span class="line">firewall-cmd -q --zone=trusted --remove-source=10.7.0.0/24</span><br><span class="line">firewall-cmd -q --permanent --remove-port=<span class="string">&quot;<span class="variable">$port</span>&quot;</span>/udp</span><br><span class="line">firewall-cmd -q --permanent --zone=trusted --remove-source=10.7.0.0/24</span><br><span class="line">firewall-cmd -q --direct --remove-rule ipv4 nat POSTROUTING 0 -s 10.7.0.0/24 ! -d 10.7.0.0/24 -j SNAT --to <span class="string">&quot;<span class="variable">$ip</span>&quot;</span></span><br><span class="line">firewall-cmd -q --permanent --direct --remove-rule ipv4 nat POSTROUTING 0 -s 10.7.0.0/24 ! -d 10.7.0.0/24 -j SNAT --to <span class="string">&quot;<span class="variable">$ip</span>&quot;</span></span><br><span class="line"><span class="keyword">if</span> grep -qs <span class="string">&#x27;fddd:2c4:2c4:2c4::1/64&#x27;</span> /etc/wireguard/wg0.conf; <span class="keyword">then</span></span><br><span class="line">ip6=$(firewall-cmd --direct --get-rules ipv6 nat POSTROUTING | grep <span class="string">&#x27;\-s fddd:2c4:2c4:2c4::/64 &#x27;</span><span class="string">&quot;&#x27;&quot;</span><span class="string">&#x27;!&#x27;</span><span class="string">&quot;&#x27;&quot;</span><span class="string">&#x27; -d fddd:2c4:2c4:2c4::/64&#x27;</span> | grep -oE <span class="string">&#x27;[^ ]+$&#x27;</span>)</span><br><span class="line">firewall-cmd -q --zone=trusted --remove-source=fddd:2c4:2c4:2c4::/64</span><br><span class="line">firewall-cmd -q --permanent --zone=trusted --remove-source=fddd:2c4:2c4:2c4::/64</span><br><span class="line">firewall-cmd -q --direct --remove-rule ipv6 nat POSTROUTING 0 -s fddd:2c4:2c4:2c4::/64 ! -d fddd:2c4:2c4:2c4::/64 -j SNAT --to <span class="string">&quot;<span class="variable">$ip6</span>&quot;</span></span><br><span class="line">firewall-cmd -q --permanent --direct --remove-rule ipv6 nat POSTROUTING 0 -s fddd:2c4:2c4:2c4::/64 ! -d fddd:2c4:2c4:2c4::/64 -j SNAT --to <span class="string">&quot;<span class="variable">$ip6</span>&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">systemctl <span class="built_in">disable</span> --now wg-iptables.service</span><br><span class="line"><span class="built_in">rm</span> -f /etc/systemd/system/wg-iptables.service</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">systemctl <span class="built_in">disable</span> --now wg-quick@wg0.service</span><br><span class="line"><span class="built_in">rm</span> -f /etc/sysctl.d/99-wireguard-forward.conf /etc/sysctl.d/99-wireguard-optimize.conf</span><br><span class="line"><span class="keyword">if</span> [ ! -f /usr/sbin/openvpn ] &amp;&amp; [ ! -f /usr/sbin/ipsec ] \</span><br><span class="line">&amp;&amp; [ ! -f /usr/local/sbin/ipsec ]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> 0 &gt; /proc/sys/net/ipv4/ip_forward</span><br><span class="line"><span class="built_in">echo</span> 0 &gt; /proc/sys/net/ipv6/conf/all/forwarding</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">ipt_cmd=<span class="string">&quot;systemctl restart wg-iptables.service&quot;</span></span><br><span class="line"><span class="keyword">if</span> grep -qs <span class="string">&quot;<span class="variable">$ipt_cmd</span>&quot;</span> /etc/rc.local; <span class="keyword">then</span></span><br><span class="line">sed --follow-symlinks -i <span class="string">&quot;/^<span class="variable">$ipt_cmd</span>/d&quot;</span> /etc/rc.local</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> [[ <span class="string">&quot;<span class="variable">$os</span>&quot;</span> == <span class="string">&quot;ubuntu&quot;</span> ]]; <span class="keyword">then</span></span><br><span class="line">(</span><br><span class="line"><span class="built_in">set</span> -x</span><br><span class="line"><span class="built_in">rm</span> -rf /etc/wireguard/</span><br><span class="line">apt-get remove --purge -y wireguard wireguard-tools &gt;/dev/null</span><br><span class="line">)</span><br><span class="line"><span class="keyword">elif</span> [[ <span class="string">&quot;<span class="variable">$os</span>&quot;</span> == <span class="string">&quot;debian&quot;</span> &amp;&amp; <span class="string">&quot;<span class="variable">$os_version</span>&quot;</span> -ge 11 ]]; <span class="keyword">then</span></span><br><span class="line">(</span><br><span class="line"><span class="built_in">set</span> -x</span><br><span class="line"><span class="built_in">rm</span> -rf /etc/wireguard/</span><br><span class="line">apt-get remove --purge -y wireguard wireguard-tools &gt;/dev/null</span><br><span class="line">)</span><br><span class="line"><span class="keyword">elif</span> [[ <span class="string">&quot;<span class="variable">$os</span>&quot;</span> == <span class="string">&quot;debian&quot;</span> &amp;&amp; <span class="string">&quot;<span class="variable">$os_version</span>&quot;</span> -eq 10 ]]; <span class="keyword">then</span></span><br><span class="line">(</span><br><span class="line"><span class="built_in">set</span> -x</span><br><span class="line"><span class="built_in">rm</span> -rf /etc/wireguard/</span><br><span class="line">apt-get remove --purge -y wireguard wireguard-dkms wireguard-tools &gt;/dev/null</span><br><span class="line">)</span><br><span class="line"><span class="keyword">elif</span> [[ <span class="string">&quot;<span class="variable">$os</span>&quot;</span> == <span class="string">&quot;centos&quot;</span> &amp;&amp; <span class="string">&quot;<span class="variable">$os_version</span>&quot;</span> -eq 9 ]]; <span class="keyword">then</span></span><br><span class="line">(</span><br><span class="line"><span class="built_in">set</span> -x</span><br><span class="line">yum -y -q remove wireguard-tools &gt;/dev/null</span><br><span class="line"><span class="built_in">rm</span> -rf /etc/wireguard/</span><br><span class="line">)</span><br><span class="line"><span class="keyword">elif</span> [[ <span class="string">&quot;<span class="variable">$os</span>&quot;</span> == <span class="string">&quot;centos&quot;</span> &amp;&amp; <span class="string">&quot;<span class="variable">$os_version</span>&quot;</span> -le 8 ]]; <span class="keyword">then</span></span><br><span class="line">(</span><br><span class="line"><span class="built_in">set</span> -x</span><br><span class="line">yum -y -q remove kmod-wireguard wireguard-tools &gt;/dev/null</span><br><span class="line"><span class="built_in">rm</span> -rf /etc/wireguard/</span><br><span class="line">)</span><br><span class="line"><span class="keyword">elif</span> [[ <span class="string">&quot;<span class="variable">$os</span>&quot;</span> == <span class="string">&quot;fedora&quot;</span> ]]; <span class="keyword">then</span></span><br><span class="line">(</span><br><span class="line"><span class="built_in">set</span> -x</span><br><span class="line">dnf remove -y wireguard-tools &gt;/dev/null</span><br><span class="line"><span class="built_in">rm</span> -rf /etc/wireguard/</span><br><span class="line">)</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;WireGuard removed!&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;WireGuard removal aborted!&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">exit</span></span><br><span class="line">;;</span><br><span class="line">5)</span><br><span class="line"><span class="built_in">exit</span></span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">## Defer setup until we have the complete script</span></span><br><span class="line">wgsetup <span class="string">&quot;<span class="variable">$@</span>&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">exit</span> 0</span><br></pre></td></tr></table></figure><hr><h2 id="WireGuard-客户端"><a href="#WireGuard-客户端" class="headerlink" title="WireGuard 客户端"></a>WireGuard 客户端</h2><blockquote><p>在 Ubuntu Server 20.04 虚拟机中演示</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">apt install wireguard resolvconf -y</span><br><span class="line"><span class="built_in">cd</span> /etc/wireguard/</span><br><span class="line"></span><br><span class="line">nano wg0.conf</span><br><span class="line"><span class="comment"># 将一键脚本生成的文件内容复制到这里</span></span><br></pre></td></tr></table></figure><blockquote><p>设置服务器开机自启动</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> wg-quick@wg0</span><br></pre></td></tr></table></figure><blockquote><p>启动 wireguard</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#启动 wg0</span></span><br><span class="line">wg-quick up wg0</span><br><span class="line"><span class="comment">#关闭 wg0</span></span><br><span class="line">wg-quick down wg0</span><br><span class="line"><span class="comment">#查看服务 wg</span></span><br><span class="line">wg</span><br></pre></td></tr></table></figure><hr><h2 id="一键部署-VPS"><a href="#一键部署-VPS" class="headerlink" title="一键部署 VPS"></a>一键部署 VPS</h2><blockquote><p>使用脚本完成云镜像备份</p></blockquote><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">docker stop data &amp;&amp; docker <span class="built_in">rm</span> data</span><br><span class="line">docker rmi rahn2029/data:3.0</span><br><span class="line"></span><br><span class="line">docker stop $(docker ps -aq)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">rm</span> /root/docker/Shell/build.sh</span><br><span class="line"><span class="built_in">cp</span> build.sh /root/docker/Shell/build.sh</span><br><span class="line"></span><br><span class="line"><span class="built_in">rm</span> /root/docker/Shell/vps.sh</span><br><span class="line"><span class="built_in">cp</span> vps.sh /root/docker/Shell/vps.sh</span><br><span class="line"></span><br><span class="line"><span class="built_in">rm</span> DockerFile</span><br><span class="line"><span class="built_in">rm</span> docker.zip</span><br><span class="line"><span class="built_in">rm</span> -rf /root/docker/Tachidesk-Server/data/thumbnails/*</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> /root/docker</span><br><span class="line">zip -r docker.zip *</span><br><span class="line"></span><br><span class="line"><span class="built_in">mv</span> docker.zip /root/docker.zip</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> /root</span><br><span class="line"></span><br><span class="line"><span class="built_in">cat</span> &lt;&lt;<span class="string">EOF &gt; DockerFile</span></span><br><span class="line"><span class="string">FROM rahn2029/ubuntu:2.0</span></span><br><span class="line"><span class="string">COPY docker.zip .</span></span><br><span class="line"><span class="string">RUN unzip docker.zip &amp;&amp; rm docker.zip</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">docker build -f DockerFile -t rahn2029/data:3.0 .</span><br><span class="line"></span><br><span class="line">docker start $(docker ps -aq)</span><br><span class="line"></span><br><span class="line">docker push rahn2029/data:3.0</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;\033[33m docker run -itd --name data rahn2029/data:3.0\033[0m&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;\033[33m docker exec -it data bash\033[0m&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;\033[33m docker cp data:/root <span class="subst">$(pwd)</span>/docker\033[0m&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br></pre></td></tr></table></figure><hr><blockquote><p>一键部署脚本</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#! /bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">red</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;\033[31m\033[01m<span class="variable">$1</span>\033[0m&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">green</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;\033[32m\033[01m<span class="variable">$1</span>\033[0m&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">yellow</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;\033[33m\033[01m<span class="variable">$1</span>\033[0m&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># AlistV3</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">alist</span></span>()&#123;</span><br><span class="line"><span class="built_in">cd</span> /root/docker/Alist</span><br><span class="line">docker-compose up -d</span><br><span class="line">ufw allow 5245/tcp</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># Nginx Proxy Manager</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">nginx_proxy_manager</span></span>()&#123;</span><br><span class="line"><span class="built_in">cd</span> /root/docker/Nginx-Proxy-Manager</span><br><span class="line">docker-compose up -d</span><br><span class="line">ufw allow 80/tcp</span><br><span class="line">ufw allow 81/tcp</span><br><span class="line">ufw allow 443/tcp</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># FreshRSS</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">freshrss</span></span>()&#123;</span><br><span class="line"><span class="built_in">cd</span> /root/docker/FreshRSS</span><br><span class="line">docker-compose up -d</span><br><span class="line">ufw allow 5380/tcp</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># Frps</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">frps</span></span>()&#123;</span><br><span class="line"><span class="built_in">cd</span> /root/docker/Frps</span><br><span class="line">docker-compose up -d</span><br><span class="line">ufw allow 9527/tcp</span><br><span class="line">ufw allow 52244/tcp</span><br><span class="line">ufw allow 17000:17100/tcp</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># Hnet</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">hnet</span></span>()&#123;</span><br><span class="line"><span class="built_in">cd</span> /root/docker/HNet</span><br><span class="line">docker-compose up -d</span><br><span class="line">ufw allow 5120/tcp</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># Invidious</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">invidious</span></span>()&#123;</span><br><span class="line"><span class="built_in">cd</span> /root/docker/Invidious</span><br><span class="line">docker-compose up -d</span><br><span class="line">ufw allow 5000/tcp</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># Minimalist-Web-Notepad</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">minimalist_web_notepad</span></span>()&#123;</span><br><span class="line"><span class="built_in">cd</span> /root/docker/Minimalist-Web-Notepad</span><br><span class="line">docker-compose up -d</span><br><span class="line">ufw allow 8006/tcp</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># Portainer-ce</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">portainer_ce</span></span>()&#123;</span><br><span class="line"><span class="built_in">cd</span> /root/docker/Portainer-ce</span><br><span class="line">docker-compose up -d</span><br><span class="line">ufw allow 9000/tcp</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># qBittorrent</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">qbittorrent</span></span>()&#123;</span><br><span class="line"><span class="built_in">cd</span> /root/docker/qBittorrent</span><br><span class="line">docker-compose up -d</span><br><span class="line">ufw allow 6881/tcp</span><br><span class="line">ufw allow 6881/udp</span><br><span class="line">ufw allow 8081/tcp</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># RustDesk</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">rustdesk</span></span>()&#123;</span><br><span class="line"><span class="built_in">cd</span> /root/docker/RustDesk</span><br><span class="line">docker-compose up -d</span><br><span class="line">ufw allow 21115/tcp</span><br><span class="line">ufw allow 21116/udp</span><br><span class="line">ufw allow 21116/tcp</span><br><span class="line">ufw allow 21118/tcp</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># Searxng</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">searxng</span></span>()&#123;</span><br><span class="line"><span class="built_in">cd</span> /root/docker/Searxng</span><br><span class="line">docker-compose up -d</span><br><span class="line">ufw allow 19000/tcp</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># Sshwifty</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">sshwifty</span></span>()&#123;</span><br><span class="line"><span class="built_in">cd</span> /root/docker/Sshwifty</span><br><span class="line">docker-compose up -d</span><br><span class="line">ufw allow 8090/tcp</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># Tachidesk-Server</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">tachidesk_server</span></span>()&#123;</span><br><span class="line"><span class="built_in">cd</span> /root/docker/Tachidesk-Server</span><br><span class="line">docker-compose up -d</span><br><span class="line">ufw allow 4567/tcp</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># X-UI</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">x_ui</span></span>()&#123;</span><br><span class="line"><span class="built_in">cd</span> /root/docker/X-UI</span><br><span class="line">docker-compose up -d</span><br><span class="line">ufw allow 54321/tcp</span><br><span class="line">ufw allow 54322/tcp</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># Data</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">data</span></span>()&#123;</span><br><span class="line">docker run -itd --name data rahn2029/data:3.0</span><br><span class="line">docker <span class="built_in">cp</span> data:/root /root/docker</span><br><span class="line">docker stop data &amp;&amp; docker <span class="built_in">rm</span> data</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># Wireguard</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">wireguard</span></span>()&#123;</span><br><span class="line">bash wireguard-install.sh --auto</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 一键安装</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">install_all</span></span>()&#123;</span><br><span class="line">del_docker</span><br><span class="line">alist</span><br><span class="line">nginx_proxy_manager</span><br><span class="line">frps</span><br><span class="line">freshrss</span><br><span class="line">hnet</span><br><span class="line">invidious</span><br><span class="line">minimalist_web_notepad</span><br><span class="line">portainer_ce</span><br><span class="line">qbittorrent</span><br><span class="line">rustdesk</span><br><span class="line">searxng</span><br><span class="line">sshwifty</span><br><span class="line">tachidesk_server</span><br><span class="line">x_ui</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 停止所有容器并删除</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">del_docker</span></span>()&#123;</span><br><span class="line">docker stop $(docker ps -aq) &amp;&amp; docker <span class="built_in">rm</span> $(docker ps -aq)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动所有容器</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">start_docker</span></span>()&#123;</span><br><span class="line">docker start $(docker ps -aq)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 云镜像备份</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">cloud_docker</span></span>()&#123;</span><br><span class="line"><span class="built_in">cd</span></span><br><span class="line">bash build.sh</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 开始菜单</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">start_menu</span></span>()&#123;</span><br><span class="line">clear</span><br><span class="line">yellow <span class="string">&quot;-----------------------------------------------&quot;</span></span><br><span class="line">red    <span class="string">&quot; VPS 一键部署&quot;</span></span><br><span class="line">yellow <span class="string">&quot;-----------------------------------------------&quot;</span></span><br><span class="line">green  <span class="string">&quot; 1. 安装 Wireguard VPN&quot;</span></span><br><span class="line">green  <span class="string">&quot; 2. 启动所有 Docker 服务&quot;</span></span><br><span class="line">green  <span class="string">&quot; 3. 停止所有容器并删除&quot;</span></span><br><span class="line">green  <span class="string">&quot; 4. 启动所有容器&quot;</span></span><br><span class="line">green  <span class="string">&quot; 5. 云镜像备份&quot;</span></span><br><span class="line">yellow <span class="string">&quot;-----------------------------------------------&quot;</span></span><br><span class="line">red    <span class="string">&quot; 0. 退出脚本&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line"><span class="built_in">read</span> -p <span class="string">&quot;请输入数字:&quot;</span> menuNumberInput</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$menuNumberInput</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">        1 )</span><br><span class="line">            wireguard</span><br><span class="line">;;</span><br><span class="line">        2 )</span><br><span class="line">            install_all</span><br><span class="line">;;</span><br><span class="line">        3 )</span><br><span class="line">            del_docker</span><br><span class="line">;;</span><br><span class="line">        4 )</span><br><span class="line">            start_docker</span><br><span class="line">;;</span><br><span class="line">        5 )</span><br><span class="line">            cloud_docker</span><br><span class="line">;;</span><br><span class="line">        0 )</span><br><span class="line">            <span class="built_in">exit</span></span><br><span class="line">;;</span><br><span class="line">        * )</span><br><span class="line">            clear</span><br><span class="line">            red <span class="string">&quot;请输入正确数字!&quot;</span></span><br><span class="line">            start_menu</span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line">&#125;</span><br><span class="line">start_menu</span><br></pre></td></tr></table></figure><hr><blockquote><p>镜像介绍</p></blockquote><table><thead><tr><th align="left">容器名</th><th>版本</th><th>镜像 ID</th><th>创建时间</th><th>大小</th><th align="left">镜像来源</th></tr></thead><tbody><tr><td align="left">rahn2029&#x2F;static-website</td><td>1.0</td><td>9b08b9509c32</td><td>10个月前</td><td>154kB</td><td align="left">lipanski&#x2F;docker-static-website</td></tr><tr><td align="left">rahn2029&#x2F;unzip</td><td>1.0</td><td>a7fd4893e179</td><td>22小时前</td><td>7.67MB</td><td align="left">DockerFile</td></tr><tr><td align="left">rahn2029&#x2F;tachidesk-server</td><td>2.0</td><td>4e36217d4b6d</td><td>22小时前</td><td>477MB</td><td align="left">DockerFile</td></tr><tr><td align="left">rahn2029&#x2F;rustdesk-server</td><td>2.0</td><td>e7bcb13bae81</td><td>32小时前</td><td>96.3MB</td><td align="left">rustdesk&#x2F;rustdesk-server</td></tr><tr><td align="left">rahn2029&#x2F;searxng</td><td>1.0</td><td>a527033be222</td><td>40小时前</td><td>214MB</td><td align="left">searxng&#x2F;searxng</td></tr><tr><td align="left">rahn2029&#x2F;freshrss</td><td>1.0</td><td>5ecda18f0465</td><td>4天前</td><td>90.6MB</td><td align="left">linuxserver&#x2F;freshrss</td></tr><tr><td align="left">rahn2029&#x2F;qbittorrent</td><td>1.0</td><td>353fb91c21d9</td><td>5天前</td><td>203MB</td><td align="left">linuxserver&#x2F;qbittorrent</td></tr><tr><td align="left">rahn2029&#x2F;invidious</td><td>1.0</td><td>f528e1f63fa4</td><td>8天前</td><td>88.7MB</td><td align="left">quay.io&#x2F;invidious&#x2F;invidious</td></tr><tr><td align="left">rahn2029&#x2F;alist</td><td>1.0</td><td>092788668bf3</td><td>12天前</td><td>57.3MB</td><td align="left">xhofe&#x2F;alist</td></tr><tr><td align="left">rahn2029&#x2F;postgres</td><td>14</td><td>db0d0947787d</td><td>2周前</td><td>409MB</td><td align="left">postgres:14</td></tr><tr><td align="left">rahn2029&#x2F;sshwifty</td><td>1.0</td><td>bb393e797965</td><td>3周前</td><td>44.8MB</td><td align="left">niruix&#x2F;sshwifty</td></tr><tr><td align="left">rahn2029&#x2F;hnet-web</td><td>2.0</td><td>161a86d19013</td><td>3周前</td><td>187MB</td><td align="left">DockerFile</td></tr><tr><td align="left">rahn2029&#x2F;frps</td><td>1.0</td><td>55a6c011f083</td><td>4周前</td><td>21.6MB</td><td align="left">snowdreamtech&#x2F;frps</td></tr><tr><td align="left">rahn2029&#x2F;minimalist-web-notepad</td><td>1.0</td><td>23a17d351527</td><td>5周前</td><td>453MB</td><td align="left">DockerFile</td></tr><tr><td align="left">rahn2029&#x2F;nginx-proxy-manager</td><td>1.0</td><td>219fa0ba0547</td><td>7周前</td><td>843MB</td><td align="left">jc21&#x2F;nginx-proxy-manager</td></tr><tr><td align="left">rahn2029&#x2F;portainer-ce</td><td>1.0</td><td>137697186d7a</td><td>6个月前</td><td>312MB</td><td align="left">6053537&#x2F;portainer-ce</td></tr><tr><td align="left">rahn2029&#x2F;x-ui</td><td>1.0</td><td>964ae47eac57</td><td>7个月前</td><td>156MB</td><td align="left">stilleshan&#x2F;x-ui</td></tr><tr><td align="left">rahn2029&#x2F;ubuntu</td><td>1.0</td><td>f73ea80e4243</td><td>5 小时前</td><td>72.8                                   MB</td><td align="left">ubuntu:20.04</td></tr><tr><td align="left">rahn2029&#x2F;ubuntu</td><td>2.0</td><td>5a7811fdca72</td><td>5 小时前</td><td>118MB</td><td align="left">rahn2029&#x2F;ubuntu:1.0</td></tr></tbody></table><hr><h2 id="镜像信息"><a href="#镜像信息" class="headerlink" title="镜像信息"></a>镜像信息</h2><blockquote><p>rahn2029&#x2F;ubuntu</p></blockquote><ol><li><code>rahn2029/ubuntu:1.0</code> 设置工作目录 <code>/root</code>  </li><li><code>rahn2029/ubuntu:2.0</code>  <code>apt update</code> <code>apt install unzip</code>  添加了解压功能</li></ol><hr><p>WireGuard 官方：<a href="https://www.wireguard.com/install/">https://www.wireguard.com/install/</a></p><p>WireGuard 脚本：<a href="https://github.com/hwdsl2/wireguard-install">https://github.com/hwdsl2/wireguard-install</a></p><hr><p></p>]]></content>
      
      
      <categories>
          
          <category> Docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vps </tag>
            
            <tag> WireGuard </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Docker —— 安装</title>
      <link href="/2023/06/28/docker/"/>
      <url>/2023/06/28/docker/</url>
      
        <content type="html"><![CDATA[<h1 id="Docker"><a href="#Docker" class="headerlink" title="Docker"></a>Docker</h1><blockquote><p>Docker Docker-Compose 安装教程。</p></blockquote><hr><h2 id="Ubuntu-安装"><a href="#Ubuntu-安装" class="headerlink" title="Ubuntu 安装"></a>Ubuntu 安装</h2><blockquote><p>安装</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">apt install docker.io</span><br><span class="line">apt install docker-compose</span><br></pre></td></tr></table></figure><blockquote><p>卸载</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">apt remove docker.io</span><br><span class="line">apt remove docker-compose</span><br></pre></td></tr></table></figure><hr><blockquote><p>启动服务</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl start docker</span><br></pre></td></tr></table></figure><blockquote><p>停止服务</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl stop docker</span><br></pre></td></tr></table></figure><blockquote><p>重启服务</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart docker</span><br></pre></td></tr></table></figure><blockquote><p>开机自启动</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> docker</span><br></pre></td></tr></table></figure><blockquote><p>从开机自启动中移除</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl <span class="built_in">disable</span> docker</span><br></pre></td></tr></table></figure><blockquote><p>重新加载指定服务配置</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl reload docker</span><br></pre></td></tr></table></figure><hr><h2 id="离线安装"><a href="#离线安装" class="headerlink" title="离线安装"></a>离线安装</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">curl -SL https://github.com/docker/compose/releases/download/v2.19.0/docker-compose-linux-x86_64 -o /usr/local/bin/docker-compose</span><br><span class="line"></span><br><span class="line">curl -SL <span class="string">&quot;https://github.com/docker/compose/releases/latest/download/docker-compose-<span class="subst">$(uname -s)</span>-<span class="subst">$(uname -m)</span>&quot;</span> -o /usr/local/bin/docker-compose</span><br><span class="line"></span><br><span class="line"><span class="built_in">chmod</span> +x /usr/local/bin/docker-compose</span><br><span class="line"><span class="built_in">ln</span> -s /usr/local/bin/docker-compose /usr/bin/docker-compose</span><br></pre></td></tr></table></figure><ol><li>下载静态二进制文件。访问 <a href="https://download.docker.com/linux/static/stable/">https://download.docker.com/linux/static/stable/</a> 进行下载</li><li>提取文件</li><li>将二进制文件复制到可执行路径上的目录</li><li>启动 Docker 守护进程</li><li>查看服务状态</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">tar xzvf docker-20.10.21.tgz</span><br><span class="line"></span><br><span class="line"><span class="built_in">cp</span> docker/* /usr/bin/</span><br><span class="line"></span><br><span class="line">dockerd &amp;</span><br><span class="line"></span><br><span class="line">systemctl status docker</span><br></pre></td></tr></table></figure><hr><p>软件下载：<a href="https://download.docker.com/linux/static/stable/x86_64/">https://download.docker.com/linux/static/stable/x86_64/</a></p><p>官方文档：<a href="https://docs.docker.com/engine/install/binaries/">https://docs.docker.com/engine/install/binaries/</a></p><p>软件下载：<a href="https://github.com/docker/compose/releases/">https://github.com/docker/compose/releases/</a></p><p>官方文档：<a href="https://docs.docker.com/compose/install/standalone/">https://docs.docker.com/compose/install/standalone/</a></p><hr><p></p>]]></content>
      
      
      <categories>
          
          <category> Docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker-compose </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Code Server —— Visual Studio Code 网页版</title>
      <link href="/2023/06/27/Code-Server/"/>
      <url>/2023/06/27/Code-Server/</url>
      
        <content type="html"><![CDATA[<h1 id="Code-Server"><a href="#Code-Server" class="headerlink" title="Code Server"></a>Code Server</h1><blockquote><p>Code Server 是一个基于 Visual Studio Code 的网页版开发环境，它允许您通过浏览器访问和使用 Visual Studio Code 的功能。</p></blockquote><hr><h2 id="Docker-Run"><a href="#Docker-Run" class="headerlink" title="Docker Run"></a>Docker Run</h2><blockquote><p>创建容器并运行</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">docker run -d \</span><br><span class="line">  --name=code-server \</span><br><span class="line">  -e PUID=0 \</span><br><span class="line">  -e PGID=0 \</span><br><span class="line">  -e TZ=Asia/Shanghai \</span><br><span class="line">  -e DEFAULT_WORKSPACE=/config/workspace \</span><br><span class="line">  -p 8443:8443 \</span><br><span class="line">  -v /root/docker/Code-Server/config:/config \</span><br><span class="line">  -v /root/docker:/config/workspace \</span><br><span class="line">  --restart unless-stopped \</span><br><span class="line">  lscr.io/linuxserver/code-server:latest</span><br></pre></td></tr></table></figure><blockquote><p>停止容器并删除</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker stop code-server &amp;&amp; docker <span class="built_in">rm</span> code-server</span><br></pre></td></tr></table></figure><blockquote><p>容器运行时的 shell 访问</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="built_in">exec</span> -it code-server /bin/bash</span><br></pre></td></tr></table></figure><blockquote><p>实时监控容器的日志</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker logs -f code-server</span><br></pre></td></tr></table></figure><blockquote><p>容器版本号</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker inspect -f <span class="string">&#x27;&#123;&#123; index .Config.Labels &quot;build_version&quot; &#125;&#125;&#x27;</span> code-server</span><br></pre></td></tr></table></figure><blockquote><p>镜像版本号</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker inspect -f <span class="string">&#x27;&#123;&#123; index .Config.Labels &quot;build_version&quot; &#125;&#125;&#x27;</span> lscr.io/linuxserver/code-server:latest</span><br></pre></td></tr></table></figure><hr><h2 id="Docker-Compose"><a href="#Docker-Compose" class="headerlink" title="Docker Compose"></a>Docker Compose</h2><blockquote><p>创建 <code>docker-compose.yaml</code> 文件</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nano docker-compose.yaml</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">version: <span class="string">&quot;2.1&quot;</span></span><br><span class="line">services:</span><br><span class="line">  code-server:</span><br><span class="line">    image: linuxserver/code-server:latest</span><br><span class="line">    container_name: code-server</span><br><span class="line">    environment:</span><br><span class="line">      - PUID=0</span><br><span class="line">      - PGID=0</span><br><span class="line">      - TZ=Asia/Shanghai</span><br><span class="line">      - DEFAULT_WORKSPACE=/config/workspace</span><br><span class="line">      - PROXY_DOMAIN=https://nascodeserver.rahn.top</span><br><span class="line">      <span class="comment">#- PASSWORD= #Web UI 登陆密码</span></span><br><span class="line">    volumes:</span><br><span class="line">      - ./config:/config</span><br><span class="line">      - /root/docker:/config/workspace</span><br><span class="line">    ports:</span><br><span class="line">      - 8443:8443</span><br><span class="line">    restart: unless-stopped</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose up -d</span><br></pre></td></tr></table></figure><blockquote><p>打开 <code>8443</code> 端口</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ufw allow 8443/tcp</span><br></pre></td></tr></table></figure><hr><h2 id="一键脚本"><a href="#一键脚本" class="headerlink" title="一键脚本"></a>一键脚本</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#! /bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">red</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;\033[31m\033[01m<span class="variable">$1</span>\033[0m&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">green</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;\033[32m\033[01m<span class="variable">$1</span>\033[0m&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">yellow</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;\033[33m\033[01m<span class="variable">$1</span>\033[0m&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Code Server</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> code-<span class="function"><span class="title">server_install</span></span>()&#123;</span><br><span class="line"><span class="keyword">if</span> nc -z localhost 8443; <span class="keyword">then</span></span><br><span class="line">green <span class="string">&quot; 8443 端口已经被占用，请检查相关进程。&quot;</span></span><br><span class="line"><span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> docker ps -a --format <span class="string">&quot;&#123;&#123;.Names&#125;&#125;&quot;</span> | grep -q <span class="string">&quot;code-server&quot;</span>; <span class="keyword">then</span></span><br><span class="line">green <span class="string">&quot; code-server 容器名已经被占用&quot;</span></span><br><span class="line"><span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> [ ! -d /root/docker/Code-Server ]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">mkdir</span> -p /root/docker/Code-Server</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">cd</span> /root/docker/Code-Server</span><br><span class="line"><span class="keyword">if</span> [ -f <span class="string">&quot;docker-compose.yaml&quot;</span> ] || [ -f <span class="string">&quot;docker-compose.yml&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">green <span class="string">&quot; docker-compose 文件已经存在, 跳过创建 docker-compose.yaml 步骤&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">cat</span> &lt;&lt;<span class="string">EOF &gt; docker-compose.yaml</span></span><br><span class="line"><span class="string">---</span></span><br><span class="line"><span class="string">version: &quot;2.1&quot;</span></span><br><span class="line"><span class="string">services:</span></span><br><span class="line"><span class="string">  code-server:</span></span><br><span class="line"><span class="string">    image: linuxserver/code-server:latest</span></span><br><span class="line"><span class="string">    container_name: code-server</span></span><br><span class="line"><span class="string">    environment:</span></span><br><span class="line"><span class="string">      - PUID=</span></span><br><span class="line"><span class="string">      - PGID=</span></span><br><span class="line"><span class="string">      - TZ=Asia/Shanghai</span></span><br><span class="line"><span class="string">      - DEFAULT_WORKSPACE=/config/workspace</span></span><br><span class="line"><span class="string">      #- PASSWORD= #Web UI 登陆密码</span></span><br><span class="line"><span class="string">      #- PROXY_DOMAIN= #绑定域名</span></span><br><span class="line"><span class="string">    volumes:</span></span><br><span class="line"><span class="string">      - ./config:/config</span></span><br><span class="line"><span class="string">      - /root/docker:/config/workspace</span></span><br><span class="line"><span class="string">    ports:</span></span><br><span class="line"><span class="string">      - 8443:8443</span></span><br><span class="line"><span class="string">    restart: unless-stopped</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line">sed -i <span class="string">&quot;s/- PUID=/- PUID=<span class="subst">$(id -u)</span>/&quot;</span> docker-compose.yaml</span><br><span class="line">sed -i <span class="string">&quot;s/- PGID=/- PGID=<span class="subst">$(id -g)</span>/&quot;</span> docker-compose.yaml</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">docker-compose up -d</span><br><span class="line">ufw allow 8443/tcp</span><br><span class="line">yellow <span class="string">&quot;-----------------------------------------------&quot;</span></span><br><span class="line">green <span class="string">&quot; Web 端口：8443&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">green <span class="string">&quot; Docker IP = <span class="subst">$(ip addr show docker0 | grep &#x27;inet\b&#x27; | awk &#x27;&#123;print $2&#125;&#x27; | cut -d &#x27;/&#x27; -f1)</span>:8443&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">green <span class="string">&quot; Web 网址  = http://<span class="subst">$(ifconfig $(ifconfig | grep -oP &#x27;enp\w+&#x27;)</span> | grep &#x27;inet &#x27; | awk &#x27;&#123;print <span class="variable">$2</span>&#125;&#x27;):8443&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">green <span class="string">&quot; Code Server 安装完毕！&quot;</span></span><br><span class="line">yellow <span class="string">&quot;-----------------------------------------------&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">code-server_install</span><br></pre></td></tr></table></figure><hr><h2 id="数据备份"><a href="#数据备份" class="headerlink" title="数据备份"></a>数据备份</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 备份</span></span><br><span class="line"><span class="built_in">cd</span> /root/docker</span><br><span class="line">tar czvf Code-Server.tar Code-Server</span><br><span class="line">zip -r Code-Server.zip Code-Server</span><br><span class="line"></span><br><span class="line"><span class="comment"># 解压</span></span><br><span class="line">tar xzvf Code-Server.tar</span><br><span class="line">unzip Code-Server.zip</span><br></pre></td></tr></table></figure><hr><h2 id="内网穿透"><a href="#内网穿透" class="headerlink" title="内网穿透"></a>内网穿透</h2><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[code-server]</span></span><br><span class="line"><span class="attr">type</span> = tcp</span><br><span class="line"><span class="attr">local_ip</span> = <span class="number">127.0</span>.<span class="number">0.1</span></span><br><span class="line"><span class="attr">local_port</span> = <span class="number">8443</span></span><br><span class="line"><span class="attr">remote_port</span> = <span class="number">17014</span></span><br><span class="line"><span class="attr">custom_domains</span> = nascodeserver.rahn.top</span><br></pre></td></tr></table></figure><hr><p>项目地址：<a href="https://docs.linuxserver.io/images/docker-code-server">https://docs.linuxserver.io/images/docker-code-server</a></p><hr><p></p>]]></content>
      
      
      <categories>
          
          <category> Docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linuxserver </tag>
            
            <tag> VSCode Server </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo 部署至 Github Pages</title>
      <link href="/2023/06/25/github%E9%83%A8%E7%BD%B2/"/>
      <url>/2023/06/25/github%E9%83%A8%E7%BD%B2/</url>
      
        <content type="html"><![CDATA[<h1 id="Github-Pages"><a href="#Github-Pages" class="headerlink" title="Github Pages"></a>Github Pages</h1><blockquote><p>部署的过程全部在 Docker 容器内部进行，使用的镜像为 <code>rahn2029/hexo-github</code> 。</p></blockquote><hr><h2 id="Hexo-部署"><a href="#Hexo-部署" class="headerlink" title="Hexo 部署"></a>Hexo 部署</h2><ol><li>进入容器内部</li><li>配置 Github 账户信息</li><li>生成 SSH</li><li>将 <code>id_rsa.pub</code> 内容复制到 <a href="https://github.com/settings/keys">Github</a> 中</li><li>修改 <code>hexo</code> 根目录中的  <code>_config.yml </code> 文件，在最底部找到 <code>deploy:</code> ，填写如下内容(注意:冒号后面有个空格)</li><li>安装一键部署  <code>hexo-deployer-git</code></li><li>清理临时文件、缓存，将生成的静态网站部署到 Github</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="built_in">exec</span> -it hexo bash</span><br><span class="line"></span><br><span class="line">git config --global user.name <span class="string">&quot;18nome&quot;</span></span><br><span class="line">git config --global user.email <span class="string">&quot;rainsky9527@proton.me&quot;</span></span><br><span class="line"></span><br><span class="line">ssh-keygen -t rsa -C <span class="string">&quot;rainsky9527@proton.me&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> /root/.ssh</span><br><span class="line"><span class="built_in">ls</span></span><br><span class="line"><span class="built_in">cat</span> id_rsa.pub</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> /blog</span><br><span class="line"><span class="built_in">ls</span></span><br><span class="line">nano _config.yml</span><br></pre></td></tr></table></figure><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">&#x27;git&#x27;</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">&#x27;git@github.com:18nome/18nome.github.io.git&#x27;</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">master</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br><span class="line">hexo clean </span><br><span class="line">hexo generate</span><br><span class="line">hexo deploy</span><br><span class="line"><span class="built_in">exit</span></span><br></pre></td></tr></table></figure><hr><h2 id="一键部署脚本"><a href="#一键部署脚本" class="headerlink" title="一键部署脚本"></a>一键部署脚本</h2><ol><li>进入容器内部编写 <code>hexo-deploy.sh</code> 脚本</li><li>添加可执行权限后，退出容器</li><li>执行 <code>docker exec -it hexo bash hexo-deploy.sh</code> 完成部署</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="built_in">exec</span> -it hexo bash</span><br><span class="line">nano hexo-deploy.sh</span><br></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean </span><br><span class="line">hexo generate</span><br><span class="line">hexo deploy</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">chmod</span> +x hexo-deploy.sh</span><br><span class="line"><span class="built_in">exit</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="built_in">exec</span> -it hexo bash hexo-deploy.sh</span><br></pre></td></tr></table></figure><hr><p>官方文档：<a href="https://hexo.io/zh-cn/docs/one-command-deployment.html">https://hexo.io/zh-cn/docs/one-command-deployment.html</a></p><hr><p></p>]]></content>
      
      
      <categories>
          
          <category> Docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> github </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Quick Reference —— 速查手册</title>
      <link href="/2023/06/21/Quick-Reference/"/>
      <url>/2023/06/21/Quick-Reference/</url>
      
        <content type="html"><![CDATA[<h1 id="Quick-Reference"><a href="#Quick-Reference" class="headerlink" title="Quick Reference"></a>Quick Reference</h1><blockquote><p>为开发人员分享快速参考备忘清单(速查表)</p></blockquote><hr><h2 id="Docker-Run"><a href="#Docker-Run" class="headerlink" title="Docker Run"></a>Docker Run</h2><blockquote><p>创建容器并启动</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -itd -p 9667:3000 --restart=always --name quick-reference wcjiang/reference:latest</span><br></pre></td></tr></table></figure><blockquote><p>停止容器并删除</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker stop quick-reference &amp;&amp; docker <span class="built_in">rm</span> quick-reference</span><br></pre></td></tr></table></figure><hr><h2 id="Docker-Compose"><a href="#Docker-Compose" class="headerlink" title="Docker-Compose"></a>Docker-Compose</h2><blockquote><p>创建 <code>docker-compose.yml</code> 文件</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nano docker-compose.yml</span><br></pre></td></tr></table></figure><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&#x27;3.3&#x27;</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">    <span class="attr">reference:</span></span><br><span class="line">        <span class="attr">container_name:</span> <span class="string">quick-reference</span></span><br><span class="line">        <span class="attr">ports:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">&#x27;9667:3000&#x27;</span></span><br><span class="line">        <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">&#x27;wcjiang/reference:latest&#x27;</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose up -d</span><br></pre></td></tr></table></figure><blockquote><p>打开 <code>9667</code> 端口</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ufw allow 9667/tcp</span><br></pre></td></tr></table></figure><hr><p>官方网站：<a href="https://github.com/jaywcjlove/reference">https://github.com/jaywcjlove/reference</a></p><hr><p></p>]]></content>
      
      
      <categories>
          
          <category> Docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Quick Reference </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Coder —— 远程开发环境</title>
      <link href="/2023/06/14/coder/"/>
      <url>/2023/06/14/coder/</url>
      
        <content type="html"><![CDATA[<h1 id="Coder"><a href="#Coder" class="headerlink" title="Coder"></a>Coder</h1><blockquote><p>Coder.com 是一个基于云的开发环境平台，旨在提供一个全功能的开发环境，使团队能够在同一个地方协作开发，从而提高生产力。它支持多种编程语言和框架，包括 Java、Python、Go、JavaScript 等等，并且还提供了各种开发工具，例如 Git、VS Code等等。</p></blockquote><hr><h2 id="Docker-Run"><a href="#Docker-Run" class="headerlink" title="Docker Run"></a>Docker Run</h2><blockquote><p>启动容器</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -itd -p 10000:8080 -u root --name code-server codercom/code-server</span><br></pre></td></tr></table></figure><blockquote><p>挂载 Web 登陆密码</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="built_in">cp</span> code-server:/root/.config/code-server/config.yaml $(<span class="built_in">pwd</span>)/config.yaml</span><br></pre></td></tr></table></figure><blockquote><p>查看 Web 登陆密码</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="built_in">exec</span> code-server <span class="built_in">cat</span> /root/.config/code-server/config.yaml</span><br></pre></td></tr></table></figure><blockquote><p>停止容器并删除</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker stop code-server &amp;&amp; docker <span class="built_in">rm</span> code-server</span><br></pre></td></tr></table></figure><hr><h2 id="Docker-Compose"><a href="#Docker-Compose" class="headerlink" title="Docker-Compose"></a>Docker-Compose</h2><blockquote><p>创建 <code>docker-compose.yml</code> 文件</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nano docker-compose.yml</span><br></pre></td></tr></table></figure><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&#x27;3.3&#x27;</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">    <span class="attr">code-server:</span></span><br><span class="line">        <span class="attr">user:</span> <span class="string">root</span></span><br><span class="line">        <span class="attr">ports:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">&#x27;10000:8080&#x27;</span></span><br><span class="line">        <span class="attr">container_name:</span> <span class="string">code-server</span></span><br><span class="line">        <span class="attr">volumes:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">&#x27;/root/docker:/home/code&#x27;</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">&#x27;./config.yaml:/root/.config/code-server/config.yaml&#x27;</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">codercom/code-server</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose up -d</span><br></pre></td></tr></table></figure><blockquote><p>打开 <code>10000</code> 端口</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ufw allow 10000/tcp</span><br></pre></td></tr></table></figure><hr><h2 id="自定义-Coder"><a href="#自定义-Coder" class="headerlink" title="自定义 Coder"></a>自定义 Coder</h2><ol><li>启动容器</li><li>获取 Web 登陆密码</li><li>安装中文汉化插件</li><li>安装 nodejs</li><li>安装 npm</li><li>安装 hexo-cli</li><li>修改 nodejs 时区</li><li>设置系统时间</li><li>设置 Web 密码为 <code>admin</code></li><li>生成 <code>rahn2029/vscode:1.0</code> 镜像</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker run -itd -p 10000:8080 -u root --name code-server codercom/code-server</span><br><span class="line"></span><br><span class="line">docker <span class="built_in">exec</span> code-server <span class="built_in">cat</span> /root/.config/code-server/config.yaml</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">apt update</span><br><span class="line">apt install nodejs</span><br><span class="line">apt install npm</span><br><span class="line">npm -v</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-cli -g</span><br><span class="line">hexo init blog</span><br><span class="line"><span class="built_in">cd</span> blog</span><br><span class="line">npm install</span><br><span class="line">hexo server</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 永久 profile 文件末尾添加 export TZ=Asia/Shanghai</span></span><br><span class="line">node -e <span class="string">&quot;console.log(new Date().toLocaleString())&quot;</span></span><br><span class="line">nano /etc/profile</span><br><span class="line"><span class="built_in">export</span> TZ=Asia/Shanghai</span><br><span class="line">node -e <span class="string">&quot;console.log(new Date().toLocaleString())&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 这样设置只是临时，重启后失效</span></span><br><span class="line">node -e <span class="string">&quot;console.log(new Date().toLocaleString())&quot;</span></span><br><span class="line"><span class="built_in">export</span> TZ=Asia/Shanghai</span><br><span class="line">node -e <span class="string">&quot;console.log(new Date().toLocaleString())&quot;</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">date</span> -R</span><br><span class="line">tzselect</span><br><span class="line"><span class="built_in">cp</span> /usr/share/zoneinfo/Asia/Shanghai /etc/localtime</span><br><span class="line"><span class="built_in">date</span> -R</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker commit 7c9b5d538f57 rahn2029/coder-hexo</span><br><span class="line">docker stop code-server &amp;&amp; docker <span class="built_in">rm</span> code-server</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -itd -p 10000:8080 -u root --name code-server rahn2029/vscode:1.0</span><br></pre></td></tr></table></figure><hr><h2 id="自定义-Docker-Compose"><a href="#自定义-Docker-Compose" class="headerlink" title="自定义 Docker-Compose"></a>自定义 Docker-Compose</h2><blockquote><p>创建 <code>docker-compose.yml</code> 文件</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nano docker-compose.yml</span><br></pre></td></tr></table></figure><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&#x27;3.3&#x27;</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">    <span class="attr">code-server:</span></span><br><span class="line">        <span class="attr">user:</span> <span class="string">root</span></span><br><span class="line">        <span class="attr">ports:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">&#x27;10000:8080&#x27;</span></span><br><span class="line">        <span class="attr">container_name:</span> <span class="string">coder</span></span><br><span class="line">        <span class="attr">volumes:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">&#x27;/root/docker:/home/code&#x27;</span></span><br><span class="line">            <span class="comment">#- &#x27;./config.yaml:/root/.config/code-server/config.yaml&#x27;</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">rahn2029/vscode:1.0</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose up -d</span><br></pre></td></tr></table></figure><blockquote><p>打开 <code>10000</code> 端口</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ufw allow 10000/tcp</span><br></pre></td></tr></table></figure><hr><h2 id="插件"><a href="#插件" class="headerlink" title="插件"></a>插件</h2><ol><li>Chinese (Simplified) (简体中文) Language Pack for Visual Studio Code</li></ol><hr><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p><code>/root/docker:/home/code</code> 将本地的项目进行挂载。 </p><p><code>./config.yaml:/root/.config/code-server/config.yaml</code> 挂载 Web 登陆密码。</p><p>在写一键脚本的时候，在 <code>sh</code> 中出现  <code>Error: No such container:path:</code>  容器路径错误，无法拷贝出内部文件，外部执行却可以拷贝出来，奇怪。</p><p>挂载内部文件变得不再重要，在自制镜像的当下，设置一个默认密码 <code>admin</code> 。</p><hr><p>官方网站：<a href="https://coder.com/">https://coder.com/</a></p><p>官方文档：<a href="https://coder.com/docs/code-server/latest/install#docker">https://coder.com/docs/code-server/latest/install#docker</a></p><hr><p></p>]]></content>
      
      
      <categories>
          
          <category> Docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> Coder </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Liunx 免密码登录 —— SSH 公钥/私钥</title>
      <link href="/2023/06/12/puttygen/"/>
      <url>/2023/06/12/puttygen/</url>
      
        <content type="html"><![CDATA[<h1 id="Liunx"><a href="#Liunx" class="headerlink" title="Liunx"></a>Liunx</h1><blockquote><p>在 Linux 系统中，SSH 协议是一种常用的远程连接协议。使用 SSH 协议连接到远程主机时，可以使用公钥&#x2F;私钥对进行身份验证，从而免去输入密码的步骤。</p><p>公钥&#x2F;私钥对是一种加密方式，公钥可以被任何人获得，而私钥只有拥有者知道。当需要进行身份验证时，用户将自己的公钥发送给服务器端，在建立连接时服务器端会向客户端发送一个挑战，客户端使用自己的私钥对挑战进行签名并将签名发送给服务器端。服务器使用预先保存的公钥来验证签名的有效性，如果验证成功，则认为用户身份合法。</p></blockquote><hr><h2 id="Puttygen-——-生成公钥与私钥"><a href="#Puttygen-——-生成公钥与私钥" class="headerlink" title="Puttygen —— 生成公钥与私钥"></a>Puttygen —— 生成公钥与私钥</h2><ol><li>打开软件，点击 <code>Generate</code> 生成，鼠标需要在进度条内移动加速生成</li><li>来到需要被免密登录的服务器，创建 <code>.ssh</code> 文件夹，赋予读、写、执行的权限（700）</li><li>创建  <code>authorized_keys</code>  文件，实现用户无需输入密码即可进行远程登录</li><li>设置  <code>authorized_keys</code>  文件，赋予读写的权限（600）</li><li>将私钥保存到本地，使用 <code>putty</code> 软件进行免密连接</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> ~/.ssh &amp;&amp; <span class="built_in">chmod</span> 700 ~/.ssh</span><br><span class="line"><span class="built_in">cd</span> ~/.ssh</span><br><span class="line">nano authorized_keys</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDMwe3w4S9SI8pjYMVnibPllQ2b33oB8fx8ZIp/GnyDG/qDdvMZcAYy1M+tmnOk9MViKzFu4agNH70GkdHtHeqzntrizVfdD80JTxigKE/35wEnOdk1k6BvpSCYMMBIqPnmjiXYMBbSDryQCixLJw+7LqYSL9C8+mOSlnzWVQfgdd6kmHzgSrlzn0xiiqOMwGZWn50dXSv8EVIHriqzp/IqD4RDWyqEhKolrZcAl3ukYqZTkkpHNF8YNM0cbKIQbFHHsW8LdCUPh+yZ3OTY9wS4nFmj9eVGHZw4lkBGB8vcHnnu69bW0XYQe/9GKQqOCuolNon9zcky0d9wuKp84Jaz rsa-key-20230612</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">chmod</span> 600 authorized_keys</span><br><span class="line"><span class="built_in">cd</span></span><br><span class="line"><span class="built_in">ls</span> -ald .ssh .ssh/authorized_keys</span><br></pre></td></tr></table></figure><hr><h2 id="私钥"><a href="#私钥" class="headerlink" title="私钥"></a>私钥</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">PuTTY-User-Key-File-3: ssh-rsa</span><br><span class="line">Encryption: none</span><br><span class="line">Comment: rsa-key-20230612</span><br><span class="line">Public-Lines: 6</span><br><span class="line">AAAAB3NzaC1yc2EAAAADAQABAAABAQDMwe3w4S9SI8pjYMVnibPllQ2b33oB8fx8</span><br><span class="line">ZIp/GnyDG/qDdvMZcAYy1M+tmnOk9MViKzFu4agNH70GkdHtHeqzntrizVfdD80J</span><br><span class="line">TxigKE/35wEnOdk1k6BvpSCYMMBIqPnmjiXYMBbSDryQCixLJw+7LqYSL9C8+mOS</span><br><span class="line">lnzWVQfgdd6kmHzgSrlzn0xiiqOMwGZWn50dXSv8EVIHriqzp/IqD4RDWyqEhKol</span><br><span class="line">rZcAl3ukYqZTkkpHNF8YNM0cbKIQbFHHsW8LdCUPh+yZ3OTY9wS4nFmj9eVGHZw4</span><br><span class="line">lkBGB8vcHnnu69bW0XYQe/9GKQqOCuolNon9zcky0d9wuKp84Jaz</span><br><span class="line">Private-Lines: 14</span><br><span class="line">AAABAQCL2aEEtyk09xES01PBJgJjOmzzG64figIjjCA0NAj7G678/8+GfkcdjNDU</span><br><span class="line">B/wYnL38EPhQfXvkitr2k75IL/jP+h4SbqImcNZgF1AAg8gqz/KvsgkzWMNpveUH</span><br><span class="line">TbTna9JTsJ8Ui7PqgPo1f11Fb0aFWJVBMrtld7duta5KTgV1PpIYR+kzuY3C6dLO</span><br><span class="line">zoGs0XgEmSqgx33YVZD99387DEESvLieqbjs+1MhVvWBl5ogLD9sFPjXVqrj7Njh</span><br><span class="line">InmcNI2QZEXy2gFjJxKY0tQgozf6dlwM1Xo9m1YJF6zEYrsaQPF3qp3mrxjlEcOU</span><br><span class="line">mJHszCe8mzHQT7mqWdfFKyWx2VyxAAAAgQD9ZBNyLLKrWo19FT5J8B7n1z/SZMca</span><br><span class="line">XQTafrosxsRvlQcPR2nNCfuU8p7RojP0Rjs/CCQ/Uyn6KhzUXuXHxyALEJOQMJIS</span><br><span class="line">a4zRXk+vSDHQfGCinlJRUNuzySHQpvrLKihxEUpbHE8OOULsS3T2YCmwFRrDqif/</span><br><span class="line">ycU2A1qWYPvMdQAAAIEAzt2onieHKebVxZlDhFZwZXKFsPlKtb0WxtPnwe2xPPl/</span><br><span class="line">Hw1K8Myx9mpN1jbRROmnKO5pW/gDMsImOBjXmkYbEfH0wmm8Z7wUJWy6X6CJN9zw</span><br><span class="line">ZwQTGz5lbQOSGKTxwnoM74bHjWeZXVnSRk/t3KxCxPQaLrE/5/wC3rZcfsD0EYcA</span><br><span class="line">AACAO+Av1/MnpcDdyST9R9UT4xG5mSJejTMCPiK4bHSicmVH8DcYTbNv7NOOHR75</span><br><span class="line">kfwnySQwQWrhCJ8wK5WpLiyi2mQaYQH7D2UgHbq50Pl8xwtr0Q83QbCShVbuFS65</span><br><span class="line">MIRfSayUvAlWAjAk+BXZoMpNyZY9k1NOJ+jpc9xKCsL42FM=</span><br><span class="line">Private-MAC: 2da6da25ea36916464d4d98fe4611ff269e80b8147082ba5c2a424236498ffb0</span><br></pre></td></tr></table></figure><hr><p></p>]]></content>
      
      
      <categories>
          
          <category> Liunx </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SSH </tag>
            
            <tag> puttygen </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>V2RayA —— 科学上网</title>
      <link href="/2023/06/11/V2RayA/"/>
      <url>/2023/06/11/V2RayA/</url>
      
        <content type="html"><![CDATA[<h1 id="V2RayA"><a href="#V2RayA" class="headerlink" title="V2RayA"></a>V2RayA</h1><blockquote><p>一个易用而强大的，跨平台的 V2Ray 客户端。你可通过本节对用户文档的内容进行快速预览。</p></blockquote><hr><h2 id="Docker-Run"><a href="#Docker-Run" class="headerlink" title="Docker Run"></a>Docker Run</h2><blockquote><p>启动容器</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">docker run -d \</span><br><span class="line">  --restart=always \</span><br><span class="line">  --privileged \</span><br><span class="line">  --network=host \</span><br><span class="line">  --name v2raya \</span><br><span class="line">  -e V2RAYA_LOG_FILE=/tmp/v2raya.<span class="built_in">log</span> \</span><br><span class="line">  -v /lib/modules:/lib/modules:ro \</span><br><span class="line">  -v /etc/resolv.conf:/etc/resolv.conf \</span><br><span class="line">  -v /etc/v2raya:/etc/v2raya \</span><br><span class="line">  mzz2017/v2raya</span><br></pre></td></tr></table></figure><blockquote><p>停止容器并删除</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker stop v2raya &amp;&amp; docker <span class="built_in">rm</span> v2raya</span><br></pre></td></tr></table></figure><hr><h2 id="Docker-Compose"><a href="#Docker-Compose" class="headerlink" title="Docker-Compose"></a>Docker-Compose</h2><blockquote><p>创建 <code>docker-compose.yml</code> 文件</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nano docker-compose.yml</span><br></pre></td></tr></table></figure><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&#x27;3.3&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">v2raya:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">mzz2017/v2raya</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">v2raya</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="attr">privileged:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">network_mode:</span> <span class="string">host</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">V2RAYA_LOG_FILE=/tmp/v2raya.log</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/lib/modules:/lib/modules:ro</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/etc/resolv.conf:/etc/resolv.conf</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/etc/v2raya:/etc/v2raya</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose up -d</span><br></pre></td></tr></table></figure><hr><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p><code>http://localhost:2017</code> 为 Web 端的登陆网址</p><p><kbd>设置</kbd> —  <kbd>透明代理</kbd> — <code>大陆白名单</code> — <code>保存</code></p><blockquote><p> 导入节点之后</p><p>可以使用 <code>curl -s  ifconfig.me</code>  来测试是否代理 IP</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&quot;<span class="subst">$(curl -s  ifconfig.me)</span>&quot;</span></span><br></pre></td></tr></table></figure><hr><p>官方地址：<a href="https://v2raya.org/docs/prologue/installation/docker/">https://v2raya.org/docs/prologue/installation/docker/</a></p><hr><p></p>]]></content>
      
      
      <categories>
          
          <category> Docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> V2RayA </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Syncthing —— 开源同步工具</title>
      <link href="/2023/06/11/Syncthing/"/>
      <url>/2023/06/11/Syncthing/</url>
      
        <content type="html"><![CDATA[<h1 id="Syncthing"><a href="#Syncthing" class="headerlink" title="Syncthing"></a>Syncthing</h1><blockquote><p>Syncthing 是一个文件同步程序。它可以在两台或更多的计算机之间实现同步文件。</p></blockquote><hr><h2 id="Docker-Compose"><a href="#Docker-Compose" class="headerlink" title="Docker-Compose"></a>Docker-Compose</h2><blockquote><p>创建 <code>docker-compose.yml</code> 文件</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nano docker-compose.yml</span><br></pre></td></tr></table></figure><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&quot;2.1&quot;</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">syncthing:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">lscr.io/linuxserver/syncthing</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">syncthing</span></span><br><span class="line">    <span class="attr">hostname:</span> <span class="string">syncthing</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">PUID=1000</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">PGID=1000</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">TZ=Asia/Shanghai</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./config:/config</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">8384</span><span class="string">:8384</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">22000</span><span class="string">:22000/tcp</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">22000</span><span class="string">:22000/udp</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">21027</span><span class="string">:21027/udp</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">unless-stopped</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose up -d</span><br></pre></td></tr></table></figure><blockquote><p>打开 <code>8384</code> 端口</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ufw allow 8384/tcp</span><br></pre></td></tr></table></figure><hr><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>同步的文件，都挂载在 <code>/config</code> 文件夹下。</p><p>在 <kbd>图形用户界面</kbd> 中，勾选 <code>使用加密连接到图形管理页面</code>  需要在 <kbd>Nginx Proxy Manager</kbd> — <kbd>Scheme</kbd> 选择 <code>https</code> 。</p><hr><p>官方网站：<a href="https://forum.syncthing.net/">https://forum.syncthing.net/</a></p><p>Github 项目地址：<a href="https://github.com/syncthing/syncthing">https://github.com/syncthing/syncthing</a></p><hr><p></p>]]></content>
      
      
      <categories>
          
          <category> Docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Syncthing </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Duplicati —— 多平台备份</title>
      <link href="/2023/06/11/Duplicati/"/>
      <url>/2023/06/11/Duplicati/</url>
      
        <content type="html"><![CDATA[<h1 id="Duplicati"><a href="#Duplicati" class="headerlink" title="Duplicati"></a>Duplicati</h1><blockquote><p>Duplicati 是一个免费的、开源的备份客户端，可以在云存储服务和远程文件服务器上安全地存储加密的、增量的、压缩的备份。</p></blockquote><hr><h2 id="Docker-Compose"><a href="#Docker-Compose" class="headerlink" title="Docker-Compose"></a>Docker-Compose</h2><blockquote><p>创建 <code>docker-compose.yml</code> 文件</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nano docker-compose.yml</span><br></pre></td></tr></table></figure><blockquote><p><code>backups</code>  文件夹为本地备份地址</p><p><code>/root/docker:/source</code> 映射要备份的资源地址</p></blockquote><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&quot;2.1&quot;</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">duplicati:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">lscr.io/linuxserver/duplicati</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">duplicati</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">PUID=0</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">PGID=0</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">TZ=Asia/Shanghai</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./config:/config</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./backups:/backups</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/root/docker:/source</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">8050</span><span class="string">:8200</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">unless-stopped</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose up -d</span><br></pre></td></tr></table></figure><blockquote><p>打开 <code>8050</code> 端口</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ufw allow 8050/tcp</span><br></pre></td></tr></table></figure><hr><p>官网地址：<a href="https://www.duplicati.com/download">https://www.duplicati.com/download</a></p><p>GitHub 项目地址：<a href="https://github.com/duplicati/duplicati">https://github.com/duplicati/duplicati</a></p><hr><p></p>]]></content>
      
      
      <categories>
          
          <category> Docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Duplicati </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Alist —— 本地网盘挂载</title>
      <link href="/2023/06/10/alist/"/>
      <url>/2023/06/10/alist/</url>
      
        <content type="html"><![CDATA[<h1 id="Alist"><a href="#Alist" class="headerlink" title="Alist"></a>Alist</h1><blockquote><p> 一个支持多种存储，支持网页浏览和 WebDAV 的文件列表程序，由 gin 和 Solidjs 驱动</p></blockquote><hr><h2 id="Docker-Run"><a href="#Docker-Run" class="headerlink" title="Docker Run"></a>Docker Run</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -d --restart=always -v /etc/alist:/opt/alist/data -p 5244:5244 -e PUID=0 -e PGID=0 -e UMASK=022 --name=<span class="string">&quot;alist&quot;</span> xhofe/alist:latest</span><br></pre></td></tr></table></figure><blockquote><p>查看管理员信息：</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="built_in">exec</span> -it alist ./alist admin</span><br></pre></td></tr></table></figure><h2 id="Docker-Compose"><a href="#Docker-Compose" class="headerlink" title="Docker-Compose"></a>Docker-Compose</h2><blockquote><p>创建 <code>docker-compose.yaml</code> 文件</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nano docker-compose.yaml</span><br></pre></td></tr></table></figure><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">version:</span> <span class="string">&#x27;2.1&#x27;</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">    <span class="attr">alist:</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">rahn2029/alist:1.0</span></span><br><span class="line">        <span class="attr">container_name:</span> <span class="string">alist</span></span><br><span class="line">        <span class="attr">environment:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">PUID=0</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">PGID=0</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">UMASK=022</span></span><br><span class="line">        <span class="attr">volumes:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">./data:/opt/alist/data</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">/root:/root</span></span><br><span class="line">        <span class="attr">ports:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="number">5244</span><span class="string">:5244</span></span><br><span class="line">        <span class="attr">restart:</span> <span class="string">unless-stopped</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose up -d</span><br></pre></td></tr></table></figure><blockquote><p>打开 <code>5244</code> 端口</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ufw allow 5244/tcp</span><br></pre></td></tr></table></figure><hr><h2 id="一键脚本"><a href="#一键脚本" class="headerlink" title="一键脚本"></a>一键脚本</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Install</span></span><br><span class="line">curl -fsSL <span class="string">&quot;https://alist.nn.ci/v3.sh&quot;</span> | bash -s install /root</span><br><span class="line"><span class="comment"># update</span></span><br><span class="line">curl -fsSL <span class="string">&quot;https://alist.nn.ci/v3.sh&quot;</span> | bash -s update /root</span><br><span class="line"><span class="comment"># Uninstall</span></span><br><span class="line">curl -fsSL <span class="string">&quot;https://alist.nn.ci/v3.sh&quot;</span> | bash -s uninstall /root</span><br></pre></td></tr></table></figure><hr><p>官方网站：<a href="https://alist.nn.ci/zh/">https://alist.nn.ci/zh/</a></p><hr><p></p>]]></content>
      
      
      <categories>
          
          <category> Docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> alist </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Yourls —— 短链接服务</title>
      <link href="/2023/06/10/yourls/"/>
      <url>/2023/06/10/yourls/</url>
      
        <content type="html"><![CDATA[<h1 id="Yourl"><a href="#Yourl" class="headerlink" title="Yourl"></a>Yourl</h1><blockquote><p>Yourl 是一个短网址生成工具，可以快速地将长网址转换成短网址。Yourl  的全称是 “Your Link”，意为 “你的链接”。</p></blockquote><hr><h2 id="Docker-Compose"><a href="#Docker-Compose" class="headerlink" title="Docker-Compose"></a>Docker-Compose</h2><blockquote><p>创建 <code>docker-compose.yml</code> 文件</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nano docker-compose.yml</span><br></pre></td></tr></table></figure><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&quot;3.5&quot;</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">mysql:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">mysql:5.7</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">MYSQL_ROOT_PASSWORD=yourls</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">MYSQL_DATABASE=yourls</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">MYSQL_USER=yourls</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">MYSQL_PASSWORD=yourls</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./mysql/db/:/var/lib/mysql</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./mysql/conf/:/etc/mysql/conf.d</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">yourls_mysql</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">yourls:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">yourls</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;8200:80&quot;</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="attr">YOURLS_DB_HOST:</span> <span class="string">mysql</span></span><br><span class="line">      <span class="attr">YOURLS_DB_USER:</span> <span class="string">yourls</span></span><br><span class="line">      <span class="attr">YOURLS_DB_PASS:</span> <span class="string">yourls</span></span><br><span class="line">      <span class="attr">YOURLS_DB_NAME:</span> <span class="string">yourls</span></span><br><span class="line">      <span class="attr">YOURLS_USER:</span> <span class="string">admin</span></span><br><span class="line">      <span class="attr">YOURLS_PASS:</span> <span class="string">passwd</span></span><br><span class="line">      <span class="attr">YOURLS_SITE:</span> <span class="string">http://192.168.6.212:8200</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./yourls/:/var/www/html</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">yourls</span></span><br><span class="line">    <span class="attr">links:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">mysql:mysql</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose up -d</span><br></pre></td></tr></table></figure><blockquote><p>打开 <code>8200</code> 端口</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ufw allow 8200/tcp</span><br></pre></td></tr></table></figure><hr><h2 id="Yourls-汉化"><a href="#Yourls-汉化" class="headerlink" title="Yourls 汉化"></a>Yourls 汉化</h2><ol><li><p><code>http://192.168.6.212:8200/admin</code> 为登陆地址，账号 <code>admin</code> 密码 <code>passwd</code></p></li><li><p>下载中文汉化压缩包 <a href="https://github.com/guox/yourls-zh_CN/archive/master.zip">https://github.com/guox/yourls-zh_CN/archive/master.zip</a> </p></li><li><p>解压后得到 <code>zh_CN.mo</code> <code>zh_CN.po</code> 两个文件</p></li><li><p>将两个文件放入 <code>yourls</code> 挂载文件夹内，路径为 <code>yourls/user/languages</code> </p></li><li><p>来到 <code>yourls/user/</code> 目录下，打开 <code>config.php</code> 配置文件</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 找到 define( &#x27;YOURLS_LANG&#x27;, getenv(&#x27;YOURLS_LANG&#x27;) ?: &#x27;&#x27; ); 修改为</span></span><br><span class="line"><span class="title function_ invoke__">define</span>( <span class="string">&#x27;YOURLS_LANG&#x27;</span>, <span class="string">&#x27;zh_CN&#x27;</span> );</span><br></pre></td></tr></table></figure></li><li><p>刷新页面，完成汉化</p></li></ol><hr><p>官方网站：<a href="https://yourls.org/">https://yourls.org/</a></p><hr><p></p>]]></content>
      
      
      <categories>
          
          <category> Docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> yourls </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ubuntu Server —— 一键脚本</title>
      <link href="/2023/06/09/%E4%B8%80%E9%94%AE%E8%84%9A%E6%9C%AC/"/>
      <url>/2023/06/09/%E4%B8%80%E9%94%AE%E8%84%9A%E6%9C%AC/</url>
      
        <content type="html"><![CDATA[<h1 id="Ubuntu-Server-20-04"><a href="#Ubuntu-Server-20-04" class="headerlink" title="Ubuntu Server 20.04"></a>Ubuntu Server 20.04</h1><blockquote><p>在 Ubuntu Server 20.04 系统中，使用的 Docker 脚本。</p></blockquote><hr><h2 id="Alist"><a href="#Alist" class="headerlink" title="Alist"></a>Alist</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#! /bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">red</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;\033[31m\033[01m<span class="variable">$1</span>\033[0m&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">green</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;\033[32m\033[01m<span class="variable">$1</span>\033[0m&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">yellow</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;\033[33m\033[01m<span class="variable">$1</span>\033[0m&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Alist V3</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">alist_install</span></span>()&#123;</span><br><span class="line">    curl -fsSL <span class="string">&quot;https://alist.nn.ci/v3.sh&quot;</span> | bash -s install /root/docker</span><br><span class="line">    ufw allow 5244/tcp</span><br><span class="line">yellow <span class="string">&quot;-----------------------------------------------&quot;</span></span><br><span class="line">green <span class="string">&quot; Web 端口：5244&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">green <span class="string">&quot; Web 网站 = http://<span class="subst">$(ifconfig $(ifconfig | grep -oP &#x27;enp\w+&#x27;)</span> | grep &#x27;inet &#x27; | awk &#x27;&#123;print <span class="variable">$2</span>&#125;&#x27;):5244&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">green <span class="string">&quot; Alist 安装完毕！&quot;</span></span><br><span class="line">yellow <span class="string">&quot;-----------------------------------------------&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">alist_update</span></span>()&#123;</span><br><span class="line">    curl -fsSL <span class="string">&quot;https://alist.nn.ci/v3.sh&quot;</span> | bash -s update /root/docker</span><br><span class="line">    green <span class="string">&quot;Alist 更新完毕&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">alist_uninstall</span></span>()&#123;</span><br><span class="line">    curl -fsSL <span class="string">&quot;https://alist.nn.ci/v3.sh&quot;</span> | bash -s uninstall /root/docker</span><br><span class="line">    green <span class="string">&quot;Alist 卸载完毕&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">start_menu</span></span>()&#123;</span><br><span class="line">clear</span><br><span class="line">yellow <span class="string">&quot;-----------------------------------------------&quot;</span></span><br><span class="line">red    <span class="string">&quot; Alist —— 本地网盘挂载&quot;</span></span><br><span class="line">yellow <span class="string">&quot;-----------------------------------------------&quot;</span></span><br><span class="line">green  <span class="string">&quot; 1. Alist 安装&quot;</span></span><br><span class="line">green  <span class="string">&quot; 2. Alist 更新&quot;</span></span><br><span class="line">green  <span class="string">&quot; 3. Alist 卸载&quot;</span></span><br><span class="line">yellow <span class="string">&quot;-----------------------------------------------&quot;</span></span><br><span class="line">red    <span class="string">&quot; 0. 退出脚本&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line"><span class="built_in">read</span> -p <span class="string">&quot;请输入数字:&quot;</span> menuNumberInput</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$menuNumberInput</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">        1 )</span><br><span class="line">            alist_install</span><br><span class="line">;;</span><br><span class="line">        2 )</span><br><span class="line">            alist_update</span><br><span class="line">;;</span><br><span class="line">        3 )</span><br><span class="line">            alist_uninstall</span><br><span class="line">;;</span><br><span class="line">        0 )</span><br><span class="line">            <span class="built_in">exit</span></span><br><span class="line">;;</span><br><span class="line">        * )</span><br><span class="line">            clear</span><br><span class="line">            red <span class="string">&quot;请输入正确数字!&quot;</span></span><br><span class="line">            start_menu</span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line">&#125;</span><br><span class="line">start_menu</span><br></pre></td></tr></table></figure><hr><h2 id="Nginx-Proxy-Manager"><a href="#Nginx-Proxy-Manager" class="headerlink" title="Nginx Proxy Manager"></a>Nginx Proxy Manager</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#! /bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">red</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;\033[31m\033[01m<span class="variable">$1</span>\033[0m&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">green</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;\033[32m\033[01m<span class="variable">$1</span>\033[0m&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">yellow</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;\033[33m\033[01m<span class="variable">$1</span>\033[0m&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Nginx Proxy Manager</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> nginx-proxy-<span class="function"><span class="title">manager_install</span></span>()&#123;</span><br><span class="line"><span class="keyword">if</span> nc -z localhost 80 || nc -z localhost 81 || nc -z localhost 443; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot; 端口 80、81 或 443 已经被占用，请检查相关进程&quot;</span></span><br><span class="line"><span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> docker ps -a --format <span class="string">&quot;&#123;&#123;.Names&#125;&#125;&quot;</span> | grep -q <span class="string">&quot;npm&quot;</span>; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot; npm 容器名已经被占用&quot;</span></span><br><span class="line"><span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> [ ! -d /root/docker/Nginx-Proxy-Manager ]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">mkdir</span> -p /root/docker/Nginx-Proxy-Manager</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">cd</span> /root/docker/Nginx-Proxy-Manager</span><br><span class="line"><span class="keyword">if</span> [ -f <span class="string">&quot;docker-compose.yml&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">rm</span> docker-compose.yml</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">cat</span> &lt;&lt;<span class="string">EOF &gt; docker-compose.yml</span></span><br><span class="line"><span class="string">version: &#x27;3.3&#x27;</span></span><br><span class="line"><span class="string">services:</span></span><br><span class="line"><span class="string">  app:</span></span><br><span class="line"><span class="string">    image: &#x27;jc21/nginx-proxy-manager:latest&#x27;</span></span><br><span class="line"><span class="string">    container_name: npm</span></span><br><span class="line"><span class="string">    restart: unless-stopped</span></span><br><span class="line"><span class="string">    ports:</span></span><br><span class="line"><span class="string">      - &#x27;80:80&#x27;</span></span><br><span class="line"><span class="string">      - &#x27;81:81&#x27;</span></span><br><span class="line"><span class="string">      - &#x27;443:443&#x27;</span></span><br><span class="line"><span class="string">    volumes:</span></span><br><span class="line"><span class="string">      - ./data:/data</span></span><br><span class="line"><span class="string">      - ./letsencrypt:/etc/letsencrypt</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line">docker-compose up -d</span><br><span class="line">ufw allow 80/tcp</span><br><span class="line">ufw allow 81/tcp</span><br><span class="line">ufw allow 443/tcp</span><br><span class="line">yellow <span class="string">&quot;-----------------------------------------------&quot;</span></span><br><span class="line">green <span class="string">&quot; Web 端口：80 81 443&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">green <span class="string">&quot; Docker IP = <span class="subst">$(ip addr show docker0 | grep &#x27;inet\b&#x27; | awk &#x27;&#123;print $2&#125;&#x27; | cut -d &#x27;/&#x27; -f1)</span>:81&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">green <span class="string">&quot; Web 网址  = http://<span class="subst">$(ifconfig $(ifconfig | grep -oP &#x27;enp\w+&#x27;)</span> | grep &#x27;inet &#x27; | awk &#x27;&#123;print <span class="variable">$2</span>&#125;&#x27;):81&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">green <span class="string">&quot; 初始帐号 admin@example.com&quot;</span></span><br><span class="line">green <span class="string">&quot; 初始密码 changeme&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">green <span class="string">&quot; Nginx Proxy Manager 安装完毕！&quot;</span></span><br><span class="line">yellow <span class="string">&quot;-----------------------------------------------&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">nginx-proxy-manager_install</span><br></pre></td></tr></table></figure><hr><h2 id="Frps"><a href="#Frps" class="headerlink" title="Frps"></a>Frps</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#! /bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">red</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;\033[31m\033[01m<span class="variable">$1</span>\033[0m&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">green</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;\033[32m\033[01m<span class="variable">$1</span>\033[0m&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">yellow</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;\033[33m\033[01m<span class="variable">$1</span>\033[0m&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Frps</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">frps_install</span></span>()&#123;</span><br><span class="line"><span class="keyword">if</span> docker ps -a --format <span class="string">&quot;&#123;&#123;.Names&#125;&#125;&quot;</span> | grep -q <span class="string">&quot;frps&quot;</span>; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot; frps 容器名已经被占用&quot;</span></span><br><span class="line"><span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> [ ! -d /root/docker/Frps ]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">mkdir</span> -p /root/docker/Frps</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">cd</span> /root/docker/Frps</span><br><span class="line"><span class="keyword">if</span> [ -f <span class="string">&quot;frps.ini&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">green <span class="string">&quot; 文件已经存在, 跳过创建步骤.&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">  <span class="built_in">cat</span> &lt;&lt;<span class="string">EOF &gt; frps.ini</span></span><br><span class="line"><span class="string"># frps.ini</span></span><br><span class="line"><span class="string">[common]</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">bind_port= 52244</span></span><br><span class="line"><span class="string">kcp_bind_port = 52244</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">dashboard_user= admin</span></span><br><span class="line"><span class="string">dashboard_pwd= passwd</span></span><br><span class="line"><span class="string">dashboard_port= 9527</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">token = frps.rahn.top</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line">green <span class="string">&quot; frps.ini 创建成功&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> [ -f <span class="string">&quot;docker-compose.yml&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">rm</span> docker-compose.yml</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">cat</span> &lt;&lt;<span class="string">EOF &gt; docker-compose.yml</span></span><br><span class="line"><span class="string">version: &#x27;3.3&#x27;</span></span><br><span class="line"><span class="string">services:</span></span><br><span class="line"><span class="string">    frps:</span></span><br><span class="line"><span class="string">        restart: always</span></span><br><span class="line"><span class="string">        network_mode: host</span></span><br><span class="line"><span class="string">        volumes:</span></span><br><span class="line"><span class="string">            - &#x27;./frps.ini:/etc/frp/frps.ini&#x27;</span></span><br><span class="line"><span class="string">        container_name: frps</span></span><br><span class="line"><span class="string">        image: snowdreamtech/frps</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line">docker-compose up -d</span><br><span class="line">ufw allow 9527/tcp</span><br><span class="line">ufw allow 52244/tcp</span><br><span class="line">yellow <span class="string">&quot;-----------------------------------------------&quot;</span></span><br><span class="line">green <span class="string">&quot; Web 端口：9527&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">green <span class="string">&quot; Docker IP = <span class="subst">$(ip addr show docker0 | grep &#x27;inet\b&#x27; | awk &#x27;&#123;print $2&#125;&#x27; | cut -d &#x27;/&#x27; -f1)</span>:9527&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">green <span class="string">&quot; Web 网址  = http://<span class="subst">$(ifconfig $(ifconfig | grep -oP &#x27;enp\w+&#x27;)</span> | grep &#x27;inet &#x27; | awk &#x27;&#123;print <span class="variable">$2</span>&#125;&#x27;):9527&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">green <span class="string">&quot; 登陆账号：admin&quot;</span></span><br><span class="line">green <span class="string">&quot; 登陆账号：passwd&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">green <span class="string">&quot; token：frps.rahn.top&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">green <span class="string">&quot; Frps 安装完毕！&quot;</span></span><br><span class="line">yellow <span class="string">&quot;-----------------------------------------------&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">frps_install</span><br></pre></td></tr></table></figure><hr><h2 id="Frpc"><a href="#Frpc" class="headerlink" title="Frpc"></a>Frpc</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#! /bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">red</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;\033[31m\033[01m<span class="variable">$1</span>\033[0m&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">green</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;\033[32m\033[01m<span class="variable">$1</span>\033[0m&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">yellow</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;\033[33m\033[01m<span class="variable">$1</span>\033[0m&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Frpc</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">frpc_install</span></span>()&#123;</span><br><span class="line"><span class="keyword">if</span> docker ps -a --format <span class="string">&quot;&#123;&#123;.Names&#125;&#125;&quot;</span> | grep -q <span class="string">&quot;frpc&quot;</span>; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot; frpc 容器名已经被占用&quot;</span></span><br><span class="line"><span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> [ ! -d /root/docker/Frpc ]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">mkdir</span> -p /root/docker/Frpc</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">cd</span> /root/docker/Frpc</span><br><span class="line"><span class="keyword">if</span> [ -f <span class="string">&quot;frpc.ini&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">  green <span class="string">&quot; 文件已经存在, 跳过创建步骤.&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">  <span class="built_in">cat</span> &lt;&lt;<span class="string">EOF &gt; frpc.ini</span></span><br><span class="line"><span class="string"># frpc.ini</span></span><br><span class="line"><span class="string">[common]</span></span><br><span class="line"><span class="string">server_addr = 45.76.126.21</span></span><br><span class="line"><span class="string">server_port = 52244</span></span><br><span class="line"><span class="string">token = PyAXaSbAfiaTHXDAHmj5AuRj</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[alist]</span></span><br><span class="line"><span class="string">type = tcp</span></span><br><span class="line"><span class="string">local_ip = 127.0.0.1</span></span><br><span class="line"><span class="string">local_port = 5244</span></span><br><span class="line"><span class="string">remote_port = 7000</span></span><br><span class="line"><span class="string">custom_domains = nasalist.rahn.top</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line">green <span class="string">&quot; frpc.ini 创建成功&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> [ -f <span class="string">&quot;docker-compose.yml&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">rm</span> docker-compose.yml</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">cat</span> &lt;&lt;<span class="string">EOF &gt; docker-compose.yml</span></span><br><span class="line"><span class="string">version: &#x27;3.3&#x27;</span></span><br><span class="line"><span class="string">services:</span></span><br><span class="line"><span class="string">    frpc:</span></span><br><span class="line"><span class="string">        restart: always</span></span><br><span class="line"><span class="string">        network_mode: host</span></span><br><span class="line"><span class="string">        volumes:</span></span><br><span class="line"><span class="string">            - &#x27;./frpc.ini:/etc/frp/frpc.ini&#x27;</span></span><br><span class="line"><span class="string">        container_name: frpc</span></span><br><span class="line"><span class="string">        image: snowdreamtech/frpc</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line">docker-compose up -d</span><br><span class="line">yellow <span class="string">&quot;-----------------------------------------------&quot;</span></span><br><span class="line">green <span class="string">&quot; 服务器 IP = http://<span class="subst">$(ifconfig $(ifconfig | grep -oP &#x27;enp\w+&#x27;)</span> | grep &#x27;inet &#x27; | awk &#x27;&#123;print <span class="variable">$2</span>&#125;&#x27;)&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">green <span class="string">&quot; Frpc 安装完毕！&quot;</span></span><br><span class="line">yellow <span class="string">&quot;-----------------------------------------------&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">frpc_install</span><br></pre></td></tr></table></figure><hr><h2 id="Yourls"><a href="#Yourls" class="headerlink" title="Yourls"></a>Yourls</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#! /bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">red</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;\033[31m\033[01m<span class="variable">$1</span>\033[0m&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">green</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;\033[32m\033[01m<span class="variable">$1</span>\033[0m&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">yellow</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;\033[33m\033[01m<span class="variable">$1</span>\033[0m&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Yourls</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">yourls_install</span></span>()&#123;</span><br><span class="line"><span class="keyword">if</span> nc -z localhost 8200; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot; 8200 端口已经被占用，请检查相关进程&quot;</span></span><br><span class="line"><span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> docker ps -a --format <span class="string">&quot;&#123;&#123;.Names&#125;&#125;&quot;</span> | grep -q <span class="string">&quot;yourls&quot;</span> &amp;&amp; docker ps -a --format <span class="string">&quot;&#123;&#123;.Names&#125;&#125;&quot;</span> | grep -q <span class="string">&quot;yourls_mysql&quot;</span>; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot; yourls yourls_mysql 容器名已经被占用&quot;</span></span><br><span class="line"><span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> [ ! -d /root/docker/Yourls ]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">mkdir</span> -p /root/docker/Yourls</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">cd</span> /root/docker/Yourls</span><br><span class="line"><span class="keyword">if</span> [ -f <span class="string">&quot;docker-compose.yml&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">rm</span> docker-compose.yml</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">cat</span> &lt;&lt;<span class="string">EOF &gt; docker-compose.yml</span></span><br><span class="line"><span class="string">version: &quot;3.5&quot;</span></span><br><span class="line"><span class="string">services:</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  mysql:</span></span><br><span class="line"><span class="string">    image: mysql:5.7</span></span><br><span class="line"><span class="string">    environment:</span></span><br><span class="line"><span class="string">      - MYSQL_ROOT_PASSWORD=yourls</span></span><br><span class="line"><span class="string">      - MYSQL_DATABASE=yourls</span></span><br><span class="line"><span class="string">      - MYSQL_USER=yourls</span></span><br><span class="line"><span class="string">      - MYSQL_PASSWORD=yourls</span></span><br><span class="line"><span class="string">    volumes:</span></span><br><span class="line"><span class="string">      - ./mysql/db/:/var/lib/mysql</span></span><br><span class="line"><span class="string">      - ./mysql/conf/:/etc/mysql/conf.d</span></span><br><span class="line"><span class="string">    restart: always</span></span><br><span class="line"><span class="string">    container_name: yourls_mysql</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  yourls:</span></span><br><span class="line"><span class="string">    image: yourls</span></span><br><span class="line"><span class="string">    restart: always</span></span><br><span class="line"><span class="string">    ports:</span></span><br><span class="line"><span class="string">      - &quot;8200:80&quot;</span></span><br><span class="line"><span class="string">    environment:</span></span><br><span class="line"><span class="string">      YOURLS_DB_HOST: mysql</span></span><br><span class="line"><span class="string">      YOURLS_DB_USER: yourls</span></span><br><span class="line"><span class="string">      YOURLS_DB_PASS: yourls</span></span><br><span class="line"><span class="string">      YOURLS_DB_NAME: yourls</span></span><br><span class="line"><span class="string">      YOURLS_USER: admin</span></span><br><span class="line"><span class="string">      YOURLS_PASS: passwd</span></span><br><span class="line"><span class="string">      YOURLS_SITE: https://rahn.top</span></span><br><span class="line"><span class="string">    volumes:</span></span><br><span class="line"><span class="string">      - ./yourls/:/var/www/html</span></span><br><span class="line"><span class="string">    container_name: yourls</span></span><br><span class="line"><span class="string">    links:</span></span><br><span class="line"><span class="string">      - mysql:mysql</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line">docker-compose up -d</span><br><span class="line">ufw allow 8200/tcp</span><br><span class="line">yellow <span class="string">&quot;-----------------------------------------------&quot;</span></span><br><span class="line">green <span class="string">&quot; Web 端口：8200&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">green <span class="string">&quot; Docker IP = <span class="subst">$(ip addr show docker0 | grep &#x27;inet\b&#x27; | awk &#x27;&#123;print $2&#125;&#x27; | cut -d &#x27;/&#x27; -f1)</span>:8200&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">green <span class="string">&quot; Web 网址  = https://rahn.top/admin&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">green <span class="string">&quot; 登陆账号：admin&quot;</span></span><br><span class="line">green <span class="string">&quot; 登陆密码：passwd&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">green <span class="string">&quot; Yourls 安装完毕！&quot;</span></span><br><span class="line">yellow <span class="string">&quot;-----------------------------------------------&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">yourls_install</span><br></pre></td></tr></table></figure><hr><h2 id="Hnet"><a href="#Hnet" class="headerlink" title="Hnet"></a>Hnet</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#! /bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">red</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;\033[31m\033[01m<span class="variable">$1</span>\033[0m&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">green</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;\033[32m\033[01m<span class="variable">$1</span>\033[0m&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">yellow</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;\033[33m\033[01m<span class="variable">$1</span>\033[0m&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Hnet</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">hnet_install</span></span>()&#123;</span><br><span class="line"><span class="keyword">if</span> nc -z localhost 5120; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot; 5120 端口已经被占用，请检查相关进程&quot;</span></span><br><span class="line"><span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> docker ps -a --format <span class="string">&quot;&#123;&#123;.Names&#125;&#125;&quot;</span> | grep -q <span class="string">&quot;hnet&quot;</span>; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot; hnet 容器名已经被占用&quot;</span></span><br><span class="line"><span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> [ ! -d /root/docker/HNet ]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">mkdir</span> -p /root/docker/HNet</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">cd</span> /root/docker/HNet</span><br><span class="line"><span class="keyword">if</span> [ -d <span class="string">&quot;web&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">green <span class="string">&quot; web 文件夹已经存在, 跳过执行 docker cp 命令&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">docker run -itd --name hnet -p 5120:56559 rahn2029/hnet-web:2.0</span><br><span class="line">docker <span class="built_in">cp</span> hnet:web $(<span class="built_in">pwd</span>)/</span><br><span class="line">docker stop hnet &amp;&amp; docker <span class="built_in">rm</span> hnet</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> [ -f <span class="string">&quot;docker-compose.yml&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">rm</span> docker-compose.yml</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">cat</span> &lt;&lt;<span class="string">EOF &gt; docker-compose.yml</span></span><br><span class="line"><span class="string">version: &#x27;3.3&#x27;</span></span><br><span class="line"><span class="string">services:</span></span><br><span class="line"><span class="string">    hideipnetwork-web:</span></span><br><span class="line"><span class="string">        container_name: hnet</span></span><br><span class="line"><span class="string">        ports:</span></span><br><span class="line"><span class="string">            - 5120:56559</span></span><br><span class="line"><span class="string">        volumes:</span></span><br><span class="line"><span class="string">            - ./web:/web</span></span><br><span class="line"><span class="string">        image: rahn2029/hnet-web:2.0</span></span><br><span class="line"><span class="string">        restart: always</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line">docker-compose up -d</span><br><span class="line">ufw allow 5120/tcp</span><br><span class="line">yellow <span class="string">&quot;-----------------------------------------------&quot;</span></span><br><span class="line">green <span class="string">&quot; Web 端口：5120&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">green <span class="string">&quot; Docker IP = <span class="subst">$(ip addr show docker0 | grep &#x27;inet\b&#x27; | awk &#x27;&#123;print $2&#125;&#x27; | cut -d &#x27;/&#x27; -f1)</span>:5120&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">green <span class="string">&quot; Web 网址  = http://<span class="subst">$(ifconfig $(ifconfig | grep -oP &#x27;enp\w+&#x27;)</span> | grep &#x27;inet &#x27; | awk &#x27;&#123;print <span class="variable">$2</span>&#125;&#x27;):5120&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">green <span class="string">&quot; HNet 安装完毕！&quot;</span></span><br><span class="line">yellow <span class="string">&quot;-----------------------------------------------&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">hnet_install</span><br></pre></td></tr></table></figure><hr><h2 id="Tachidesk-Server"><a href="#Tachidesk-Server" class="headerlink" title="Tachidesk Server"></a>Tachidesk Server</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#! /bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">red</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;\033[31m\033[01m<span class="variable">$1</span>\033[0m&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">green</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;\033[32m\033[01m<span class="variable">$1</span>\033[0m&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">yellow</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;\033[33m\033[01m<span class="variable">$1</span>\033[0m&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Tachidesk Server</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> tachidesk-<span class="function"><span class="title">server_install</span></span>()&#123;</span><br><span class="line"><span class="keyword">if</span> nc -z localhost 4567; <span class="keyword">then</span></span><br><span class="line">green <span class="string">&quot; 4567 端口已经被占用，请检查相关进程&quot;</span></span><br><span class="line"><span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> docker ps -a --format <span class="string">&quot;&#123;&#123;.Names&#125;&#125;&quot;</span> | grep -q <span class="string">&quot;tachidesk&quot;</span>; <span class="keyword">then</span></span><br><span class="line">green <span class="string">&quot; tachidesk 容器名已经被占用&quot;</span></span><br><span class="line"><span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> [ ! -d /root/docker/Tachidesk ]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">mkdir</span> -p /root/docker/Tachidesk</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">cd</span> /root/docker/Tachidesk</span><br><span class="line"><span class="keyword">if</span> [ -d <span class="string">&quot;data&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">chmod</span> -R 777 data</span><br><span class="line">green <span class="string">&quot; data 文件夹已经存在, 跳过执行 docker cp 命令&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">docker run -itd -p 4567:4567 --name tachidesk rahn2029/tachidesk</span><br><span class="line">docker <span class="built_in">cp</span> tachidesk:/home/suwayomi/.local/share/Tachidesk $(<span class="built_in">pwd</span>)/data</span><br><span class="line"><span class="built_in">chmod</span> -R 777 data</span><br><span class="line">docker stop tachidesk &amp;&amp; docker <span class="built_in">rm</span> tachidesk</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> [ -f <span class="string">&quot;docker-compose.yml&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">rm</span> docker-compose.yml</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">cat</span> &lt;&lt;<span class="string">EOF &gt; docker-compose.yml</span></span><br><span class="line"><span class="string">version: &#x27;3.3&#x27;</span></span><br><span class="line"><span class="string">services:</span></span><br><span class="line"><span class="string">  suwayomi:</span></span><br><span class="line"><span class="string">    image: rahn2029/tachidesk</span></span><br><span class="line"><span class="string">    container_name: tachidesk</span></span><br><span class="line"><span class="string">    environment:</span></span><br><span class="line"><span class="string">      - TZ=Asia/Shanghai</span></span><br><span class="line"><span class="string">    volumes:</span></span><br><span class="line"><span class="string">      - ./data:/./home/suwayomi/.local/share/Tachidesk</span></span><br><span class="line"><span class="string">    ports:</span></span><br><span class="line"><span class="string">      - 4567:4567</span></span><br><span class="line"><span class="string">    restart: always</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line">docker-compose up -d</span><br><span class="line">ufw allow 4567/tcp</span><br><span class="line">yellow <span class="string">&quot;-----------------------------------------------&quot;</span></span><br><span class="line">green <span class="string">&quot; Web 端口：4567&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">green <span class="string">&quot; Docker IP = <span class="subst">$(ip addr show docker0 | grep &#x27;inet\b&#x27; | awk &#x27;&#123;print $2&#125;&#x27; | cut -d &#x27;/&#x27; -f1)</span>:4567&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">green <span class="string">&quot; Web 网址  = http://<span class="subst">$(ifconfig $(ifconfig | grep -oP &#x27;enp\w+&#x27;)</span> | grep &#x27;inet &#x27; | awk &#x27;&#123;print <span class="variable">$2</span>&#125;&#x27;):4567&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">green <span class="string">&quot; Tachidesk 安装完毕！&quot;</span></span><br><span class="line">yellow <span class="string">&quot;-----------------------------------------------&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">tachidesk-server_install</span><br></pre></td></tr></table></figure><hr><h2 id="Portainer-ce"><a href="#Portainer-ce" class="headerlink" title="Portainer-ce"></a>Portainer-ce</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#! /bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">red</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;\033[31m\033[01m<span class="variable">$1</span>\033[0m&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">green</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;\033[32m\033[01m<span class="variable">$1</span>\033[0m&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">yellow</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;\033[33m\033[01m<span class="variable">$1</span>\033[0m&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Portainer</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">portainer_install</span></span>()&#123;</span><br><span class="line"><span class="keyword">if</span> nc -z localhost 9000; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot; 9000 端口已经被占用，请检查相关进程。&quot;</span></span><br><span class="line"><span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> docker ps -a --format <span class="string">&quot;&#123;&#123;.Names&#125;&#125;&quot;</span> | grep -q <span class="string">&quot;portainer&quot;</span>; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot; portainer 容器名已经被占用&quot;</span></span><br><span class="line"><span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> [ ! -d /root/docker/Portainer ]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">mkdir</span> -p /root/docker/Portainer</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">cd</span> /root/docker/Portainer</span><br><span class="line"><span class="keyword">if</span> [ -f <span class="string">&quot;docker-compose.yml&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">rm</span> docker-compose.yml</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">cat</span> &lt;&lt;<span class="string">EOF &gt; docker-compose.yml</span></span><br><span class="line"><span class="string">version: &#x27;3.3&#x27;</span></span><br><span class="line"><span class="string">services:</span></span><br><span class="line"><span class="string">    portainer-ce:</span></span><br><span class="line"><span class="string">        restart: always</span></span><br><span class="line"><span class="string">        container_name: portainer</span></span><br><span class="line"><span class="string">        ports:</span></span><br><span class="line"><span class="string">            - &#x27;9000:9000&#x27;</span></span><br><span class="line"><span class="string">        volumes:</span></span><br><span class="line"><span class="string">            - &#x27;/var/run/docker.sock:/var/run/docker.sock&#x27;</span></span><br><span class="line"><span class="string">        image: rahn2029/portainer-ce</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line">docker-compose up -d</span><br><span class="line">ufw allow 9000/tcp</span><br><span class="line">yellow <span class="string">&quot;-----------------------------------------------&quot;</span></span><br><span class="line">green <span class="string">&quot; Web 端口：9000&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">green <span class="string">&quot; Docker IP = <span class="subst">$(ip addr show docker0 | grep &#x27;inet\b&#x27; | awk &#x27;&#123;print $2&#125;&#x27; | cut -d &#x27;/&#x27; -f1)</span>:9000&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">green <span class="string">&quot; Web 网址  = http://<span class="subst">$(ifconfig $(ifconfig | grep -oP &#x27;enp\w+&#x27;)</span> | grep &#x27;inet &#x27; | awk &#x27;&#123;print <span class="variable">$2</span>&#125;&#x27;):9000&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">green <span class="string">&quot; Portainer-ce 安装完毕！&quot;</span></span><br><span class="line">yellow <span class="string">&quot;-----------------------------------------------&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">portainer_install</span><br></pre></td></tr></table></figure><hr><h2 id="Minimalist-Web-Notepad"><a href="#Minimalist-Web-Notepad" class="headerlink" title="Minimalist Web Notepad"></a>Minimalist Web Notepad</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#! /bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">red</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;\033[31m\033[01m<span class="variable">$1</span>\033[0m&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">green</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;\033[32m\033[01m<span class="variable">$1</span>\033[0m&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">yellow</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;\033[33m\033[01m<span class="variable">$1</span>\033[0m&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Minimalist Web Notepad</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> minimalist-web-<span class="function"><span class="title">notepad_install</span></span>()&#123;</span><br><span class="line"><span class="keyword">if</span> nc -z localhost 8006; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot; 8006 端口已经被占用，请检查相关进程&quot;</span></span><br><span class="line"><span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> docker ps -a --format <span class="string">&quot;&#123;&#123;.Names&#125;&#125;&quot;</span> | grep -q <span class="string">&quot;minimalist-web-notepad&quot;</span>; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot; minimalist-web-notepad 容器名已经被占用&quot;</span></span><br><span class="line"><span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> [ ! -d /root/docker/Minimalist-Web-Notepad ]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">mkdir</span> -p /root/docker/Minimalist-Web-Notepad</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">cd</span> /root/docker/Minimalist-Web-Notepad</span><br><span class="line"><span class="keyword">if</span> [ -f <span class="string">&quot;docker-compose.yml&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">rm</span> docker-compose.yml</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">cat</span> &lt;&lt;<span class="string">EOF &gt; docker-compose.yml</span></span><br><span class="line"><span class="string">version: &#x27;3.3&#x27;</span></span><br><span class="line"><span class="string">services:</span></span><br><span class="line"><span class="string">    minimalist-web-notepad:</span></span><br><span class="line"><span class="string">        restart: always</span></span><br><span class="line"><span class="string">        container_name: minimalist-web-notepad</span></span><br><span class="line"><span class="string">        volumes:</span></span><br><span class="line"><span class="string">            - &#x27;./data:/var/www/html/_tmp&#x27;</span></span><br><span class="line"><span class="string">        ports:</span></span><br><span class="line"><span class="string">            - &#x27;8006:80&#x27;</span></span><br><span class="line"><span class="string">        image: rahn2029/minimalist-web-notepad</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line">docker-compose up -d</span><br><span class="line">ufw allow 8006/tcp</span><br><span class="line">yellow <span class="string">&quot;-----------------------------------------------&quot;</span></span><br><span class="line">green <span class="string">&quot; Web 端口：8006&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">green <span class="string">&quot; Docker IP = <span class="subst">$(ip addr show docker0 | grep &#x27;inet\b&#x27; | awk &#x27;&#123;print $2&#125;&#x27; | cut -d &#x27;/&#x27; -f1)</span>:8006&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">green <span class="string">&quot; Web 网址  = http://<span class="subst">$(ifconfig $(ifconfig | grep -oP &#x27;enp\w+&#x27;)</span> | grep &#x27;inet &#x27; | awk &#x27;&#123;print <span class="variable">$2</span>&#125;&#x27;):8006&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">green <span class="string">&quot; Minimalist Web Notepad 安装完毕！&quot;</span></span><br><span class="line">yellow <span class="string">&quot;-----------------------------------------------&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">minimalist-web-notepad_install</span><br></pre></td></tr></table></figure><hr><h2 id="Vaultwarden"><a href="#Vaultwarden" class="headerlink" title="Vaultwarden"></a>Vaultwarden</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#! /bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">red</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;\033[31m\033[01m<span class="variable">$1</span>\033[0m&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">green</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;\033[32m\033[01m<span class="variable">$1</span>\033[0m&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">yellow</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;\033[33m\033[01m<span class="variable">$1</span>\033[0m&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Vaultwarden</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">vaultwarden_install</span></span>()&#123;</span><br><span class="line"><span class="keyword">if</span> nc -z localhost 8000; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot; 8000 端口已经被占用，请检查相关进程。&quot;</span></span><br><span class="line"><span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> docker ps -a --format <span class="string">&quot;&#123;&#123;.Names&#125;&#125;&quot;</span> | grep -q <span class="string">&quot;vaultwarden&quot;</span>; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot; vaultwarden 容器名已经被占用&quot;</span></span><br><span class="line"><span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> [ ! -d /root/docker/Vaultwarden ]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">mkdir</span> -p /root/docker/Vaultwarden</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">cd</span> /root/docker/Vaultwarden</span><br><span class="line"><span class="keyword">if</span> [ -f <span class="string">&quot;docker-compose.yml&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">rm</span> docker-compose.yml</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">cat</span> &lt;&lt;<span class="string">EOF &gt; docker-compose.yml</span></span><br><span class="line"><span class="string">version: &#x27;3.3&#x27;</span></span><br><span class="line"><span class="string">services:</span></span><br><span class="line"><span class="string">    server:</span></span><br><span class="line"><span class="string">        container_name: vaultwarden</span></span><br><span class="line"><span class="string">        restart: unless-stopped</span></span><br><span class="line"><span class="string">        environment:</span></span><br><span class="line"><span class="string">            - SIGNUPS_ALLOWED=true</span></span><br><span class="line"><span class="string">            - WEBSOCKET_ENABLED=true</span></span><br><span class="line"><span class="string">        volumes:</span></span><br><span class="line"><span class="string">            - &#x27;./data/:/data/&#x27;</span></span><br><span class="line"><span class="string">        ports:</span></span><br><span class="line"><span class="string">            - &#x27;8000:80&#x27;</span></span><br><span class="line"><span class="string">        image: &#x27;vaultwarden/server:latest&#x27;</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line">docker-compose up -d</span><br><span class="line">ufw allow 8000/tcp</span><br><span class="line">yellow <span class="string">&quot;-----------------------------------------------&quot;</span></span><br><span class="line">green <span class="string">&quot; Web 端口：8000&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">green <span class="string">&quot; Docker IP = <span class="subst">$(ip addr show docker0 | grep &#x27;inet\b&#x27; | awk &#x27;&#123;print $2&#125;&#x27; | cut -d &#x27;/&#x27; -f1)</span>:8000&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">green <span class="string">&quot; Web 网址  = http://<span class="subst">$(ifconfig $(ifconfig | grep -oP &#x27;enp\w+&#x27;)</span> | grep &#x27;inet &#x27; | awk &#x27;&#123;print <span class="variable">$2</span>&#125;&#x27;):8000&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">green <span class="string">&quot; Vaultwarden 安装完毕！&quot;</span></span><br><span class="line">yellow <span class="string">&quot;-----------------------------------------------&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">vaultwarden_install</span><br></pre></td></tr></table></figure><hr><h2 id="Searxng"><a href="#Searxng" class="headerlink" title="Searxng"></a>Searxng</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#! /bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">red</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;\033[31m\033[01m<span class="variable">$1</span>\033[0m&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">green</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;\033[32m\033[01m<span class="variable">$1</span>\033[0m&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">yellow</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;\033[33m\033[01m<span class="variable">$1</span>\033[0m&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Searxng</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">searxng_install</span></span>()&#123;</span><br><span class="line"><span class="keyword">if</span> nc -z localhost 19723; <span class="keyword">then</span></span><br><span class="line">green <span class="string">&quot; 19723 端口已经被占用，请检查相关进程。&quot;</span></span><br><span class="line"><span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> docker ps -a --format <span class="string">&quot;&#123;&#123;.Names&#125;&#125;&quot;</span> | grep -q <span class="string">&quot;searxng&quot;</span>; <span class="keyword">then</span></span><br><span class="line">green <span class="string">&quot; searxng 容器名已经被占用&quot;</span></span><br><span class="line"><span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> [ ! -d /root/docker/Searxng ]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">mkdir</span> -p /root/docker/Searxng</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">cd</span> /root/docker/Searxng</span><br><span class="line"><span class="keyword">if</span> [ -f <span class="string">&quot;docker-compose.yml&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">rm</span> docker-compose.yml</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">cat</span> &lt;&lt;<span class="string">EOF &gt; docker-compose.yml</span></span><br><span class="line"><span class="string">version: &#x27;3.3&#x27;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">services:</span></span><br><span class="line"><span class="string">  searxng:</span></span><br><span class="line"><span class="string">    container_name: searxng</span></span><br><span class="line"><span class="string">    image: searxng/searxng:latest</span></span><br><span class="line"><span class="string">    restart: unless-stopped</span></span><br><span class="line"><span class="string">    ports:</span></span><br><span class="line"><span class="string">     - &quot;19723:8080&quot;</span></span><br><span class="line"><span class="string">    volumes:</span></span><br><span class="line"><span class="string">      - ./Searxng:/etc/searxng:rw</span></span><br><span class="line"><span class="string">    environment:</span></span><br><span class="line"><span class="string">      - SEARXNG_BASE_URL=http://192.168.6.212:19723</span></span><br><span class="line"><span class="string">    cap_drop:</span></span><br><span class="line"><span class="string">      - ALL</span></span><br><span class="line"><span class="string">    cap_add:</span></span><br><span class="line"><span class="string">      - CHOWN</span></span><br><span class="line"><span class="string">      - SETGID</span></span><br><span class="line"><span class="string">      - SETUID</span></span><br><span class="line"><span class="string">      - DAC_OVERRIDE</span></span><br><span class="line"><span class="string">    logging:</span></span><br><span class="line"><span class="string">      driver: &quot;json-file&quot;</span></span><br><span class="line"><span class="string">      options:</span></span><br><span class="line"><span class="string">        max-size: &quot;1m&quot;</span></span><br><span class="line"><span class="string">        max-file: &quot;1&quot;</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line">docker-compose up -d</span><br><span class="line">ufw allow 19723/tcp</span><br><span class="line">yellow <span class="string">&quot;-----------------------------------------------&quot;</span></span><br><span class="line">green <span class="string">&quot; Web 端口：19723&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">green <span class="string">&quot; Docker IP = <span class="subst">$(ip addr show docker0 | grep &#x27;inet\b&#x27; | awk &#x27;&#123;print $2&#125;&#x27; | cut -d &#x27;/&#x27; -f1)</span>:19723&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">green <span class="string">&quot; Web 网址  = http://<span class="subst">$(ifconfig $(ifconfig | grep -oP &#x27;enp\w+&#x27;)</span> | grep &#x27;inet &#x27; | awk &#x27;&#123;print <span class="variable">$2</span>&#125;&#x27;):19723&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">green <span class="string">&quot; Searxng 安装完毕！&quot;</span></span><br><span class="line">yellow <span class="string">&quot;-----------------------------------------------&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">searxng_install</span><br></pre></td></tr></table></figure><hr><h2 id="Linux-Command"><a href="#Linux-Command" class="headerlink" title="Linux Command"></a>Linux Command</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#! /bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">red</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;\033[31m\033[01m<span class="variable">$1</span>\033[0m&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">green</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;\033[32m\033[01m<span class="variable">$1</span>\033[0m&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">yellow</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;\033[33m\033[01m<span class="variable">$1</span>\033[0m&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Linux Command</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> linux-<span class="function"><span class="title">command_install</span></span>()&#123;</span><br><span class="line"><span class="keyword">if</span> nc -z localhost 9665; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot; 9665 端口已经被占用，请检查相关进程。&quot;</span></span><br><span class="line"><span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> docker ps -a --format <span class="string">&quot;&#123;&#123;.Names&#125;&#125;&quot;</span> | grep -q <span class="string">&quot;linux-command&quot;</span>; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot; linux-command 容器名已经被占用&quot;</span></span><br><span class="line"><span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> [ ! -d /root/docker/Linux-Command ]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">mkdir</span> -p /root/docker/Linux-Command</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">cd</span> /root/docker/Linux-Command</span><br><span class="line"><span class="keyword">if</span> [ -f <span class="string">&quot;docker-compose.yml&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">rm</span> docker-compose.yml</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">cat</span> &lt;&lt;<span class="string">EOF &gt; docker-compose.yml</span></span><br><span class="line"><span class="string">version: &#x27;3.3&#x27;</span></span><br><span class="line"><span class="string">services:</span></span><br><span class="line"><span class="string">    linux-command:</span></span><br><span class="line"><span class="string">        container_name: linux-command</span></span><br><span class="line"><span class="string">        restart: always</span></span><br><span class="line"><span class="string">        ports:</span></span><br><span class="line"><span class="string">            - &#x27;9665:3000&#x27;</span></span><br><span class="line"><span class="string">        image: &#x27;wcjiang/linux-command:latest&#x27;</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line">docker-compose up -d</span><br><span class="line">ufw allow 9665/tcp</span><br><span class="line">yellow <span class="string">&quot;-----------------------------------------------&quot;</span></span><br><span class="line">green <span class="string">&quot; Web 端口：9665&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">green <span class="string">&quot; Docker IP = <span class="subst">$(ip addr show docker0 | grep &#x27;inet\b&#x27; | awk &#x27;&#123;print $2&#125;&#x27; | cut -d &#x27;/&#x27; -f1)</span>:9665&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">green <span class="string">&quot; Web 网址  = http://<span class="subst">$(ifconfig $(ifconfig | grep -oP &#x27;enp\w+&#x27;)</span> | grep &#x27;inet &#x27; | awk &#x27;&#123;print <span class="variable">$2</span>&#125;&#x27;):9665&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">green <span class="string">&quot; Linux Command 安装完毕！&quot;</span></span><br><span class="line">yellow <span class="string">&quot;-----------------------------------------------&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">linux-command_install</span><br></pre></td></tr></table></figure><hr><h2 id="Invidious"><a href="#Invidious" class="headerlink" title="Invidious"></a>Invidious</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#! /bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">red</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;\033[31m\033[01m<span class="variable">$1</span>\033[0m&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">green</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;\033[32m\033[01m<span class="variable">$1</span>\033[0m&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">yellow</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;\033[33m\033[01m<span class="variable">$1</span>\033[0m&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Invidious</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">invidious_install</span></span>()&#123;</span><br><span class="line"><span class="keyword">if</span> nc -z localhost 5000; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot; 5000 端口已经被占用，请检查相关进程。&quot;</span></span><br><span class="line"><span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> docker ps -a --format <span class="string">&quot;&#123;&#123;.Names&#125;&#125;&quot;</span> | grep -q <span class="string">&quot;invidious&quot;</span> &amp;&amp; docker ps -a --format <span class="string">&quot;&#123;&#123;.Names&#125;&#125;&quot;</span> | grep -q <span class="string">&quot;invidious_postgres&quot;</span>; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;invidious 和 invidious_postgres 容器名已经被占用&quot;</span></span><br><span class="line"><span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> [ ! -d /root/docker/Invidious ]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">mkdir</span> -p /root/docker/Invidious</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">cd</span> /root/docker/Invidious</span><br><span class="line"><span class="keyword">if</span> [ -f <span class="string">&quot;docker-compose.yml&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">rm</span> docker-compose.yml</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">cat</span> &lt;&lt;<span class="string">EOF &gt; docker-compose.yml</span></span><br><span class="line"><span class="string">version: &quot;3&quot;</span></span><br><span class="line"><span class="string">services:</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  invidious:</span></span><br><span class="line"><span class="string">    image: quay.io/invidious/invidious:latest</span></span><br><span class="line"><span class="string">    restart: unless-stopped</span></span><br><span class="line"><span class="string">    container_name: invidious</span></span><br><span class="line"><span class="string">    ports:</span></span><br><span class="line"><span class="string">      - &quot;5000:3000&quot;</span></span><br><span class="line"><span class="string">    environment:</span></span><br><span class="line"><span class="string">      INVIDIOUS_CONFIG: |</span></span><br><span class="line"><span class="string">        db:</span></span><br><span class="line"><span class="string">          dbname: invidious</span></span><br><span class="line"><span class="string">          user: kemal</span></span><br><span class="line"><span class="string">          password: kemal</span></span><br><span class="line"><span class="string">          host: invidious-db</span></span><br><span class="line"><span class="string">          port: 5432</span></span><br><span class="line"><span class="string">        check_tables: true</span></span><br><span class="line"><span class="string">    healthcheck:</span></span><br><span class="line"><span class="string">      test: wget -nv --tries=1 --spider http://127.0.0.1:3000/api/v1/comments/jNQXAC9IVRw || exit 1</span></span><br><span class="line"><span class="string">      interval: 30s</span></span><br><span class="line"><span class="string">      timeout: 5s</span></span><br><span class="line"><span class="string">      retries: 2</span></span><br><span class="line"><span class="string">    logging:</span></span><br><span class="line"><span class="string">      options:</span></span><br><span class="line"><span class="string">        max-size: &quot;1G&quot;</span></span><br><span class="line"><span class="string">        max-file: &quot;4&quot;</span></span><br><span class="line"><span class="string">    depends_on:</span></span><br><span class="line"><span class="string">      - invidious-db</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  invidious-db:</span></span><br><span class="line"><span class="string">    image: docker.io/library/postgres:14</span></span><br><span class="line"><span class="string">    container_name: invidious_postgres</span></span><br><span class="line"><span class="string">    restart: unless-stopped</span></span><br><span class="line"><span class="string">    volumes:</span></span><br><span class="line"><span class="string">      - ./postgresdata:/var/lib/postgresql/data</span></span><br><span class="line"><span class="string">      - ./config/sql:/config/sql</span></span><br><span class="line"><span class="string">      - ./docker/init-invidious-db.sh:/docker-entrypoint-initdb.d/init-invidious-db.sh</span></span><br><span class="line"><span class="string">    environment:</span></span><br><span class="line"><span class="string">      POSTGRES_DB: invidious</span></span><br><span class="line"><span class="string">      POSTGRES_USER: kemal</span></span><br><span class="line"><span class="string">      POSTGRES_PASSWORD: kemal</span></span><br><span class="line"><span class="string">    healthcheck:</span></span><br><span class="line"><span class="string">      test: [&quot;CMD-SHELL&quot;, &quot;pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB&quot;]</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line">docker-compose up -d</span><br><span class="line">ufw allow 5000/tcp</span><br><span class="line">yellow <span class="string">&quot;-----------------------------------------------&quot;</span></span><br><span class="line">green <span class="string">&quot; Web 端口：5000&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">green <span class="string">&quot; Docker IP = <span class="subst">$(ip addr show docker0 | grep &#x27;inet\b&#x27; | awk &#x27;&#123;print $2&#125;&#x27; | cut -d &#x27;/&#x27; -f1)</span>:5000&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">green <span class="string">&quot; Web 网址  = http://<span class="subst">$(ifconfig $(ifconfig | grep -oP &#x27;enp\w+&#x27;)</span> | grep &#x27;inet &#x27; | awk &#x27;&#123;print <span class="variable">$2</span>&#125;&#x27;):5000&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">green <span class="string">&quot; Invidious 安装完毕！&quot;</span></span><br><span class="line">yellow <span class="string">&quot;-----------------------------------------------&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">invidious_install</span><br></pre></td></tr></table></figure><hr><h2 id="FreshRSS"><a href="#FreshRSS" class="headerlink" title="FreshRSS"></a>FreshRSS</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#! /bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">red</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;\033[31m\033[01m<span class="variable">$1</span>\033[0m&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">green</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;\033[32m\033[01m<span class="variable">$1</span>\033[0m&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">yellow</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;\033[33m\033[01m<span class="variable">$1</span>\033[0m&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># FreshRSS</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">freshrss_install</span></span>()&#123;</span><br><span class="line"><span class="keyword">if</span> nc -z localhost 5380; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot; 5380 端口已经被占用，请检查相关进程&quot;</span></span><br><span class="line"><span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> docker ps -a --format <span class="string">&quot;&#123;&#123;.Names&#125;&#125;&quot;</span> | grep -q <span class="string">&quot;freshrss&quot;</span>; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot; freshrss 容器名已经被占用&quot;</span></span><br><span class="line"><span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> [ ! -d /root/docker/FreshRSS ]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">mkdir</span> -p /root/docker/FreshRSS</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">cd</span> /root/docker/FreshRSS</span><br><span class="line"><span class="keyword">if</span> [ -f <span class="string">&quot;docker-compose.yml&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">rm</span> docker-compose.yml</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">cat</span> &lt;&lt;<span class="string">EOF &gt; docker-compose.yml</span></span><br><span class="line"><span class="string">version: &quot;2.1&quot;</span></span><br><span class="line"><span class="string">services:</span></span><br><span class="line"><span class="string">  freshrss:</span></span><br><span class="line"><span class="string">    image: linuxserver/freshrss:latest</span></span><br><span class="line"><span class="string">    container_name: freshrss</span></span><br><span class="line"><span class="string">    volumes:</span></span><br><span class="line"><span class="string">      - ./data:/config</span></span><br><span class="line"><span class="string">    ports:</span></span><br><span class="line"><span class="string">      - 5380:80</span></span><br><span class="line"><span class="string">    restart: unless-stopped</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line">docker-compose up -d</span><br><span class="line">ufw allow 5380/tcp</span><br><span class="line">yellow <span class="string">&quot;-----------------------------------------------&quot;</span></span><br><span class="line">green <span class="string">&quot; Web 端口：5380&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">green <span class="string">&quot; Docker IP = <span class="subst">$(ip addr show docker0 | grep &#x27;inet\b&#x27; | awk &#x27;&#123;print $2&#125;&#x27; | cut -d &#x27;/&#x27; -f1)</span>:5380&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">green <span class="string">&quot; Web 网址  = http://<span class="subst">$(ifconfig $(ifconfig | grep -oP &#x27;enp\w+&#x27;)</span> | grep &#x27;inet &#x27; | awk &#x27;&#123;print <span class="variable">$2</span>&#125;&#x27;):5380&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">green <span class="string">&quot; FreshRSS 安装完毕！&quot;</span></span><br><span class="line">yellow <span class="string">&quot;-----------------------------------------------&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">freshrss_install</span><br></pre></td></tr></table></figure><hr><h2 id="Twikoo"><a href="#Twikoo" class="headerlink" title="Twikoo"></a>Twikoo</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#! /bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">red</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;\033[31m\033[01m<span class="variable">$1</span>\033[0m&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">green</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;\033[32m\033[01m<span class="variable">$1</span>\033[0m&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">yellow</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;\033[33m\033[01m<span class="variable">$1</span>\033[0m&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Twikoo</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">twikoo_install</span></span>()&#123;</span><br><span class="line"><span class="keyword">if</span> nc -z localhost 4001; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot; 4001 端口已经被占用，请检查相关进程&quot;</span></span><br><span class="line"><span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> docker ps -a --format <span class="string">&quot;&#123;&#123;.Names&#125;&#125;&quot;</span> | grep -q <span class="string">&quot;twikoo&quot;</span>; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot; twikoo 容器名已经被占用&quot;</span></span><br><span class="line"><span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> [ ! -d /root/docker/Twikoo ]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">mkdir</span> -p /root/docker/Twikoo</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">cd</span> /root/docker/Twikoo</span><br><span class="line"><span class="keyword">if</span> [ -f <span class="string">&quot;docker-compose.yml&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">rm</span> docker-compose.yml</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">cat</span> &lt;&lt;<span class="string">EOF &gt; docker-compose.yml</span></span><br><span class="line"><span class="string">version: &quot;3.5&quot;</span></span><br><span class="line"><span class="string">services:</span></span><br><span class="line"><span class="string">  twikoo:</span></span><br><span class="line"><span class="string">    container_name: twikoo</span></span><br><span class="line"><span class="string">    image: imaegoo/twikoo</span></span><br><span class="line"><span class="string">    environment:</span></span><br><span class="line"><span class="string">      - TWIKOO_THROTTLE=1000</span></span><br><span class="line"><span class="string">    ports:</span></span><br><span class="line"><span class="string">      - 4001:8080</span></span><br><span class="line"><span class="string">    volumes:</span></span><br><span class="line"><span class="string">      - ./data:/app/data</span></span><br><span class="line"><span class="string">    restart: unless-stopped</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line">docker-compose up -d</span><br><span class="line">ufw allow 4001/tcp</span><br><span class="line">yellow <span class="string">&quot;-----------------------------------------------&quot;</span></span><br><span class="line">green <span class="string">&quot; Web 端口：4001&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">green <span class="string">&quot; Docker IP = <span class="subst">$(ip addr show docker0 | grep &#x27;inet\b&#x27; | awk &#x27;&#123;print $2&#125;&#x27; | cut -d &#x27;/&#x27; -f1)</span>:4001&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">green <span class="string">&quot; Web 网址  = http://<span class="subst">$(ifconfig $(ifconfig | grep -oP &#x27;enp\w+&#x27;)</span> | grep &#x27;inet &#x27; | awk &#x27;&#123;print <span class="variable">$2</span>&#125;&#x27;):4001&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">green <span class="string">&quot; Twikoo 安装完毕！&quot;</span></span><br><span class="line">yellow <span class="string">&quot;-----------------------------------------------&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">twikoo_install</span><br></pre></td></tr></table></figure><hr><h2 id="Codex-Docs"><a href="#Codex-Docs" class="headerlink" title="Codex Docs"></a>Codex Docs</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#! /bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">red</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;\033[31m\033[01m<span class="variable">$1</span>\033[0m&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">green</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;\033[32m\033[01m<span class="variable">$1</span>\033[0m&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">yellow</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;\033[33m\033[01m<span class="variable">$1</span>\033[0m&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Codex Docs</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> codex-<span class="function"><span class="title">docs_install</span></span>()&#123;</span><br><span class="line"><span class="keyword">if</span> nc -z localhost 3313; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot; 3313 端口已经被占用，请检查相关进程&quot;</span></span><br><span class="line"><span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> docker ps -a --format <span class="string">&quot;&#123;&#123;.Names&#125;&#125;&quot;</span> | grep -q <span class="string">&quot;codex-docs&quot;</span>; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot; codex-docs 容器名已经被占用&quot;</span></span><br><span class="line"><span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> [ ! -d /root/docker/Codex-Docs ]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">mkdir</span> -p /root/docker/Codex-Docs</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">cd</span> /root/docker/Codex-Docs</span><br><span class="line"><span class="keyword">if</span> [ -f <span class="string">&quot;docs-config.yaml&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">  green <span class="string">&quot; docs-config.yaml 文件已存在, 跳过创建步骤.&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">  <span class="built_in">cat</span> &lt;&lt;<span class="string">EOF &gt; docs-config.yaml</span></span><br><span class="line"><span class="string">port: 3000</span></span><br><span class="line"><span class="string">host: &quot;localhost&quot;</span></span><br><span class="line"><span class="string">uploads:</span></span><br><span class="line"><span class="string">  driver: &quot;local&quot;</span></span><br><span class="line"><span class="string">  local:</span></span><br><span class="line"><span class="string">    path: &quot;./uploads&quot;</span></span><br><span class="line"><span class="string">  s3:</span></span><br><span class="line"><span class="string">    bucket: &quot;my-bucket&quot;</span></span><br><span class="line"><span class="string">    region: &quot;eu-central-1&quot;</span></span><br><span class="line"><span class="string">    baseUrl: &quot;http://docs-static.codex.so.s3-website.eu-central-1.amazonaws.com&quot;</span></span><br><span class="line"><span class="string">    keyPrefix: &quot;/&quot;</span></span><br><span class="line"><span class="string">    accessKeyId: &quot;my-access-key&quot;</span></span><br><span class="line"><span class="string">    secretAccessKey: &quot;my-secret-key&quot;</span></span><br><span class="line"><span class="string">frontend:</span></span><br><span class="line"><span class="string">  title: &quot;CodeX Docs&quot;</span></span><br><span class="line"><span class="string">  description: &quot;Free Docs app powered by Editor.js ecosystemt&quot;</span></span><br><span class="line"><span class="string">  startPage: &quot;&quot;</span></span><br><span class="line"><span class="string">  misprintsChatId: &quot;12344564&quot;</span></span><br><span class="line"><span class="string">  yandexMetrikaId: &quot;&quot;</span></span><br><span class="line"><span class="string">  carbon:</span></span><br><span class="line"><span class="string">    serve: &quot;&quot;</span></span><br><span class="line"><span class="string">    placement: &quot;&quot;</span></span><br><span class="line"><span class="string">  menu:</span></span><br><span class="line"><span class="string">    - &quot;Guides&quot;</span></span><br><span class="line"><span class="string">    - title: &quot;CodeX&quot;</span></span><br><span class="line"><span class="string">      uri: &quot;https://codex.so&quot;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">auth:</span></span><br><span class="line"><span class="string">  password: passwd</span></span><br><span class="line"><span class="string">  secret: supersecret</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">hawk:</span></span><br><span class="line"><span class="string">#  frontendToken: &quot;123&quot;</span></span><br><span class="line"><span class="string">#  backendToken: &quot;123&quot;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">database:</span></span><br><span class="line"><span class="string">  driver: local # you can change database driver here. &#x27;mongodb&#x27; or &#x27;local&#x27;</span></span><br><span class="line"><span class="string">  local:</span></span><br><span class="line"><span class="string">    path: ./db</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line">green <span class="string">&quot; docs-config.yaml 配置文件创建完毕！&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> [ -f <span class="string">&quot;docker-compose.yml&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">rm</span> docker-compose.yml</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">cat</span> &lt;&lt;<span class="string">EOF &gt; docker-compose.yml</span></span><br><span class="line"><span class="string">version: &quot;3.2&quot;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">services:</span></span><br><span class="line"><span class="string">  docs:</span></span><br><span class="line"><span class="string">    image: rahn2029/codex-docs</span></span><br><span class="line"><span class="string">    container_name: codex-docs</span></span><br><span class="line"><span class="string">    ports:</span></span><br><span class="line"><span class="string">      - &quot;3313:3000&quot;</span></span><br><span class="line"><span class="string">    command:</span></span><br><span class="line"><span class="string">      - node</span></span><br><span class="line"><span class="string">      - dist/backend/app.js</span></span><br><span class="line"><span class="string">      - -c</span></span><br><span class="line"><span class="string">      - docs-config.yaml</span></span><br><span class="line"><span class="string">    volumes:</span></span><br><span class="line"><span class="string">      - ./uploads:/usr/src/app/uploads</span></span><br><span class="line"><span class="string">      - ./db:/usr/src/app/db</span></span><br><span class="line"><span class="string">      - ./docs-config.yaml:/usr/src/app/docs-config.yaml</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line">docker-compose up -d</span><br><span class="line">ufw allow 3313/tcp</span><br><span class="line">yellow <span class="string">&quot;-----------------------------------------------&quot;</span></span><br><span class="line">green <span class="string">&quot; Web 端口：3313&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">green <span class="string">&quot; Docker IP = <span class="subst">$(ip addr show docker0 | grep &#x27;inet\b&#x27; | awk &#x27;&#123;print $2&#125;&#x27; | cut -d &#x27;/&#x27; -f1)</span>:3313&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">green <span class="string">&quot; 服务器 IP = http://<span class="subst">$(ifconfig $(ifconfig | grep -oP &#x27;enp\w+&#x27;)</span> | grep &#x27;inet &#x27; | awk &#x27;&#123;print <span class="variable">$2</span>&#125;&#x27;):3313&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">green <span class="string">&quot; 文档密码：passwd&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">green <span class="string">&quot; Codex Docs 安装完毕！&quot;</span></span><br><span class="line">yellow <span class="string">&quot;-----------------------------------------------&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">codex-docs_install</span><br></pre></td></tr></table></figure><hr><h2 id="RSSHub"><a href="#RSSHub" class="headerlink" title="RSSHub"></a>RSSHub</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#! /bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">red</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;\033[31m\033[01m<span class="variable">$1</span>\033[0m&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">green</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;\033[32m\033[01m<span class="variable">$1</span>\033[0m&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">yellow</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;\033[33m\033[01m<span class="variable">$1</span>\033[0m&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># RSSHub</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">rsshub_install</span></span>()&#123;</span><br><span class="line"><span class="keyword">if</span> nc -z localhost 1200; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot; 1200 端口已经被占用，请检查相关进程&quot;</span></span><br><span class="line"><span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> docker ps -a --format <span class="string">&quot;&#123;&#123;.Names&#125;&#125;&quot;</span> | grep -q <span class="string">&quot;rsshub&quot;</span>; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot; rsshub 容器名已经被占用&quot;</span></span><br><span class="line"><span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> [ ! -d /root/docker/RssHub ]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">mkdir</span> -p /root/docker/RssHub</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">cd</span> /root/docker/RssHub</span><br><span class="line"><span class="keyword">if</span> [ -f <span class="string">&quot;docker-compose.yml&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">rm</span> docker-compose.yml</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">cat</span> &lt;&lt;<span class="string">EOF &gt; docker-compose.yml</span></span><br><span class="line"><span class="string">version: &#x27;3&#x27;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">services:</span></span><br><span class="line"><span class="string">  rsshub:</span></span><br><span class="line"><span class="string">    image: diygod/rsshub:chromium-bundled</span></span><br><span class="line"><span class="string">    container_name: rsshub</span></span><br><span class="line"><span class="string">    restart: unless-stopped</span></span><br><span class="line"><span class="string">    ports:</span></span><br><span class="line"><span class="string">      - 1200:1200</span></span><br><span class="line"><span class="string">    environment:</span></span><br><span class="line"><span class="string">      - CACHE_EXPIRE=3600</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line">docker-compose up -d</span><br><span class="line">ufw allow 1200/tcp</span><br><span class="line">yellow <span class="string">&quot;-----------------------------------------------&quot;</span></span><br><span class="line">green <span class="string">&quot; Web 端口：1200&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">green <span class="string">&quot; Docker IP = <span class="subst">$(ip addr show docker0 | grep &#x27;inet\b&#x27; | awk &#x27;&#123;print $2&#125;&#x27; | cut -d &#x27;/&#x27; -f1)</span>:1200&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">green <span class="string">&quot; Web 网址  = http://<span class="subst">$(ifconfig $(ifconfig | grep -oP &#x27;enp\w+&#x27;)</span> | grep &#x27;inet &#x27; | awk &#x27;&#123;print <span class="variable">$2</span>&#125;&#x27;):1200&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">green <span class="string">&quot; RSSHub 安装完毕！&quot;</span></span><br><span class="line">yellow <span class="string">&quot;-----------------------------------------------&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">rsshub_install</span><br></pre></td></tr></table></figure><hr><h2 id="Jackett"><a href="#Jackett" class="headerlink" title="Jackett"></a>Jackett</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#! /bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">red</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;\033[31m\033[01m<span class="variable">$1</span>\033[0m&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">green</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;\033[32m\033[01m<span class="variable">$1</span>\033[0m&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">yellow</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;\033[33m\033[01m<span class="variable">$1</span>\033[0m&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Jackett</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">jackett_install</span></span>()&#123;</span><br><span class="line"><span class="keyword">if</span> nc -z localhost 9117; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot; 9117 端口已经被占用，请检查相关进程&quot;</span></span><br><span class="line"><span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> docker ps -a --format <span class="string">&quot;&#123;&#123;.Names&#125;&#125;&quot;</span> | grep -q <span class="string">&quot;jackett&quot;</span>; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot; jackett 容器名已经被占用&quot;</span></span><br><span class="line"><span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> [ ! -d /root/docker/Jackett ]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">mkdir</span> -p /root/docker/Jackett</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">cd</span> /root/docker/Jackett</span><br><span class="line"><span class="keyword">if</span> [ -f <span class="string">&quot;docker-compose.yml&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">rm</span> docker-compose.yml</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">cat</span> &lt;&lt;<span class="string">EOF &gt; docker-compose.yml</span></span><br><span class="line"><span class="string">version: &quot;2.1&quot;</span></span><br><span class="line"><span class="string">services:</span></span><br><span class="line"><span class="string">  jackett:</span></span><br><span class="line"><span class="string">    image: linuxserver/jackett:latest</span></span><br><span class="line"><span class="string">    container_name: jackett</span></span><br><span class="line"><span class="string">    environment:</span></span><br><span class="line"><span class="string">      - PUID=1000</span></span><br><span class="line"><span class="string">      - PGID=1000</span></span><br><span class="line"><span class="string">      - TZ=Asia/shanghai</span></span><br><span class="line"><span class="string">      - AUTO_UPDATE=true</span></span><br><span class="line"><span class="string">    volumes:</span></span><br><span class="line"><span class="string">      - ./config:/config</span></span><br><span class="line"><span class="string">      - ./downloads:/downloads</span></span><br><span class="line"><span class="string">    ports:</span></span><br><span class="line"><span class="string">      - 9117:9117</span></span><br><span class="line"><span class="string">    restart: unless-stopped</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line">docker-compose up -d</span><br><span class="line">ufw allow 9117/tcp</span><br><span class="line">yellow <span class="string">&quot;-----------------------------------------------&quot;</span></span><br><span class="line">green <span class="string">&quot; Web 端口：9117&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">green <span class="string">&quot; Docker IP = <span class="subst">$(ip addr show docker0 | grep &#x27;inet\b&#x27; | awk &#x27;&#123;print $2&#125;&#x27; | cut -d &#x27;/&#x27; -f1)</span>:9117&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">green <span class="string">&quot; Web 网址  = http://<span class="subst">$(ifconfig $(ifconfig | grep -oP &#x27;enp\w+&#x27;)</span> | grep &#x27;inet &#x27; | awk &#x27;&#123;print <span class="variable">$2</span>&#125;&#x27;):9117&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">green <span class="string">&quot; Jackett 安装完毕！&quot;</span></span><br><span class="line">yellow <span class="string">&quot;-----------------------------------------------&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">jackett_install</span><br></pre></td></tr></table></figure><hr><h2 id="Bookstack"><a href="#Bookstack" class="headerlink" title="Bookstack"></a>Bookstack</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#! /bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">red</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;\033[31m\033[01m<span class="variable">$1</span>\033[0m&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">green</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;\033[32m\033[01m<span class="variable">$1</span>\033[0m&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">yellow</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;\033[33m\033[01m<span class="variable">$1</span>\033[0m&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Bookstack</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">bookstack_install</span></span>()&#123;</span><br><span class="line"><span class="keyword">if</span> nc -z localhost 6875; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot; 6875 端口已经被占用，请检查相关进程&quot;</span></span><br><span class="line"><span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> docker ps -a --format <span class="string">&quot;&#123;&#123;.Names&#125;&#125;&quot;</span> | grep -q <span class="string">&quot;bookstack&quot;</span>; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot; bookstack 容器名已经被占用&quot;</span></span><br><span class="line"><span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> [ ! -d /root/docker/Bookstack ]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">mkdir</span> -p /root/docker/Bookstack</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">cd</span> /root/docker/Bookstack</span><br><span class="line"><span class="keyword">if</span> [ -f <span class="string">&quot;docker-compose.yml&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">rm</span> docker-compose.yml</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">cat</span> &lt;&lt;<span class="string">EOF &gt; docker-compose.yml</span></span><br><span class="line"><span class="string">version: &quot;2&quot;</span></span><br><span class="line"><span class="string">services:</span></span><br><span class="line"><span class="string">  bookstack:</span></span><br><span class="line"><span class="string">    image: linuxserver/bookstack</span></span><br><span class="line"><span class="string">    container_name: bookstack</span></span><br><span class="line"><span class="string">    environment:</span></span><br><span class="line"><span class="string">      - PUID=1000</span></span><br><span class="line"><span class="string">      - PGID=1000</span></span><br><span class="line"><span class="string">      - APP_URL=http://192.168.6.212:6875</span></span><br><span class="line"><span class="string">      - DB_HOST=bookstack_db</span></span><br><span class="line"><span class="string">      - DB_USER=bookstack</span></span><br><span class="line"><span class="string">      - DB_PASS=&lt;yourdbpass&gt;</span></span><br><span class="line"><span class="string">      - DB_DATABASE=bookstackapp</span></span><br><span class="line"><span class="string">    volumes:</span></span><br><span class="line"><span class="string">      - ./books:/config</span></span><br><span class="line"><span class="string">    ports:</span></span><br><span class="line"><span class="string">      - 6875:80</span></span><br><span class="line"><span class="string">    restart: unless-stopped</span></span><br><span class="line"><span class="string">    depends_on:</span></span><br><span class="line"><span class="string">      - bookstack_db</span></span><br><span class="line"><span class="string">  bookstack_db:</span></span><br><span class="line"><span class="string">    image: linuxserver/mariadb</span></span><br><span class="line"><span class="string">    container_name: bookstack_db</span></span><br><span class="line"><span class="string">    environment:</span></span><br><span class="line"><span class="string">      - PUID=1000</span></span><br><span class="line"><span class="string">      - PGID=1000</span></span><br><span class="line"><span class="string">      - MYSQL_ROOT_PASSWORD=&lt;yourdbpass&gt;</span></span><br><span class="line"><span class="string">      - TZ=Asia/Shanghai</span></span><br><span class="line"><span class="string">      - MYSQL_DATABASE=bookstackapp</span></span><br><span class="line"><span class="string">      - MYSQL_USER=bookstack</span></span><br><span class="line"><span class="string">      - MYSQL_PASSWORD=&lt;yourdbpass&gt;</span></span><br><span class="line"><span class="string">    volumes:</span></span><br><span class="line"><span class="string">      - ./data:/config</span></span><br><span class="line"><span class="string">    restart: unless-stopped</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line">docker-compose up -d</span><br><span class="line">ufw allow 6875/tcp</span><br><span class="line">yellow <span class="string">&quot;-----------------------------------------------&quot;</span></span><br><span class="line">green <span class="string">&quot; Web 端口：6875&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">green <span class="string">&quot; Docker IP = <span class="subst">$(ip addr show docker0 | grep &#x27;inet\b&#x27; | awk &#x27;&#123;print $2&#125;&#x27; | cut -d &#x27;/&#x27; -f1)</span>:6875&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">green <span class="string">&quot; Web 网址  = http://<span class="subst">$(ifconfig $(ifconfig | grep -oP &#x27;enp\w+&#x27;)</span> | grep &#x27;inet &#x27; | awk &#x27;&#123;print <span class="variable">$2</span>&#125;&#x27;):6875&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">green <span class="string">&quot; 登陆账号：admin@admin.com &quot;</span></span><br><span class="line">green <span class="string">&quot; 登陆密码：password&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">green <span class="string">&quot; Bookstack 安装完毕！&quot;</span></span><br><span class="line">yellow <span class="string">&quot;-----------------------------------------------&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">bookstack_install</span><br></pre></td></tr></table></figure><hr><h2 id="Calibre-Web"><a href="#Calibre-Web" class="headerlink" title="Calibre Web"></a>Calibre Web</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#! /bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">red</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;\033[31m\033[01m<span class="variable">$1</span>\033[0m&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">green</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;\033[32m\033[01m<span class="variable">$1</span>\033[0m&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">yellow</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;\033[33m\033[01m<span class="variable">$1</span>\033[0m&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Calibre Web</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> calibre-<span class="function"><span class="title">web_install</span></span>()&#123;</span><br><span class="line"><span class="keyword">if</span> nc -z localhost 8083; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot; 8083 端口已经被占用，请检查相关进程&quot;</span></span><br><span class="line"><span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> docker ps -a --format <span class="string">&quot;&#123;&#123;.Names&#125;&#125;&quot;</span> | grep -q <span class="string">&quot;calibre-web&quot;</span>; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot; calibre-web 容器名已经被占用&quot;</span></span><br><span class="line"><span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> [ ! -d /root/docker/Calibre-Web ]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">mkdir</span> -p /root/docker/Calibre-Web</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">cd</span> /root/docker/Calibre-Web</span><br><span class="line"><span class="keyword">if</span> [ -f <span class="string">&quot;docker-compose.yml&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">rm</span> docker-compose.yml</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">cat</span> &lt;&lt;<span class="string">EOF &gt; docker-compose.yml</span></span><br><span class="line"><span class="string">version: &quot;2.1&quot;</span></span><br><span class="line"><span class="string">services:</span></span><br><span class="line"><span class="string">  calibre-web:</span></span><br><span class="line"><span class="string">    image: linuxserver/calibre-web:latest</span></span><br><span class="line"><span class="string">    container_name: calibre-web</span></span><br><span class="line"><span class="string">    environment:</span></span><br><span class="line"><span class="string">      - PUID=1000</span></span><br><span class="line"><span class="string">      - PGID=1000</span></span><br><span class="line"><span class="string">      - TZ=Asia/Shanghai</span></span><br><span class="line"><span class="string">      - DOCKER_MODS=linuxserver/mods:universal-calibre</span></span><br><span class="line"><span class="string">      - OAUTHLIB_RELAX_TOKEN_SCOPE=1</span></span><br><span class="line"><span class="string">    volumes:</span></span><br><span class="line"><span class="string">      - ./config:/config</span></span><br><span class="line"><span class="string">      - ./books:/books</span></span><br><span class="line"><span class="string">    ports:</span></span><br><span class="line"><span class="string">      - 8083:8083</span></span><br><span class="line"><span class="string">    restart: unless-stopped</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line">docker-compose up -d</span><br><span class="line">ufw allow 8083/tcp</span><br><span class="line"><span class="built_in">chmod</span> 777 books</span><br><span class="line">yellow <span class="string">&quot;-----------------------------------------------&quot;</span></span><br><span class="line">green <span class="string">&quot; Web 端口：8083&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">green <span class="string">&quot; Docker IP = <span class="subst">$(ip addr show docker0 | grep &#x27;inet\b&#x27; | awk &#x27;&#123;print $2&#125;&#x27; | cut -d &#x27;/&#x27; -f1)</span>:8083&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">green <span class="string">&quot; Web 网址  = http://<span class="subst">$(ifconfig $(ifconfig | grep -oP &#x27;enp\w+&#x27;)</span> | grep &#x27;inet &#x27; | awk &#x27;&#123;print <span class="variable">$2</span>&#125;&#x27;):8083&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">green <span class="string">&quot; 第一次安装需要进入容器内部生成 metadata.db 数据库，步骤如下：&quot;</span></span><br><span class="line">green <span class="string">&quot; cd: can&#x27;t cd to app/calibre/bin 报错，需要等待容器初始化完毕！&quot;</span></span><br><span class="line">green <span class="string">&quot; 大概等待 3 分钟左右！&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">green <span class="string">&quot; docker exec -it calibre-web sh&quot;</span></span><br><span class="line">green <span class="string">&quot; cd app/calibre/bin&quot;</span></span><br><span class="line">green <span class="string">&quot; calibredb restore_database --really-do-it --with-library /books&quot;</span></span><br><span class="line">green <span class="string">&quot; chmod a+w /books/metadata.db&quot;</span></span><br><span class="line">green <span class="string">&quot; exit&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">green <span class="string">&quot; 登陆账号：admin &quot;</span></span><br><span class="line">green <span class="string">&quot; 登陆密码：admin123&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">green <span class="string">&quot; Calibre Web 安装完毕！&quot;</span></span><br><span class="line">yellow <span class="string">&quot;-----------------------------------------------&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">calibre-web_install</span><br></pre></td></tr></table></figure><hr><h2 id="Memos"><a href="#Memos" class="headerlink" title="Memos"></a>Memos</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#! /bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">red</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;\033[31m\033[01m<span class="variable">$1</span>\033[0m&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">green</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;\033[32m\033[01m<span class="variable">$1</span>\033[0m&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">yellow</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;\033[33m\033[01m<span class="variable">$1</span>\033[0m&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Memos</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">memos_install</span></span>()&#123;</span><br><span class="line"><span class="keyword">if</span> nc -z localhost 5230; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot; 5230 端口已经被占用，请检查相关进程&quot;</span></span><br><span class="line"><span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> docker ps -a --format <span class="string">&quot;&#123;&#123;.Names&#125;&#125;&quot;</span> | grep -q <span class="string">&quot;memos&quot;</span>; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot; memos 容器名已经被占用&quot;</span></span><br><span class="line"><span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> [ ! -d /root/docker/Memos ]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">mkdir</span> -p /root/docker/Memos</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">cd</span> /root/docker/Memos</span><br><span class="line"><span class="keyword">if</span> [ -f <span class="string">&quot;docker-compose.yml&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">rm</span> docker-compose.yml</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">cat</span> &lt;&lt;<span class="string">EOF &gt; docker-compose.yml</span></span><br><span class="line"><span class="string">version: &#x27;3.3&#x27;</span></span><br><span class="line"><span class="string">services:</span></span><br><span class="line"><span class="string">    usememos:</span></span><br><span class="line"><span class="string">        container_name: memos</span></span><br><span class="line"><span class="string">        ports:</span></span><br><span class="line"><span class="string">            - &#x27;5230:5230&#x27;</span></span><br><span class="line"><span class="string">        restart: always</span></span><br><span class="line"><span class="string">        volumes:</span></span><br><span class="line"><span class="string">            - &#x27;./memos/:/var/opt/memos&#x27;</span></span><br><span class="line"><span class="string">        image: &#x27;neosmemo/memos&#x27;</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line">docker-compose up -d</span><br><span class="line">ufw allow 5230/tcp</span><br><span class="line">yellow <span class="string">&quot;-----------------------------------------------&quot;</span></span><br><span class="line">green <span class="string">&quot; Web 端口：5230&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">green <span class="string">&quot; Docker IP = <span class="subst">$(ip addr show docker0 | grep &#x27;inet\b&#x27; | awk &#x27;&#123;print $2&#125;&#x27; | cut -d &#x27;/&#x27; -f1)</span>:5230&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">green <span class="string">&quot; Web 网址  = http://<span class="subst">$(ifconfig $(ifconfig | grep -oP &#x27;enp\w+&#x27;)</span> | grep &#x27;inet &#x27; | awk &#x27;&#123;print <span class="variable">$2</span>&#125;&#x27;):5230&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">green <span class="string">&quot; Memos 安装完毕！&quot;</span></span><br><span class="line">yellow <span class="string">&quot;-----------------------------------------------&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">memos_install</span><br></pre></td></tr></table></figure><hr><h2 id="MoRSS"><a href="#MoRSS" class="headerlink" title="MoRSS"></a>MoRSS</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#! /bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">red</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;\033[31m\033[01m<span class="variable">$1</span>\033[0m&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">green</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;\033[32m\033[01m<span class="variable">$1</span>\033[0m&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">yellow</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;\033[33m\033[01m<span class="variable">$1</span>\033[0m&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># MoRSS</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">morss_install</span></span>()&#123;</span><br><span class="line"><span class="keyword">if</span> nc -z localhost 8887; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot; 8887 端口已经被占用，请检查相关进程&quot;</span></span><br><span class="line"><span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> docker ps -a --format <span class="string">&quot;&#123;&#123;.Names&#125;&#125;&quot;</span> | grep -q <span class="string">&quot;morss&quot;</span>; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot; morss 容器名已经被占用&quot;</span></span><br><span class="line"><span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> [ ! -d /root/docker/MoRSS ]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">mkdir</span> -p /root/docker/MoRSS</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">cd</span> /root/docker/MoRSS</span><br><span class="line"><span class="keyword">if</span> [ -f <span class="string">&quot;docker-compose.yml&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">rm</span> docker-compose.yml</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">cat</span> &lt;&lt;<span class="string">EOF &gt; docker-compose.yml</span></span><br><span class="line"><span class="string">version: &#x27;3&#x27;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">services:</span></span><br><span class="line"><span class="string">  morss:</span></span><br><span class="line"><span class="string">    image: pictuga/morss</span></span><br><span class="line"><span class="string">    container_name: morss</span></span><br><span class="line"><span class="string">    restart: unless-stopped</span></span><br><span class="line"><span class="string">    ports:</span></span><br><span class="line"><span class="string">      - 8887:8000</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line">docker-compose up -d</span><br><span class="line">ufw allow 8887/tcp</span><br><span class="line">yellow <span class="string">&quot;-----------------------------------------------&quot;</span></span><br><span class="line">green <span class="string">&quot; Web 端口：8887&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">green <span class="string">&quot; Docker IP = <span class="subst">$(ip addr show docker0 | grep &#x27;inet\b&#x27; | awk &#x27;&#123;print $2&#125;&#x27; | cut -d &#x27;/&#x27; -f1)</span>:8887&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">green <span class="string">&quot; Web 网址  = http://<span class="subst">$(ifconfig $(ifconfig | grep -oP &#x27;enp\w+&#x27;)</span> | grep &#x27;inet &#x27; | awk &#x27;&#123;print <span class="variable">$2</span>&#125;&#x27;):8887&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">green <span class="string">&quot; MoRSS 安装完毕！&quot;</span></span><br><span class="line">yellow <span class="string">&quot;-----------------------------------------------&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">morss_install</span><br></pre></td></tr></table></figure><hr><h2 id="Reader"><a href="#Reader" class="headerlink" title="Reader"></a>Reader</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#! /bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">red</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;\033[31m\033[01m<span class="variable">$1</span>\033[0m&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">green</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;\033[32m\033[01m<span class="variable">$1</span>\033[0m&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">yellow</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;\033[33m\033[01m<span class="variable">$1</span>\033[0m&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Reader</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">reader_install</span></span>()&#123;</span><br><span class="line"><span class="keyword">if</span> nc -z localhost 4396; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot; 4396 端口已经被占用，请检查相关进程&quot;</span></span><br><span class="line"><span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> docker ps -a --format <span class="string">&quot;&#123;&#123;.Names&#125;&#125;&quot;</span> | grep -q <span class="string">&quot;reader&quot;</span>; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot; reader 容器名已经被占用&quot;</span></span><br><span class="line"><span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> [ ! -d /root/docker/Reader ]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">mkdir</span> -p /root/docker/Reader</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">cd</span> /root/docker/Reader</span><br><span class="line"><span class="keyword">if</span> [ -f <span class="string">&quot;docker-compose.yml&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">rm</span> docker-compose.yml</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">cat</span> &lt;&lt;<span class="string">EOF &gt; docker-compose.yml</span></span><br><span class="line"><span class="string">version: &#x27;3.1&#x27;</span></span><br><span class="line"><span class="string">services:</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  reader:</span></span><br><span class="line"><span class="string">    image: hectorqin/reader</span></span><br><span class="line"><span class="string">    container_name: reader</span></span><br><span class="line"><span class="string">    restart: always</span></span><br><span class="line"><span class="string">    ports:</span></span><br><span class="line"><span class="string">      - 4396:8080</span></span><br><span class="line"><span class="string">    volumes:</span></span><br><span class="line"><span class="string">      - ./logs:/logs</span></span><br><span class="line"><span class="string">      - ./storage:/storage</span></span><br><span class="line"><span class="string">    environment:</span></span><br><span class="line"><span class="string">      - SPRING_PROFILES_ACTIVE=prod</span></span><br><span class="line"><span class="string">      - READER_APP_USERBOOKLIMIT=500</span></span><br><span class="line"><span class="string">      - READER_APP_CACHECHAPTERCONTENT=true</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line">docker-compose up -d</span><br><span class="line">ufw allow 4396/tcp</span><br><span class="line">yellow <span class="string">&quot;-----------------------------------------------&quot;</span></span><br><span class="line">green <span class="string">&quot; Web 端口：4396&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">green <span class="string">&quot; Docker IP = <span class="subst">$(ip addr show docker0 | grep &#x27;inet\b&#x27; | awk &#x27;&#123;print $2&#125;&#x27; | cut -d &#x27;/&#x27; -f1)</span>:4396&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">green <span class="string">&quot; Web 网址  = http://<span class="subst">$(ifconfig $(ifconfig | grep -oP &#x27;enp\w+&#x27;)</span> | grep &#x27;inet &#x27; | awk &#x27;&#123;print <span class="variable">$2</span>&#125;&#x27;):4396&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">green <span class="string">&quot; Reader 安装完毕！&quot;</span></span><br><span class="line">yellow <span class="string">&quot;-----------------------------------------------&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">reader_install</span><br></pre></td></tr></table></figure><hr><h2 id="WeChat-Markdown-Editor"><a href="#WeChat-Markdown-Editor" class="headerlink" title="WeChat Markdown Editor"></a>WeChat Markdown Editor</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#! /bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">red</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;\033[31m\033[01m<span class="variable">$1</span>\033[0m&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">green</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;\033[32m\033[01m<span class="variable">$1</span>\033[0m&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">yellow</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;\033[33m\033[01m<span class="variable">$1</span>\033[0m&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># WeChat Markdown Editor</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> wechat-markdown-<span class="function"><span class="title">editor_install</span></span>()&#123;</span><br><span class="line"><span class="keyword">if</span> nc -z localhost 13480; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot; 13480 端口已经被占用，请检查相关进程&quot;</span></span><br><span class="line"><span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> docker ps -a --format <span class="string">&quot;&#123;&#123;.Names&#125;&#125;&quot;</span> | grep -q <span class="string">&quot;wechat&quot;</span>; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot; wechat 容器名已经被占用&quot;</span></span><br><span class="line"><span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> [ ! -d /root/docker/WeChat-Markdown-Editor ]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">mkdir</span> -p /root/docker/WeChat-Markdown-Editor</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">cd</span> /root/docker/WeChat-Markdown-Editor</span><br><span class="line"><span class="keyword">if</span> [ -f <span class="string">&quot;docker-compose.yml&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">rm</span> docker-compose.yml</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">cat</span> &lt;&lt;<span class="string">EOF &gt; docker-compose.yml</span></span><br><span class="line"><span class="string">version: &#x27;3.3&#x27;</span></span><br><span class="line"><span class="string">services:</span></span><br><span class="line"><span class="string">    md:</span></span><br><span class="line"><span class="string">        restart: always</span></span><br><span class="line"><span class="string">        container_name: wechat</span></span><br><span class="line"><span class="string">        ports:</span></span><br><span class="line"><span class="string">            - &#x27;13480:80&#x27;</span></span><br><span class="line"><span class="string">        image: &#x27;doocs/md:latest&#x27;</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line">docker-compose up -d</span><br><span class="line">ufw allow 13480/tcp</span><br><span class="line">yellow <span class="string">&quot;-----------------------------------------------&quot;</span></span><br><span class="line">green <span class="string">&quot; Web 端口：13480&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">green <span class="string">&quot; Docker IP = <span class="subst">$(ip addr show docker0 | grep &#x27;inet\b&#x27; | awk &#x27;&#123;print $2&#125;&#x27; | cut -d &#x27;/&#x27; -f1)</span>:13480&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">green <span class="string">&quot; Web 网址  = http://<span class="subst">$(ifconfig $(ifconfig | grep -oP &#x27;enp\w+&#x27;)</span> | grep &#x27;inet &#x27; | awk &#x27;&#123;print <span class="variable">$2</span>&#125;&#x27;):13480&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">green <span class="string">&quot; WeChat Markdown Editor 安装完毕！&quot;</span></span><br><span class="line">yellow <span class="string">&quot;-----------------------------------------------&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">wechat-markdown-editor_install</span><br></pre></td></tr></table></figure><hr><h2 id="ZFile"><a href="#ZFile" class="headerlink" title="ZFile"></a>ZFile</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#! /bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">red</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;\033[31m\033[01m<span class="variable">$1</span>\033[0m&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">green</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;\033[32m\033[01m<span class="variable">$1</span>\033[0m&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">yellow</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;\033[33m\033[01m<span class="variable">$1</span>\033[0m&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># ZFile</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">zfile_install</span></span>()&#123;</span><br><span class="line"><span class="keyword">if</span> nc -z localhost 9180; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot; 9180 端口已经被占用，请检查相关进程&quot;</span></span><br><span class="line"><span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> docker ps -a --format <span class="string">&quot;&#123;&#123;.Names&#125;&#125;&quot;</span> | grep -q <span class="string">&quot;zfile&quot;</span>; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot; zfile 容器名已经被占用&quot;</span></span><br><span class="line"><span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> [ ! -d /root/docker/ZFile ]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">mkdir</span> -p /root/docker/ZFile</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">cd</span> /root/docker/ZFile</span><br><span class="line"><span class="keyword">if</span> [ -f <span class="string">&quot;docker-compose.yml&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">rm</span> docker-compose.yml</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">cat</span> &lt;&lt;<span class="string">EOF &gt; docker-compose.yml</span></span><br><span class="line"><span class="string">version: &#x27;3.3&#x27;</span></span><br><span class="line"><span class="string">services:</span></span><br><span class="line"><span class="string">    zfile:</span></span><br><span class="line"><span class="string">        container_name: zfile</span></span><br><span class="line"><span class="string">        restart: always</span></span><br><span class="line"><span class="string">        ports:</span></span><br><span class="line"><span class="string">            - &#x27;9180:8080&#x27;</span></span><br><span class="line"><span class="string">        volumes:</span></span><br><span class="line"><span class="string">            - &#x27;./db:/root/.zfile-v4/db&#x27;</span></span><br><span class="line"><span class="string">            - &#x27;./logs:/root/.zfile-v4/logs&#x27;</span></span><br><span class="line"><span class="string">            - &#x27;./file:/data/file&#x27;</span></span><br><span class="line"><span class="string">        image: zhaojun1998/zfile</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line">docker-compose up -d</span><br><span class="line">ufw allow 9180/tcp</span><br><span class="line">yellow <span class="string">&quot;-----------------------------------------------&quot;</span></span><br><span class="line">green <span class="string">&quot; Web 端口：9180&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">green <span class="string">&quot; Docker IP = <span class="subst">$(ip addr show docker0 | grep &#x27;inet\b&#x27; | awk &#x27;&#123;print $2&#125;&#x27; | cut -d &#x27;/&#x27; -f1)</span>:9180&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">green <span class="string">&quot; Web 网址  = http://<span class="subst">$(ifconfig $(ifconfig | grep -oP &#x27;enp\w+&#x27;)</span> | grep &#x27;inet &#x27; | awk &#x27;&#123;print <span class="variable">$2</span>&#125;&#x27;):9180&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">green <span class="string">&quot; ZFile 安装完毕！&quot;</span></span><br><span class="line">yellow <span class="string">&quot;-----------------------------------------------&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">zfile_install</span><br></pre></td></tr></table></figure><hr><h2 id="WordPress"><a href="#WordPress" class="headerlink" title="WordPress"></a>WordPress</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#! /bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">red</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;\033[31m\033[01m<span class="variable">$1</span>\033[0m&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">green</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;\033[32m\033[01m<span class="variable">$1</span>\033[0m&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">yellow</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;\033[33m\033[01m<span class="variable">$1</span>\033[0m&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># WordPress</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">wordpress_install</span></span>()&#123;</span><br><span class="line"><span class="keyword">if</span> nc -z localhost 7080 &amp;&amp; nc -z localhost 7081; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot; 7080 7081 端口已经被占用，请检查相关进程&quot;</span></span><br><span class="line"><span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> docker ps -a --format <span class="string">&quot;&#123;&#123;.Names&#125;&#125;&quot;</span> | grep -q <span class="string">&quot;wordpress&quot;</span> &amp;&amp; docker ps -a --format <span class="string">&quot;&#123;&#123;.Names&#125;&#125;&quot;</span> | grep -q <span class="string">&quot;wordpress_mysql&quot;</span> &amp;&amp; docker ps -a --format <span class="string">&quot;&#123;&#123;.Names&#125;&#125;&quot;</span> | grep -q <span class="string">&quot;wordpress_phpmyadmin&quot;</span>; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot; wordpress wordpress_mysql wordpress_phpmyadmin 容器名已经被占用&quot;</span></span><br><span class="line"><span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> [ ! -d /root/docker/WordPress ]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">mkdir</span> -p /root/docker/WordPress</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">cd</span> /root/docker/WordPress</span><br><span class="line"><span class="keyword">if</span> [ -f <span class="string">&quot;uploads.ini&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">  green <span class="string">&quot; uploads.ini 文件已经存在, 跳过创建步骤.&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">  <span class="built_in">cat</span> &lt;&lt;<span class="string">EOF &gt; uploads.ini</span></span><br><span class="line"><span class="string">file_uploads = On</span></span><br><span class="line"><span class="string">upload_max_filesize = 256M</span></span><br><span class="line"><span class="string">post_max_size = 256M</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line">green <span class="string">&quot; uploads.ini 创建成功,用于设置上传大小。&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> [ -f <span class="string">&quot;docker-compose.yml&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">rm</span> docker-compose.yml</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">cat</span> &lt;&lt;<span class="string">EOF &gt; docker-compose.yml</span></span><br><span class="line"><span class="string">version: &#x27;3.1&#x27;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">services:</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  wordpress:</span></span><br><span class="line"><span class="string">    container_name: wordpress</span></span><br><span class="line"><span class="string">    image: wordpress</span></span><br><span class="line"><span class="string">    restart: always</span></span><br><span class="line"><span class="string">    ports:</span></span><br><span class="line"><span class="string">      - 7080:80</span></span><br><span class="line"><span class="string">    environment:</span></span><br><span class="line"><span class="string">      WORDPRESS_DB_HOST: db</span></span><br><span class="line"><span class="string">      WORDPRESS_DB_USER: wordpress_user</span></span><br><span class="line"><span class="string">      WORDPRESS_DB_PASSWORD: wordpress_password</span></span><br><span class="line"><span class="string">      WORDPRESS_DB_NAME: wordpress_db</span></span><br><span class="line"><span class="string">    volumes:</span></span><br><span class="line"><span class="string">      - ./html:/var/www/html</span></span><br><span class="line"><span class="string">      - ./uploads.ini:/usr/local/etc/php/conf.d/uploads.ini</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  db:</span></span><br><span class="line"><span class="string">    container_name: wordpress_mysql</span></span><br><span class="line"><span class="string">    image: mysql:5.7</span></span><br><span class="line"><span class="string">    restart: always</span></span><br><span class="line"><span class="string">    environment:</span></span><br><span class="line"><span class="string">      MYSQL_DATABASE: wordpress_db</span></span><br><span class="line"><span class="string">      MYSQL_USER: wordpress_user</span></span><br><span class="line"><span class="string">      MYSQL_PASSWORD: wordpress_password</span></span><br><span class="line"><span class="string">      MYSQL_RANDOM_ROOT_PASSWORD: rootpassword</span></span><br><span class="line"><span class="string">    volumes:</span></span><br><span class="line"><span class="string">      - ./mysql:/var/lib/mysql</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  phpmyadmin:</span></span><br><span class="line"><span class="string">    container_name: wordpress_phpmyadmin</span></span><br><span class="line"><span class="string">    image: phpmyadmin</span></span><br><span class="line"><span class="string">    restart: always</span></span><br><span class="line"><span class="string">    ports:</span></span><br><span class="line"><span class="string">      - 7081:80</span></span><br><span class="line"><span class="string">    environment:</span></span><br><span class="line"><span class="string">      PMA_HOST: db</span></span><br><span class="line"><span class="string">      MYSQL_ROOT_PASSWORD : rootpassword</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line">docker-compose up -d</span><br><span class="line">ufw allow 7080/tcp</span><br><span class="line">ufw allow 7081/tcp</span><br><span class="line">yellow <span class="string">&quot;-----------------------------------------------&quot;</span></span><br><span class="line">green <span class="string">&quot; Web 端口：7080 7081&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">green <span class="string">&quot; WordPress&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">green <span class="string">&quot; Docker IP = <span class="subst">$(ip addr show docker0 | grep &#x27;inet\b&#x27; | awk &#x27;&#123;print $2&#125;&#x27; | cut -d &#x27;/&#x27; -f1)</span>:7080&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">green <span class="string">&quot; PHPMyAdmin&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">green <span class="string">&quot; Docker IP = <span class="subst">$(ip addr show docker0 | grep &#x27;inet\b&#x27; | awk &#x27;&#123;print $2&#125;&#x27; | cut -d &#x27;/&#x27; -f1)</span>:7081&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">green <span class="string">&quot; WordPress&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">green <span class="string">&quot; Web 网址  = http://<span class="subst">$(ifconfig $(ifconfig | grep -oP &#x27;enp\w+&#x27;)</span> | grep &#x27;inet &#x27; | awk &#x27;&#123;print <span class="variable">$2</span>&#125;&#x27;):7080&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">green <span class="string">&quot; PHPMyAdmin&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">green <span class="string">&quot; Web 网址  = http://<span class="subst">$(ifconfig $(ifconfig | grep -oP &#x27;enp\w+&#x27;)</span> | grep &#x27;inet &#x27; | awk &#x27;&#123;print <span class="variable">$2</span>&#125;&#x27;):7081&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">green <span class="string">&quot; WordPress 安装完毕！&quot;</span></span><br><span class="line">yellow <span class="string">&quot;-----------------------------------------------&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">wordpress_install</span><br></pre></td></tr></table></figure><hr><h2 id="qBittorrent"><a href="#qBittorrent" class="headerlink" title="qBittorrent"></a>qBittorrent</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#! /bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">red</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;\033[31m\033[01m<span class="variable">$1</span>\033[0m&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">green</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;\033[32m\033[01m<span class="variable">$1</span>\033[0m&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">yellow</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;\033[33m\033[01m<span class="variable">$1</span>\033[0m&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># qBittorrent</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">qbittorrent_install</span></span>()&#123;</span><br><span class="line"><span class="keyword">if</span> nc -z localhost 6881 &amp;&amp; nc -z localhost 8081; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot; 6881 8081 端口已经被占用，请检查相关进程&quot;</span></span><br><span class="line"><span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> docker ps -a --format <span class="string">&quot;&#123;&#123;.Names&#125;&#125;&quot;</span> | grep -q <span class="string">&quot;qbittorrent&quot;</span>; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot; qbittorrent 容器名已经被占用&quot;</span></span><br><span class="line"><span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> [ ! -d /root/docker/qBittorrent ]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">mkdir</span> -p /root/docker/qBittorrent</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">cd</span> /root/docker/qBittorrent</span><br><span class="line"><span class="keyword">if</span> [ -f <span class="string">&quot;docker-compose.yml&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">rm</span> docker-compose.yml</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">cat</span> &lt;&lt;<span class="string">EOF &gt; docker-compose.yml</span></span><br><span class="line"><span class="string">version: &quot;2&quot;</span></span><br><span class="line"><span class="string">services:</span></span><br><span class="line"><span class="string">  qbittorrent:</span></span><br><span class="line"><span class="string">    image: linuxserver/qbittorrent</span></span><br><span class="line"><span class="string">    container_name: qbittorrent</span></span><br><span class="line"><span class="string">    environment:</span></span><br><span class="line"><span class="string">      - PUID=1000</span></span><br><span class="line"><span class="string">      - PGID=1000</span></span><br><span class="line"><span class="string">      - TZ=Asia/Shanghai</span></span><br><span class="line"><span class="string">      - UMASK_SET=022</span></span><br><span class="line"><span class="string">      - WEBUI_PORT=8081</span></span><br><span class="line"><span class="string">    volumes:</span></span><br><span class="line"><span class="string">      - ./config:/config</span></span><br><span class="line"><span class="string">      - ./downloads:/downloads</span></span><br><span class="line"><span class="string">    ports:</span></span><br><span class="line"><span class="string">      - 6881:6881</span></span><br><span class="line"><span class="string">      - 6881:6881/udp</span></span><br><span class="line"><span class="string">      - 8081:8081</span></span><br><span class="line"><span class="string">    restart: unless-stopped</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line">docker-compose up -d</span><br><span class="line">ufw allow 6881/tcp</span><br><span class="line">ufw allow 6881/udp</span><br><span class="line">ufw allow 8081/tcp</span><br><span class="line">yellow <span class="string">&quot;-----------------------------------------------&quot;</span></span><br><span class="line">green <span class="string">&quot; Web 端口：8081&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">green <span class="string">&quot; Docker IP = <span class="subst">$(ip addr show docker0 | grep &#x27;inet\b&#x27; | awk &#x27;&#123;print $2&#125;&#x27; | cut -d &#x27;/&#x27; -f1)</span>:8081&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">green <span class="string">&quot; Web 网址  = http://<span class="subst">$(ifconfig $(ifconfig | grep -oP &#x27;enp\w+&#x27;)</span> | grep &#x27;inet &#x27; | awk &#x27;&#123;print <span class="variable">$2</span>&#125;&#x27;):8081&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">green <span class="string">&quot; 初始账号：admin&quot;</span></span><br><span class="line">green <span class="string">&quot; 初始密码：adminadmin&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">green <span class="string">&quot; qBittorrent 安装完毕！&quot;</span></span><br><span class="line">yellow <span class="string">&quot;-----------------------------------------------&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">qbittorrent_install</span><br></pre></td></tr></table></figure><hr><h2 id="Halo"><a href="#Halo" class="headerlink" title="Halo"></a>Halo</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#! /bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">red</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;\033[31m\033[01m<span class="variable">$1</span>\033[0m&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">green</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;\033[32m\033[01m<span class="variable">$1</span>\033[0m&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">yellow</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;\033[33m\033[01m<span class="variable">$1</span>\033[0m&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Halo</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">halo_install</span></span>()&#123;</span><br><span class="line"><span class="keyword">if</span> nc -z localhost 8040; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot; 8040 端口已经被占用，请检查相关进程&quot;</span></span><br><span class="line"><span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> docker ps -a --format <span class="string">&quot;&#123;&#123;.Names&#125;&#125;&quot;</span> | grep -q <span class="string">&quot;halo&quot;</span>; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot; halo 容器名已经被占用&quot;</span></span><br><span class="line"><span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> [ ! -d /root/docker/Halo ]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">mkdir</span> -p /root/docker/Halo</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">cd</span> /root/docker/Halo</span><br><span class="line"><span class="keyword">if</span> [ -f <span class="string">&quot;docker-compose.yml&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">rm</span> docker-compose.yml</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">cat</span> &lt;&lt;<span class="string">EOF &gt; docker-compose.yml</span></span><br><span class="line"><span class="string">version: &#x27;3.3&#x27;</span></span><br><span class="line"><span class="string">services:</span></span><br><span class="line"><span class="string">    halo:</span></span><br><span class="line"><span class="string">        container_name: halo</span></span><br><span class="line"><span class="string">        restart: always</span></span><br><span class="line"><span class="string">        ports:</span></span><br><span class="line"><span class="string">            - &#x27;8040:8090&#x27;</span></span><br><span class="line"><span class="string">        volumes:</span></span><br><span class="line"><span class="string">            - &#x27;./halo:/root/.halo&#x27;</span></span><br><span class="line"><span class="string">        image: &#x27;halohub/halo:1.5.4&#x27;</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line">docker-compose up -d</span><br><span class="line">ufw allow 8040/tcp</span><br><span class="line">yellow <span class="string">&quot;-----------------------------------------------&quot;</span></span><br><span class="line">green <span class="string">&quot; Web 端口：8040&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">green <span class="string">&quot; Docker IP = <span class="subst">$(ip addr show docker0 | grep &#x27;inet\b&#x27; | awk &#x27;&#123;print $2&#125;&#x27; | cut -d &#x27;/&#x27; -f1)</span>:8040&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">green <span class="string">&quot; Web 网址  = http://<span class="subst">$(ifconfig $(ifconfig | grep -oP &#x27;enp\w+&#x27;)</span> | grep &#x27;inet &#x27; | awk &#x27;&#123;print <span class="variable">$2</span>&#125;&#x27;):8040&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">green <span class="string">&quot; Halo 安装完毕！&quot;</span></span><br><span class="line">yellow <span class="string">&quot;-----------------------------------------------&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">halo_install</span><br></pre></td></tr></table></figure><hr><h2 id="Stirling-PDF"><a href="#Stirling-PDF" class="headerlink" title="Stirling PDF"></a>Stirling PDF</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#! /bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">red</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;\033[31m\033[01m<span class="variable">$1</span>\033[0m&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">green</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;\033[32m\033[01m<span class="variable">$1</span>\033[0m&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">yellow</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;\033[33m\033[01m<span class="variable">$1</span>\033[0m&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Stirling PDF</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> stirling-<span class="function"><span class="title">pdf_install</span></span>()&#123;</span><br><span class="line"><span class="keyword">if</span> nc -z localhost 8077; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot; 8077 端口已经被占用，请检查相关进程&quot;</span></span><br><span class="line"><span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> docker ps -a --format <span class="string">&quot;&#123;&#123;.Names&#125;&#125;&quot;</span> | grep -q <span class="string">&quot;spdf&quot;</span>; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot; spdf 容器名已经被占用&quot;</span></span><br><span class="line"><span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> [ ! -d /root/docker/Stirling-PDF ]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">mkdir</span> -p /root/docker/Stirling-PDF</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">cd</span> /root/docker/Stirling-PDF</span><br><span class="line"><span class="keyword">if</span> [ -f <span class="string">&quot;docker-compose.yml&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">rm</span> docker-compose.yml</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">cat</span> &lt;&lt;<span class="string">EOF &gt; docker-compose.yml</span></span><br><span class="line"><span class="string">version: &#x27;3&#x27;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">services:</span></span><br><span class="line"><span class="string">  s-pdf:</span></span><br><span class="line"><span class="string">    image: frooodle/s-pdf</span></span><br><span class="line"><span class="string">    container_name: spdf</span></span><br><span class="line"><span class="string">    restart: unless-stopped</span></span><br><span class="line"><span class="string">    ports:</span></span><br><span class="line"><span class="string">      - 8077:8080</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line">docker-compose up -d</span><br><span class="line">ufw allow 8077/tcp</span><br><span class="line">yellow <span class="string">&quot;-----------------------------------------------&quot;</span></span><br><span class="line">green <span class="string">&quot; Web 端口：8077&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">green <span class="string">&quot; Docker IP = <span class="subst">$(ip addr show docker0 | grep &#x27;inet\b&#x27; | awk &#x27;&#123;print $2&#125;&#x27; | cut -d &#x27;/&#x27; -f1)</span>:8077&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">green <span class="string">&quot; Web 网址  = http://<span class="subst">$(ifconfig $(ifconfig | grep -oP &#x27;enp\w+&#x27;)</span> | grep &#x27;inet &#x27; | awk &#x27;&#123;print <span class="variable">$2</span>&#125;&#x27;):8077&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">green <span class="string">&quot; Stirling PDF 安装完毕！&quot;</span></span><br><span class="line">yellow <span class="string">&quot;-----------------------------------------------&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">stirling-pdf_install</span><br></pre></td></tr></table></figure><hr><h2 id="Sshwifty"><a href="#Sshwifty" class="headerlink" title="Sshwifty"></a>Sshwifty</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#! /bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">red</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;\033[31m\033[01m<span class="variable">$1</span>\033[0m&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">green</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;\033[32m\033[01m<span class="variable">$1</span>\033[0m&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">yellow</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;\033[33m\033[01m<span class="variable">$1</span>\033[0m&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Sshwifty</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">sshwifty_install</span></span>()&#123;</span><br><span class="line"><span class="keyword">if</span> nc -z localhost 8090; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot; 8090 端口已经被占用，请检查相关进程&quot;</span></span><br><span class="line"><span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> docker ps -a --format <span class="string">&quot;&#123;&#123;.Names&#125;&#125;&quot;</span> | grep -q <span class="string">&quot;sshwifty&quot;</span>; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot; sshwifty 容器名已经被占用&quot;</span></span><br><span class="line"><span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> [ ! -d /root/docker/Sshwifty ]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">mkdir</span> -p /root/docker/Sshwifty</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">cd</span> /root/docker/Sshwifty</span><br><span class="line"><span class="keyword">if</span> [ -f <span class="string">&quot;docker-compose.yml&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">rm</span> docker-compose.yml</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">cat</span> &lt;&lt;<span class="string">EOF &gt; docker-compose.yml</span></span><br><span class="line"><span class="string">version: &#x27;3.3&#x27;</span></span><br><span class="line"><span class="string">services:</span></span><br><span class="line"><span class="string">    sshwifty:</span></span><br><span class="line"><span class="string">        restart: always</span></span><br><span class="line"><span class="string">        ports:</span></span><br><span class="line"><span class="string">            - &#x27;8090:8182&#x27;</span></span><br><span class="line"><span class="string">        container_name: sshwifty</span></span><br><span class="line"><span class="string">        image: &#x27;niruix/sshwifty:latest&#x27;</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line">docker-compose up -d</span><br><span class="line">ufw allow 8090/tcp</span><br><span class="line">yellow <span class="string">&quot;-----------------------------------------------&quot;</span></span><br><span class="line">green <span class="string">&quot; Web 端口：8090&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">green <span class="string">&quot; Docker IP = <span class="subst">$(ip addr show docker0 | grep &#x27;inet\b&#x27; | awk &#x27;&#123;print $2&#125;&#x27; | cut -d &#x27;/&#x27; -f1)</span>:8090&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">green <span class="string">&quot; Web 网址  = http://<span class="subst">$(ifconfig $(ifconfig | grep -oP &#x27;enp\w+&#x27;)</span> | grep &#x27;inet &#x27; | awk &#x27;&#123;print <span class="variable">$2</span>&#125;&#x27;):8090&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">green <span class="string">&quot; Sshwifty 安装完毕！&quot;</span></span><br><span class="line">yellow <span class="string">&quot;-----------------------------------------------&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">sshwifty_install</span><br></pre></td></tr></table></figure><hr><h2 id="RustDesk"><a href="#RustDesk" class="headerlink" title="RustDesk"></a>RustDesk</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#! /bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">red</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;\033[31m\033[01m<span class="variable">$1</span>\033[0m&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">green</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;\033[32m\033[01m<span class="variable">$1</span>\033[0m&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">yellow</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;\033[33m\033[01m<span class="variable">$1</span>\033[0m&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># RustDesk</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">rustdesk_install</span></span>()&#123;</span><br><span class="line"><span class="keyword">if</span> nc -z localhost 21115 &amp;&amp; nc -z localhost 21116 &amp;&amp; nc -z localhost 21117 &amp;&amp; nc -z localhost 21118 &amp;&amp; nc -z localhost 21119; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot; 21115 21116 21117 21118 21119 中的端口已经被占用，请检查相关进程&quot;</span></span><br><span class="line"><span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> docker ps -a --format <span class="string">&quot;&#123;&#123;.Names&#125;&#125;&quot;</span> | grep -q <span class="string">&quot;hbbs&quot;</span> &amp;&amp; docker ps -a --format <span class="string">&quot;&#123;&#123;.Names&#125;&#125;&quot;</span> | grep -q <span class="string">&quot;hbbr&quot;</span>; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot; hbbs hbbr 容器名已经被占用&quot;</span></span><br><span class="line"><span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> [ ! -d /root/docker/RustDesk ]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">mkdir</span> -p /root/docker/RustDesk</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">cd</span> /root/docker/RustDesk</span><br><span class="line"><span class="keyword">if</span> [ -f <span class="string">&quot;docker-compose.yml&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">rm</span> docker-compose.yml</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">cat</span> &lt;&lt;<span class="string">EOF &gt; docker-compose.yml</span></span><br><span class="line"><span class="string">version: &#x27;3&#x27;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">networks:</span></span><br><span class="line"><span class="string">  rustdesk-net:</span></span><br><span class="line"><span class="string">    external: false</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">services:</span></span><br><span class="line"><span class="string">  hbbs:</span></span><br><span class="line"><span class="string">    container_name: hbbs</span></span><br><span class="line"><span class="string">    ports:</span></span><br><span class="line"><span class="string">      - 21115:21115</span></span><br><span class="line"><span class="string">      - 21116:21116</span></span><br><span class="line"><span class="string">      - 21116:21116/udp</span></span><br><span class="line"><span class="string">      - 21118:21118</span></span><br><span class="line"><span class="string">    image: rustdesk/rustdesk-server:latest</span></span><br><span class="line"><span class="string">    command: hbbs -r https://rustdesk.rahn.top</span></span><br><span class="line"><span class="string">    volumes:</span></span><br><span class="line"><span class="string">      - ./hbbs:/root</span></span><br><span class="line"><span class="string">    networks:</span></span><br><span class="line"><span class="string">      - rustdesk-net</span></span><br><span class="line"><span class="string">    depends_on:</span></span><br><span class="line"><span class="string">      - hbbr</span></span><br><span class="line"><span class="string">    restart: unless-stopped</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  hbbr:</span></span><br><span class="line"><span class="string">    container_name: hbbr</span></span><br><span class="line"><span class="string">    ports:</span></span><br><span class="line"><span class="string">      - 21117:21117</span></span><br><span class="line"><span class="string">      - 21119:21119</span></span><br><span class="line"><span class="string">    image: rustdesk/rustdesk-server:latest</span></span><br><span class="line"><span class="string">    command: hbbr</span></span><br><span class="line"><span class="string">    volumes:</span></span><br><span class="line"><span class="string">      - ./hbbr:/root</span></span><br><span class="line"><span class="string">    networks:</span></span><br><span class="line"><span class="string">      - rustdesk-net</span></span><br><span class="line"><span class="string">    restart: unless-stopped</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line">docker-compose up -d</span><br><span class="line">ufw allow 21115/tcp</span><br><span class="line">ufw allow 21116/udp</span><br><span class="line">ufw allow 21116/tcp</span><br><span class="line">ufw allow 21117/tcp</span><br><span class="line">ufw allow 21118/tcp</span><br><span class="line">ufw allow 21119/tcp</span><br><span class="line">yellow <span class="string">&quot;-----------------------------------------------&quot;</span></span><br><span class="line">green <span class="string">&quot; Web 端口：21117&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">green <span class="string">&quot; Docker IP = <span class="subst">$(ip addr show docker0 | grep &#x27;inet\b&#x27; | awk &#x27;&#123;print $2&#125;&#x27; | cut -d &#x27;/&#x27; -f1)</span>:21117&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">green <span class="string">&quot; Web 网址  = http://<span class="subst">$(ifconfig $(ifconfig | grep -oP &#x27;enp\w+&#x27;)</span> | grep &#x27;inet &#x27; | awk &#x27;&#123;print <span class="variable">$2</span>&#125;&#x27;):21117&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">green <span class="string">&quot; ID 服务器 = https://rustdesk.rahn.top&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line"><span class="built_in">cd</span> /root/docker/RustDesk/hbbs</span><br><span class="line">green <span class="string">&quot; Key       = <span class="subst">$(cat id_ed25519.pub)</span>&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">green <span class="string">&quot; RustDesk 安装完毕！&quot;</span></span><br><span class="line">yellow <span class="string">&quot;-----------------------------------------------&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">rustdesk_install</span><br></pre></td></tr></table></figure><hr><h2 id="Weserv"><a href="#Weserv" class="headerlink" title="Weserv"></a>Weserv</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#! /bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">red</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;\033[31m\033[01m<span class="variable">$1</span>\033[0m&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">green</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;\033[32m\033[01m<span class="variable">$1</span>\033[0m&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">yellow</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;\033[33m\033[01m<span class="variable">$1</span>\033[0m&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Weserv</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">weserv_install</span></span>()&#123;</span><br><span class="line"><span class="keyword">if</span> nc -z localhost 9999; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot; 9999 端口已经被占用，请检查相关进程&quot;</span></span><br><span class="line"><span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> docker ps -a --format <span class="string">&quot;&#123;&#123;.Names&#125;&#125;&quot;</span> | grep -q <span class="string">&quot;weserv&quot;</span>; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot; weserv 容器名已经被占用&quot;</span></span><br><span class="line"><span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> [ ! -d /root/docker/Weserv ]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">mkdir</span> -p /root/docker/Weserv</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">cd</span> /root/docker/Weserv</span><br><span class="line"><span class="keyword">if</span> [ -f <span class="string">&quot;docker-compose.yml&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">rm</span> docker-compose.yml</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">cat</span> &lt;&lt;<span class="string">EOF &gt; docker-compose.yml</span></span><br><span class="line"><span class="string">version: &#x27;3.3&#x27;</span></span><br><span class="line"><span class="string">services:</span></span><br><span class="line"><span class="string">    weserv:</span></span><br><span class="line"><span class="string">        ports:</span></span><br><span class="line"><span class="string">            - &#x27;9999:80&#x27;</span></span><br><span class="line"><span class="string">        container_name: weserv</span></span><br><span class="line"><span class="string">        restart: always</span></span><br><span class="line"><span class="string">        image: &#x27;ghcr.io/weserv/images:5.x&#x27;</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line">docker-compose up -d</span><br><span class="line">ufw allow 9999/tcp</span><br><span class="line">yellow <span class="string">&quot;-----------------------------------------------&quot;</span></span><br><span class="line">green <span class="string">&quot; Web 端口：9999&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">green <span class="string">&quot; Docker IP = <span class="subst">$(ip addr show docker0 | grep &#x27;inet\b&#x27; | awk &#x27;&#123;print $2&#125;&#x27; | cut -d &#x27;/&#x27; -f1)</span>:9999&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">green <span class="string">&quot; Web 网址  = http://<span class="subst">$(ifconfig $(ifconfig | grep -oP &#x27;enp\w+&#x27;)</span> | grep &#x27;inet &#x27; | awk &#x27;&#123;print <span class="variable">$2</span>&#125;&#x27;):9999&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">green <span class="string">&quot; Weserv 安装完毕！&quot;</span></span><br><span class="line">yellow <span class="string">&quot;-----------------------------------------------&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">weserv_install</span><br></pre></td></tr></table></figure><hr><h2 id="Jellyfin"><a href="#Jellyfin" class="headerlink" title="Jellyfin"></a>Jellyfin</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#! /bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">red</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;\033[31m\033[01m<span class="variable">$1</span>\033[0m&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">green</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;\033[32m\033[01m<span class="variable">$1</span>\033[0m&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">yellow</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;\033[33m\033[01m<span class="variable">$1</span>\033[0m&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Jellyfin</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">jellyfin_install</span></span>()&#123;</span><br><span class="line"><span class="keyword">if</span> nc -z localhost 8096; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot; 8096 端口已经被占用，请检查相关进程&quot;</span></span><br><span class="line"><span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> docker ps -a --format <span class="string">&quot;&#123;&#123;.Names&#125;&#125;&quot;</span> | grep -q <span class="string">&quot;jellyfin&quot;</span>; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot; jellyfin 容器名已经被占用&quot;</span></span><br><span class="line"><span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> [ ! -d /root/docker/Jellyfin ]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">mkdir</span> -p /root/docker/Jellyfin</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">cd</span> /root/docker/Jellyfin</span><br><span class="line"><span class="keyword">if</span> [ -f <span class="string">&quot;docker-compose.yml&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">rm</span> docker-compose.yml</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">cat</span> &lt;&lt;<span class="string">EOF &gt; docker-compose.yml</span></span><br><span class="line"><span class="string">version: &#x27;3.3&#x27;</span></span><br><span class="line"><span class="string">services:</span></span><br><span class="line"><span class="string">    jellyfin:</span></span><br><span class="line"><span class="string">        container_name: jellyfin</span></span><br><span class="line"><span class="string">        ports:</span></span><br><span class="line"><span class="string">            - &#x27;8096:8096&#x27;</span></span><br><span class="line"><span class="string">        volumes:</span></span><br><span class="line"><span class="string">            - &#x27;./config:/config&#x27;</span></span><br><span class="line"><span class="string">            - &#x27;./cache:/cache&#x27;</span></span><br><span class="line"><span class="string">            - &#x27;./media:/media&#x27;</span></span><br><span class="line"><span class="string">            - &#x27;./movies:/movies&#x27;</span></span><br><span class="line"><span class="string">            - &#x27;./tvshows:/tvshows&#x27;</span></span><br><span class="line"><span class="string">            - &#x27;./animation:/animation&#x27;</span></span><br><span class="line"><span class="string">        environment:</span></span><br><span class="line"><span class="string">            - TZ=Asia/Shanghai</span></span><br><span class="line"><span class="string">        restart: always</span></span><br><span class="line"><span class="string">        image: rahn2029/jellyfin</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line">docker-compose up -d</span><br><span class="line">ufw allow 8096/tcp</span><br><span class="line">yellow <span class="string">&quot;-----------------------------------------------&quot;</span></span><br><span class="line">green <span class="string">&quot; Web 端口：8096&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">green <span class="string">&quot; Docker IP = <span class="subst">$(ip addr show docker0 | grep &#x27;inet\b&#x27; | awk &#x27;&#123;print $2&#125;&#x27; | cut -d &#x27;/&#x27; -f1)</span>:8096&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">green <span class="string">&quot; Web 网址  = http://<span class="subst">$(ifconfig $(ifconfig | grep -oP &#x27;enp\w+&#x27;)</span> | grep &#x27;inet &#x27; | awk &#x27;&#123;print <span class="variable">$2</span>&#125;&#x27;):8096&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">green <span class="string">&quot; Jellyfin 安装完毕！&quot;</span></span><br><span class="line">yellow <span class="string">&quot;-----------------------------------------------&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">jellyfin_install</span><br></pre></td></tr></table></figure><hr><h2 id="Homepage"><a href="#Homepage" class="headerlink" title="Homepage"></a>Homepage</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#! /bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">red</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;\033[31m\033[01m<span class="variable">$1</span>\033[0m&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">green</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;\033[32m\033[01m<span class="variable">$1</span>\033[0m&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">yellow</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;\033[33m\033[01m<span class="variable">$1</span>\033[0m&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Homepage</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">homepage_install</span></span>()&#123;</span><br><span class="line"><span class="keyword">if</span> nc -z localhost 3344; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot; 3344 端口已经被占用，请检查相关进程&quot;</span></span><br><span class="line"><span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> docker ps -a --format <span class="string">&quot;&#123;&#123;.Names&#125;&#125;&quot;</span> | grep -q <span class="string">&quot;homepage&quot;</span>; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot; homepage 容器名已经被占用&quot;</span></span><br><span class="line"><span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> [ ! -d /root/docker/Homepage ]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">mkdir</span> -p /root/docker/Homepage</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">cd</span> /root/docker/Homepage</span><br><span class="line"><span class="keyword">if</span> [ -f <span class="string">&quot;docker-compose.yml&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">rm</span> docker-compose.yml</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">cat</span> &lt;&lt;<span class="string">EOF &gt; docker-compose.yml</span></span><br><span class="line"><span class="string">version: &quot;3.3&quot;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">services:</span></span><br><span class="line"><span class="string">  homepage:</span></span><br><span class="line"><span class="string">    image: rahn2029/homepage</span></span><br><span class="line"><span class="string">    container_name: homepage</span></span><br><span class="line"><span class="string">    ports:</span></span><br><span class="line"><span class="string">      - 3344:3000</span></span><br><span class="line"><span class="string">    volumes:</span></span><br><span class="line"><span class="string">      - ./config:/app/config</span></span><br><span class="line"><span class="string">      - ./images:/app/public/images</span></span><br><span class="line"><span class="string">      - /var/run/docker.sock:/var/run/docker.sock</span></span><br><span class="line"><span class="string">    restart: unless-stopped</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line">docker-compose up -d</span><br><span class="line">ufw allow 3344/tcp</span><br><span class="line">yellow <span class="string">&quot;-----------------------------------------------&quot;</span></span><br><span class="line">green <span class="string">&quot; Web 端口：3344&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">green <span class="string">&quot; Docker IP = <span class="subst">$(ip addr show docker0 | grep &#x27;inet\b&#x27; | awk &#x27;&#123;print $2&#125;&#x27; | cut -d &#x27;/&#x27; -f1)</span>:3344&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">green <span class="string">&quot; Web 网址  = http://<span class="subst">$(ifconfig $(ifconfig | grep -oP &#x27;enp\w+&#x27;)</span> | grep &#x27;inet &#x27; | awk &#x27;&#123;print <span class="variable">$2</span>&#125;&#x27;):3344&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">green <span class="string">&quot; Homepage 安装完毕！&quot;</span></span><br><span class="line">yellow <span class="string">&quot;-----------------------------------------------&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">homepage_install</span><br></pre></td></tr></table></figure><hr><h2 id="Hexo"><a href="#Hexo" class="headerlink" title="Hexo"></a>Hexo</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#! /bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">red</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;\033[31m\033[01m<span class="variable">$1</span>\033[0m&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">green</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;\033[32m\033[01m<span class="variable">$1</span>\033[0m&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">yellow</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;\033[33m\033[01m<span class="variable">$1</span>\033[0m&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Hexo</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">hexo_install</span></span>()&#123;</span><br><span class="line"><span class="keyword">if</span> nc -z localhost 4000; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot; 4000 端口已经被占用，请检查相关进程&quot;</span></span><br><span class="line"><span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> docker ps -a --format <span class="string">&quot;&#123;&#123;.Names&#125;&#125;&quot;</span> | grep -q <span class="string">&quot;hexo&quot;</span>; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot; hexo 容器名已经被占用&quot;</span></span><br><span class="line"><span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> [ ! -d /root/docker/Hexo ]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">mkdir</span> -p /root/docker/Hexo</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">cd</span> /root/docker/Hexo</span><br><span class="line"><span class="keyword">if</span> [ -d <span class="string">&quot;blog&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">green <span class="string">&quot; blog 文件夹已经存在, 跳过执行 docker cp 命令&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">docker run -itd --name hexo -p 4000:4000 rahn2029/hexo-github</span><br><span class="line">docker <span class="built_in">cp</span> hexo:blog $(<span class="built_in">pwd</span>)/blog</span><br><span class="line">docker stop hexo &amp;&amp; docker <span class="built_in">rm</span> hexo</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> [ -f <span class="string">&quot;docker-compose.yml&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">rm</span> docker-compose.yml</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">cat</span> &lt;&lt;<span class="string">EOF &gt; docker-compose.yml</span></span><br><span class="line"><span class="string">version: &#x27;3.3&#x27;</span></span><br><span class="line"><span class="string">services:</span></span><br><span class="line"><span class="string">    hexo-butterfly:</span></span><br><span class="line"><span class="string">        container_name: hexo</span></span><br><span class="line"><span class="string">        restart: always</span></span><br><span class="line"><span class="string">        ports:</span></span><br><span class="line"><span class="string">            - &#x27;4000:4000&#x27;</span></span><br><span class="line"><span class="string">        volumes:</span></span><br><span class="line"><span class="string">            - &#x27;./blog:/blog&#x27;</span></span><br><span class="line"><span class="string">        image: &#x27;rahn2029/hexo-github&#x27;</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line">docker-compose up -d</span><br><span class="line">ufw allow 4000/tcp</span><br><span class="line">yellow <span class="string">&quot;-----------------------------------------------&quot;</span></span><br><span class="line">green <span class="string">&quot; Web 端口：4000&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">green <span class="string">&quot; Docker IP = <span class="subst">$(ip addr show docker0 | grep &#x27;inet\b&#x27; | awk &#x27;&#123;print $2&#125;&#x27; | cut -d &#x27;/&#x27; -f1)</span>:4000&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">green <span class="string">&quot; Web 网址 = http://<span class="subst">$(ifconfig $(ifconfig | grep -oP &#x27;enp\w+&#x27;)</span> | grep &#x27;inet &#x27; | awk &#x27;&#123;print <span class="variable">$2</span>&#125;&#x27;):4000&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">green <span class="string">&quot; Hexo 安装完毕！&quot;</span></span><br><span class="line">yellow <span class="string">&quot;-----------------------------------------------&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">hexo_install</span><br></pre></td></tr></table></figure><hr><h2 id="Duplicati"><a href="#Duplicati" class="headerlink" title="Duplicati"></a>Duplicati</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#! /bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">red</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;\033[31m\033[01m<span class="variable">$1</span>\033[0m&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">green</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;\033[32m\033[01m<span class="variable">$1</span>\033[0m&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">yellow</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;\033[33m\033[01m<span class="variable">$1</span>\033[0m&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Duplicati</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">duplicati_install</span></span>()&#123;</span><br><span class="line"><span class="keyword">if</span> nc -z localhost 8050; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot; 8050 端口已经被占用，请检查相关进程&quot;</span></span><br><span class="line"><span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> docker ps -a --format <span class="string">&quot;&#123;&#123;.Names&#125;&#125;&quot;</span> | grep -q <span class="string">&quot;duplicati&quot;</span>; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot; duplicati 容器名已经被占用&quot;</span></span><br><span class="line"><span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> [ ! -d /root/docker/Duplicati ]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">mkdir</span> -p /root/docker/Duplicati</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">cd</span> /root/docker/Duplicati</span><br><span class="line"><span class="keyword">if</span> [ -f <span class="string">&quot;docker-compose.yml&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">rm</span> docker-compose.yml</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">cat</span> &lt;&lt;<span class="string">EOF &gt; docker-compose.yml</span></span><br><span class="line"><span class="string">version: &quot;2.1&quot;</span></span><br><span class="line"><span class="string">services:</span></span><br><span class="line"><span class="string">  duplicati:</span></span><br><span class="line"><span class="string">    image: lscr.io/linuxserver/duplicati</span></span><br><span class="line"><span class="string">    container_name: duplicati</span></span><br><span class="line"><span class="string">    environment:</span></span><br><span class="line"><span class="string">      - PUID=0</span></span><br><span class="line"><span class="string">      - PGID=0</span></span><br><span class="line"><span class="string">      - TZ=Asia/Shanghai</span></span><br><span class="line"><span class="string">    volumes:</span></span><br><span class="line"><span class="string">      - ./config:/config</span></span><br><span class="line"><span class="string">      - ./backups:/backups</span></span><br><span class="line"><span class="string">      - /root/docker:/source</span></span><br><span class="line"><span class="string">    ports:</span></span><br><span class="line"><span class="string">      - 8050:8200</span></span><br><span class="line"><span class="string">    restart: unless-stopped</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line">docker-compose up -d</span><br><span class="line">ufw allow 8050/tcp</span><br><span class="line">yellow <span class="string">&quot;-----------------------------------------------&quot;</span></span><br><span class="line">green <span class="string">&quot; Web 端口：8050&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">green <span class="string">&quot; Docker IP = <span class="subst">$(ip addr show docker0 | grep &#x27;inet\b&#x27; | awk &#x27;&#123;print $2&#125;&#x27; | cut -d &#x27;/&#x27; -f1)</span>:8050&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">green <span class="string">&quot; Web 网址  = http://<span class="subst">$(ifconfig $(ifconfig | grep -oP &#x27;enp\w+&#x27;)</span> | grep &#x27;inet &#x27; | awk &#x27;&#123;print <span class="variable">$2</span>&#125;&#x27;):8050&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">green <span class="string">&quot; Duplicati 安装完毕！&quot;</span></span><br><span class="line">yellow <span class="string">&quot;-----------------------------------------------&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">duplicati_install</span><br></pre></td></tr></table></figure><hr><h2 id="Syncthing"><a href="#Syncthing" class="headerlink" title="Syncthing"></a>Syncthing</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#! /bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">red</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;\033[31m\033[01m<span class="variable">$1</span>\033[0m&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">green</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;\033[32m\033[01m<span class="variable">$1</span>\033[0m&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">yellow</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;\033[33m\033[01m<span class="variable">$1</span>\033[0m&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Syncthing</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">syncthing_install</span></span>()&#123;</span><br><span class="line"><span class="keyword">if</span> nc -z localhost 8384; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot; 8384 端口已经被占用，请检查相关进程&quot;</span></span><br><span class="line"><span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> docker ps -a --format <span class="string">&quot;&#123;&#123;.Names&#125;&#125;&quot;</span> | grep -q <span class="string">&quot;syncthing&quot;</span>; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot; syncthing 容器名已经被占用&quot;</span></span><br><span class="line"><span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> [ ! -d /root/docker/Syncthing ]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">mkdir</span> -p /root/docker/Syncthing</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">cd</span> /root/docker/Syncthing</span><br><span class="line"><span class="keyword">if</span> [ -f <span class="string">&quot;docker-compose.yml&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">rm</span> docker-compose.yml</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">cat</span> &lt;&lt;<span class="string">EOF &gt; docker-compose.yml</span></span><br><span class="line"><span class="string">version: &quot;2.1&quot;</span></span><br><span class="line"><span class="string">services:</span></span><br><span class="line"><span class="string">  syncthing:</span></span><br><span class="line"><span class="string">    image: lscr.io/linuxserver/syncthing</span></span><br><span class="line"><span class="string">    container_name: syncthing</span></span><br><span class="line"><span class="string">    hostname: syncthing</span></span><br><span class="line"><span class="string">    environment:</span></span><br><span class="line"><span class="string">      - PUID=1000</span></span><br><span class="line"><span class="string">      - PGID=1000</span></span><br><span class="line"><span class="string">      - TZ=Asia/Shanghai</span></span><br><span class="line"><span class="string">    volumes:</span></span><br><span class="line"><span class="string">      - ./config:/config</span></span><br><span class="line"><span class="string">    ports:</span></span><br><span class="line"><span class="string">      - 8384:8384</span></span><br><span class="line"><span class="string">      - 22000:22000/tcp</span></span><br><span class="line"><span class="string">      - 22000:22000/udp</span></span><br><span class="line"><span class="string">      - 21027:21027/udp</span></span><br><span class="line"><span class="string">    restart: unless-stopped</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line">docker-compose up -d</span><br><span class="line">ufw allow 8384/tcp</span><br><span class="line">ufw allow 22000/tcp</span><br><span class="line">ufw allow 22000/udp</span><br><span class="line">ufw allow 21027/udp</span><br><span class="line">yellow <span class="string">&quot;-----------------------------------------------&quot;</span></span><br><span class="line">green <span class="string">&quot; Web 端口：8384&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">green <span class="string">&quot; Docker IP = <span class="subst">$(ip addr show docker0 | grep &#x27;inet\b&#x27; | awk &#x27;&#123;print $2&#125;&#x27; | cut -d &#x27;/&#x27; -f1)</span>:8384&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">green <span class="string">&quot; Web 网址  = http://<span class="subst">$(ifconfig $(ifconfig | grep -oP &#x27;enp\w+&#x27;)</span> | grep &#x27;inet &#x27; | awk &#x27;&#123;print <span class="variable">$2</span>&#125;&#x27;):8384&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">green <span class="string">&quot; Syncthing 安装完毕！&quot;</span></span><br><span class="line">yellow <span class="string">&quot;-----------------------------------------------&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">syncthing_install</span><br></pre></td></tr></table></figure><hr><h2 id="V2RayA"><a href="#V2RayA" class="headerlink" title="V2RayA"></a>V2RayA</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#! /bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">red</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;\033[31m\033[01m<span class="variable">$1</span>\033[0m&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">green</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;\033[32m\033[01m<span class="variable">$1</span>\033[0m&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">yellow</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;\033[33m\033[01m<span class="variable">$1</span>\033[0m&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># V2RayA</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">v2raya_install</span></span>()&#123;</span><br><span class="line"><span class="keyword">if</span> docker ps -a --format <span class="string">&quot;&#123;&#123;.Names&#125;&#125;&quot;</span> | grep -q <span class="string">&quot;v2raya&quot;</span>; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot; v2raya 容器名已经被占用&quot;</span></span><br><span class="line"><span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> [ ! -d /root/docker/V2RayA ]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">mkdir</span> -p /root/docker/V2RayA</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">cd</span> /root/docker/V2RayA</span><br><span class="line"><span class="keyword">if</span> [ -f <span class="string">&quot;docker-compose.yml&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">rm</span> docker-compose.yml</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">cat</span> &lt;&lt;<span class="string">EOF &gt; docker-compose.yml</span></span><br><span class="line"><span class="string">version: &#x27;3.3&#x27;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">services:</span></span><br><span class="line"><span class="string">  v2raya:</span></span><br><span class="line"><span class="string">    image: mzz2017/v2raya</span></span><br><span class="line"><span class="string">    container_name: v2raya</span></span><br><span class="line"><span class="string">    restart: always</span></span><br><span class="line"><span class="string">    privileged: true</span></span><br><span class="line"><span class="string">    network_mode: host</span></span><br><span class="line"><span class="string">    environment:</span></span><br><span class="line"><span class="string">      - V2RAYA_LOG_FILE=/tmp/v2raya.log</span></span><br><span class="line"><span class="string">    volumes:</span></span><br><span class="line"><span class="string">      - /lib/modules:/lib/modules:ro</span></span><br><span class="line"><span class="string">      - /etc/resolv.conf:/etc/resolv.conf</span></span><br><span class="line"><span class="string">      - /etc/v2raya:/etc/v2raya</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line">docker-compose up -d</span><br><span class="line">yellow <span class="string">&quot;-----------------------------------------------&quot;</span></span><br><span class="line">green <span class="string">&quot; Web 端口：2017&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">green <span class="string">&quot; Docker IP = <span class="subst">$(ip addr show docker0 | grep &#x27;inet\b&#x27; | awk &#x27;&#123;print $2&#125;&#x27; | cut -d &#x27;/&#x27; -f1)</span>:2017&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">green <span class="string">&quot; Web 网址  = http://<span class="subst">$(ifconfig $(ifconfig | grep -oP &#x27;enp\w+&#x27;)</span> | grep &#x27;inet &#x27; | awk &#x27;&#123;print <span class="variable">$2</span>&#125;&#x27;):2017&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">green <span class="string">&quot; V2RayA 安装完毕！&quot;</span></span><br><span class="line">yellow <span class="string">&quot;-----------------------------------------------&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">v2raya_install</span><br></pre></td></tr></table></figure><hr><h2 id="X-UI"><a href="#X-UI" class="headerlink" title="X-UI"></a>X-UI</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#! /bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">red</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;\033[31m\033[01m<span class="variable">$1</span>\033[0m&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">green</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;\033[32m\033[01m<span class="variable">$1</span>\033[0m&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">yellow</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;\033[33m\033[01m<span class="variable">$1</span>\033[0m&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># X-UI</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> x-<span class="function"><span class="title">ui_install</span></span>()&#123;</span><br><span class="line"><span class="keyword">if</span> nc -z localhost 52441 &amp;&amp; nc -z localhost 52442 ; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot; 52441 52442 端口已经被占用，请检查相关进程&quot;</span></span><br><span class="line"><span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">bash &lt;(curl -Ls https://raw.githubusercontent.com/vaxilu/x-ui/master/install.sh)</span><br><span class="line">ufw allow 52441/tcp</span><br><span class="line">ufw allow 52442/tcp</span><br><span class="line">yellow <span class="string">&quot;-----------------------------------------------&quot;</span></span><br><span class="line">green <span class="string">&quot; Web 端口：52441&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">green <span class="string">&quot; Docker IP = <span class="subst">$(ip addr show docker0 | grep &#x27;inet\b&#x27; | awk &#x27;&#123;print $2&#125;&#x27; | cut -d &#x27;/&#x27; -f1)</span>:52441&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">green <span class="string">&quot; Web 网址 = http://<span class="subst">$(ifconfig $(ifconfig | grep -oP &#x27;enp\w+&#x27;)</span> | grep &#x27;inet &#x27; | awk &#x27;&#123;print <span class="variable">$2</span>&#125;&#x27;):52441&quot;</span></span><br><span class="line">yellow <span class="string">&quot;-----------------------------------------------&quot;</span></span><br><span class="line">green <span class="string">&quot; location:/docs&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">green <span class="string">&quot; http://<span class="subst">$(ifconfig $(ifconfig | grep -oP &#x27;enp\w+&#x27;)</span> | grep &#x27;inet &#x27; | awk &#x27;&#123;print <span class="variable">$2</span>&#125;&#x27;):52441/docs&quot;</span></span><br><span class="line">yellow <span class="string">&quot;-----------------------------------------------&quot;</span></span><br><span class="line">green <span class="string">&quot; 节点端口：52442&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">green <span class="string">&quot; Advanced&quot;</span></span><br><span class="line">yellow <span class="string">&quot;-----------------------------------------------&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;location /docs &#123;</span></span><br><span class="line"><span class="string">        proxy_redirect off;</span></span><br><span class="line"><span class="string">        proxy_pass http://<span class="subst">$(ifconfig $(ifconfig | grep -oP &#x27;enp\w+&#x27;)</span> | grep &#x27;inet &#x27; | awk &#x27;&#123;print <span class="variable">$2</span>&#125;&#x27;):52442;</span></span><br><span class="line"><span class="string">        proxy_http_version 1.1;</span></span><br><span class="line"><span class="string">        proxy_set_header Upgrade <span class="variable">$http_upgrade</span>;</span></span><br><span class="line"><span class="string">        proxy_set_header Connection &quot;</span>upgrade<span class="string">&quot;;</span></span><br><span class="line"><span class="string">        proxy_set_header Host <span class="variable">$http_host</span>;</span></span><br><span class="line"><span class="string">        proxy_read_timeout 300s;</span></span><br><span class="line"><span class="string">        # Show realip in v2ray access.log</span></span><br><span class="line"><span class="string">        proxy_set_header X-Real-IP <span class="variable">$remote_addr</span>;</span></span><br><span class="line"><span class="string">        proxy_set_header X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span></span><br><span class="line"><span class="string">&#125;&quot;</span></span><br><span class="line">yellow <span class="string">&quot;-----------------------------------------------&quot;</span></span><br><span class="line">green <span class="string">&quot; X-UI 安装完毕！&quot;</span></span><br><span class="line">yellow <span class="string">&quot;-----------------------------------------------&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">x-ui_install</span><br></pre></td></tr></table></figure><hr><h2 id="SwapFile"><a href="#SwapFile" class="headerlink" title="SwapFile"></a>SwapFile</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#! /bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">red</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;\033[31m\033[01m<span class="variable">$1</span>\033[0m&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">green</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;\033[32m\033[01m<span class="variable">$1</span>\033[0m&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">yellow</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;\033[33m\033[01m<span class="variable">$1</span>\033[0m&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># SwapFile</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">add_swap</span></span>()&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment"># root 权限</span></span><br><span class="line"><span class="keyword">if</span> [[ <span class="variable">$EUID</span> -ne 0 ]]; <span class="keyword">then</span></span><br><span class="line">red <span class="string">&quot;Error:This script must be run as root!&quot;</span></span><br><span class="line"><span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># ovz 检测</span></span><br><span class="line"><span class="keyword">if</span> [[ -d <span class="string">&quot;/proc/vz&quot;</span> ]]; <span class="keyword">then</span></span><br><span class="line">red <span class="string">&quot;Your VPS is based on OpenVZ，not supported!&quot;</span></span><br><span class="line"><span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">yellow <span class="string">&quot;-----------------------------------------------&quot;</span></span><br><span class="line">green <span class="string">&quot;请输入需要添加的 swap 大小，建议为内存的 2 倍！&quot;</span></span><br><span class="line">yellow <span class="string">&quot;-----------------------------------------------&quot;</span></span><br><span class="line"><span class="built_in">read</span> -p <span class="string">&quot;请输入 swap 的数值: &quot;</span> swapsize</span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查是否存在 swapfile</span></span><br><span class="line">grep -q <span class="string">&quot;swapfile&quot;</span> /etc/fstab</span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果不存在将为其创建 swap</span></span><br><span class="line"><span class="keyword">if</span> [ $? -ne 0 ]; <span class="keyword">then</span></span><br><span class="line">yellow <span class="string">&quot;-----------------------------------------------&quot;</span></span><br><span class="line">green <span class="string">&quot;并未发现 swapfile 文件，正在为您创建 swapfile 文件&quot;</span></span><br><span class="line">yellow <span class="string">&quot;-----------------------------------------------&quot;</span></span><br><span class="line">fallocate -l <span class="variable">$&#123;swapsize&#125;</span>M /swapfile</span><br><span class="line"><span class="built_in">chmod</span> 600 /swapfile</span><br><span class="line">mkswap /swapfile</span><br><span class="line">swapon /swapfile</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;/swapfile none swap defaults 0 0&#x27;</span> &gt;&gt; /etc/fstab</span><br><span class="line">yellow <span class="string">&quot;-----------------------------------------------&quot;</span></span><br><span class="line">green <span class="string">&quot;swapfile 文件创建成功，swap 信息如下：&quot;</span></span><br><span class="line">yellow <span class="string">&quot;-----------------------------------------------&quot;</span></span><br><span class="line"><span class="built_in">cat</span> /proc/swaps</span><br><span class="line">yellow <span class="string">&quot;-----------------------------------------------&quot;</span></span><br><span class="line"><span class="built_in">cat</span> /proc/meminfo | grep Swap</span><br><span class="line">yellow <span class="string">&quot;-----------------------------------------------&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">yellow <span class="string">&quot;-----------------------------------------------&quot;</span></span><br><span class="line">red <span class="string">&quot;swapfile 文件已经存在！&quot;</span></span><br><span class="line">yellow <span class="string">&quot;-----------------------------------------------&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">del_swap</span></span>()&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment"># root 权限</span></span><br><span class="line"><span class="keyword">if</span> [[ <span class="variable">$EUID</span> -ne 0 ]]; <span class="keyword">then</span></span><br><span class="line">red <span class="string">&quot;Error:This script must be run as root!&quot;</span></span><br><span class="line"><span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># ovz 检测</span></span><br><span class="line"><span class="keyword">if</span> [[ -d <span class="string">&quot;/proc/vz&quot;</span> ]]; <span class="keyword">then</span></span><br><span class="line">red <span class="string">&quot;Your VPS is based on OpenVZ，not supported!&quot;</span></span><br><span class="line"><span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查是否存在 swapfile</span></span><br><span class="line">grep -q <span class="string">&quot;swapfile&quot;</span> /etc/fstab</span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果存在将其删除</span></span><br><span class="line"><span class="keyword">if</span> [ $? -eq 0 ]; <span class="keyword">then</span></span><br><span class="line">yellow <span class="string">&quot;-----------------------------------------------&quot;</span></span><br><span class="line">green <span class="string">&quot;发现 swapfile 文件，正在将其删除...&quot;</span></span><br><span class="line">yellow <span class="string">&quot;-----------------------------------------------&quot;</span></span><br><span class="line">sed -i <span class="string">&#x27;/swapfile/d&#x27;</span> /etc/fstab</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;3&quot;</span> &gt; /proc/sys/vm/drop_caches</span><br><span class="line">swapoff -a</span><br><span class="line"><span class="built_in">rm</span> -f /swapfile</span><br><span class="line">yellow <span class="string">&quot;-----------------------------------------------&quot;</span></span><br><span class="line">    green <span class="string">&quot;swapfile 文件删除完毕！&quot;</span></span><br><span class="line">yellow <span class="string">&quot;-----------------------------------------------&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">yellow <span class="string">&quot;-----------------------------------------------&quot;</span></span><br><span class="line">red <span class="string">&quot;并未发现 swapfile 文件，删除失败！&quot;</span></span><br><span class="line">yellow <span class="string">&quot;-----------------------------------------------&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">start_menu</span></span>()&#123;</span><br><span class="line">clear</span><br><span class="line">yellow <span class="string">&quot;-----------------------------------------------&quot;</span></span><br><span class="line">red    <span class="string">&quot; SwapFile —— 交换空间&quot;</span></span><br><span class="line">yellow <span class="string">&quot;-----------------------------------------------&quot;</span></span><br><span class="line">green  <span class="string">&quot; 1. 添加 swapfile&quot;</span></span><br><span class="line">green  <span class="string">&quot; 2. 删除 swapfile&quot;</span></span><br><span class="line">yellow <span class="string">&quot;-----------------------------------------------&quot;</span></span><br><span class="line">red    <span class="string">&quot; 0. 退出脚本&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line"><span class="built_in">read</span> -p <span class="string">&quot;请输入数字:&quot;</span> menuNumberInput</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$menuNumberInput</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">        1 )</span><br><span class="line">            add_swap</span><br><span class="line">;;</span><br><span class="line">        2 )</span><br><span class="line">            del_swap</span><br><span class="line">;;</span><br><span class="line">        0 )</span><br><span class="line">            <span class="built_in">exit</span></span><br><span class="line">;;</span><br><span class="line">        * )</span><br><span class="line">            clear</span><br><span class="line">            red <span class="string">&quot;请输入正确数字!&quot;</span></span><br><span class="line">            start_menu</span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line">&#125;</span><br><span class="line">start_menu</span><br></pre></td></tr></table></figure><hr><h2 id="Clear"><a href="#Clear" class="headerlink" title="Clear"></a>Clear</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#! /bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">red</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;\033[31m\033[01m<span class="variable">$1</span>\033[0m&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">green</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;\033[32m\033[01m<span class="variable">$1</span>\033[0m&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">yellow</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;\033[33m\033[01m<span class="variable">$1</span>\033[0m&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除所有不使用的镜像</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">imageprune</span></span>()&#123;</span><br><span class="line">docker image prune --force --all</span><br><span class="line">yellow <span class="string">&quot;--------------------------------------------------&quot;</span></span><br><span class="line">green <span class="string">&quot; docker image prune --force --all&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">green <span class="string">&quot; 删除所有不使用的镜像 完毕!&quot;</span></span><br><span class="line">yellow <span class="string">&quot;--------------------------------------------------&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除所有停止的容器</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">containerprune</span></span>()&#123;</span><br><span class="line">docker container prune -f</span><br><span class="line">yellow <span class="string">&quot;--------------------------------------------------&quot;</span></span><br><span class="line">green <span class="string">&quot; docker container prune -f&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">green <span class="string">&quot; 删除所有停止的容器 完毕!&quot;</span></span><br><span class="line">yellow <span class="string">&quot;--------------------------------------------------&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># Tachidesk</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">tachidesk_clear</span></span>()&#123;</span><br><span class="line"><span class="built_in">cd</span> /root/docker/Tachidesk/data/thumbnails</span><br><span class="line"><span class="built_in">rm</span> -rf *</span><br><span class="line">yellow <span class="string">&quot;--------------------------------------------------&quot;</span></span><br><span class="line">green <span class="string">&quot; Tachidesk thumbnails 清空完毕!&quot;</span></span><br><span class="line">yellow <span class="string">&quot;--------------------------------------------------&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 磁盘</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">diskcondition</span></span>()&#123;</span><br><span class="line">yellow <span class="string">&quot;--------------------------------------------------&quot;</span></span><br><span class="line">green <span class="string">&quot;磁盘使用信息如下：&quot;</span></span><br><span class="line">yellow <span class="string">&quot;--------------------------------------------------&quot;</span></span><br><span class="line"><span class="built_in">df</span> -h /dev/vda1</span><br><span class="line">yellow <span class="string">&quot;--------------------------------------------------&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 内存</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">freememory</span></span>()&#123;</span><br><span class="line">yellow <span class="string">&quot;--------------------------------------------------&quot;</span></span><br><span class="line">green <span class="string">&quot;内存使用信息如下：&quot;</span></span><br><span class="line">yellow <span class="string">&quot;--------------------------------------------------&quot;</span></span><br><span class="line">free -m</span><br><span class="line">yellow <span class="string">&quot;--------------------------------------------------&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">start_menu</span></span>()&#123;</span><br><span class="line">clear</span><br><span class="line">yellow <span class="string">&quot;-----------------------------------------------&quot;</span></span><br><span class="line">red    <span class="string">&quot; SwapFile —— 交换空间&quot;</span></span><br><span class="line">yellow <span class="string">&quot;-----------------------------------------------&quot;</span></span><br><span class="line">green  <span class="string">&quot; 1. 查看磁盘信息&quot;</span></span><br><span class="line">green  <span class="string">&quot; 2. 查看内存信息&quot;</span></span><br><span class="line">green  <span class="string">&quot; 3. 删除所有停止的容器&quot;</span></span><br><span class="line">green  <span class="string">&quot; 4. 删除所有不使用的镜像&quot;</span></span><br><span class="line">green  <span class="string">&quot; 5. Tachidesk thumbnails 文件夹清空&quot;</span></span><br><span class="line">yellow <span class="string">&quot;-----------------------------------------------&quot;</span></span><br><span class="line">red    <span class="string">&quot; 0. 退出脚本&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line"><span class="built_in">read</span> -p <span class="string">&quot;请输入数字:&quot;</span> menuNumberInput</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$menuNumberInput</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">        1 )</span><br><span class="line">            diskcondition</span><br><span class="line">;;</span><br><span class="line">        2 )</span><br><span class="line">            freememory</span><br><span class="line">;;</span><br><span class="line">        3 )</span><br><span class="line">            containerprune</span><br><span class="line">;;</span><br><span class="line">        4 )</span><br><span class="line">            imageprune</span><br><span class="line">;;</span><br><span class="line">        5 )</span><br><span class="line">            tachidesk_clear</span><br><span class="line">;;</span><br><span class="line">        0 )</span><br><span class="line">            <span class="built_in">exit</span></span><br><span class="line">;;</span><br><span class="line">        * )</span><br><span class="line">            clear</span><br><span class="line">            red <span class="string">&quot;请输入正确数字!&quot;</span></span><br><span class="line">            start_menu</span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line">&#125;</span><br><span class="line">start_menu</span><br></pre></td></tr></table></figure><hr><h2 id="Coder"><a href="#Coder" class="headerlink" title="Coder"></a>Coder</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#! /bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">red</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;\033[31m\033[01m<span class="variable">$1</span>\033[0m&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">green</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;\033[32m\033[01m<span class="variable">$1</span>\033[0m&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">yellow</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;\033[33m\033[01m<span class="variable">$1</span>\033[0m&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Coder</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">coder_install</span></span>()&#123;</span><br><span class="line"><span class="keyword">if</span> nc -z localhost 10000; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot; 10000 端口已经被占用，请检查相关进程&quot;</span></span><br><span class="line"><span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> docker ps -a --format <span class="string">&quot;&#123;&#123;.Names&#125;&#125;&quot;</span> | grep -q <span class="string">&quot;coder&quot;</span>; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot; coder 容器名已经被占用&quot;</span></span><br><span class="line"><span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> [ ! -d /root/docker/Coder ]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">mkdir</span> -p /root/docker/Coder</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">cd</span> /root/docker/Coder</span><br><span class="line"><span class="keyword">if</span> [ -f <span class="string">&quot;docker-compose.yml&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">rm</span> docker-compose.yml</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">cat</span> &lt;&lt;<span class="string">EOF &gt; docker-compose.yml</span></span><br><span class="line"><span class="string">version: &#x27;3.3&#x27;</span></span><br><span class="line"><span class="string">services:</span></span><br><span class="line"><span class="string">    code-server:</span></span><br><span class="line"><span class="string">        user: root</span></span><br><span class="line"><span class="string">        ports:</span></span><br><span class="line"><span class="string">            - &#x27;10000:8080&#x27;</span></span><br><span class="line"><span class="string">        container_name: coder</span></span><br><span class="line"><span class="string">        volumes:</span></span><br><span class="line"><span class="string">            - &#x27;/root/docker:/home/code&#x27;</span></span><br><span class="line"><span class="string">            #- &#x27;./config.yaml:/root/.config/code-server/config.yaml&#x27;</span></span><br><span class="line"><span class="string">        image: rahn2029/vscode:1.0</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line">docker-compose up -d</span><br><span class="line">ufw allow 10000/tcp</span><br><span class="line">yellow <span class="string">&quot;-----------------------------------------------&quot;</span></span><br><span class="line">green <span class="string">&quot; Web 端口：10000&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">green <span class="string">&quot; Docker IP = <span class="subst">$(ip addr show docker0 | grep &#x27;inet\b&#x27; | awk &#x27;&#123;print $2&#125;&#x27; | cut -d &#x27;/&#x27; -f1)</span>:10000&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">green <span class="string">&quot; Web 网址  = http://<span class="subst">$(ifconfig $(ifconfig | grep -oP &#x27;enp\w+&#x27;)</span> | grep &#x27;inet &#x27; | awk &#x27;&#123;print <span class="variable">$2</span>&#125;&#x27;):10000&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">green <span class="string">&quot; 将 config.yaml 文件拷贝到当前文件夹下&quot;</span></span><br><span class="line">green <span class="string">&quot; docker cp code-server:/root/.config/code-server/config.yaml /root/docker/Coder/config.yaml&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">green <span class="string">&quot; 查看 Web 登陆密码&quot;</span></span><br><span class="line">green <span class="string">&quot; docker exec code-server cat /root/.config/code-server/config.yaml&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">green <span class="string">&quot; Coder 安装完毕！&quot;</span></span><br><span class="line">yellow <span class="string">&quot;-----------------------------------------------&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">coder_install</span><br></pre></td></tr></table></figure><hr>]]></content>
      
      
      <categories>
          
          <category> Docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 脚本 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Cloudflare —— 15 年证书</title>
      <link href="/2023/06/09/Cloudflare15%E5%B9%B4%E8%AF%81%E4%B9%A6/"/>
      <url>/2023/06/09/Cloudflare15%E5%B9%B4%E8%AF%81%E4%B9%A6/</url>
      
        <content type="html"><![CDATA[<h1 id="Cloudflare-15-年证书"><a href="#Cloudflare-15-年证书" class="headerlink" title="Cloudflare 15 年证书"></a>Cloudflare 15 年证书</h1><p><code>Certificate Key</code> —— 填写 私钥</p><p><code>Certificate</code> —— 填写 源证书</p><hr><p></p>]]></content>
      
      
      <categories>
          
          <category> VPS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Cloudflare </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HNet —— Web 代理</title>
      <link href="/2023/06/08/Hnet/"/>
      <url>/2023/06/08/Hnet/</url>
      
        <content type="html"><![CDATA[<h1 id="HNet"><a href="#HNet" class="headerlink" title="HNet"></a>HNet</h1><blockquote><p>HNet 帮助一些人突破防火墙的拦截，实现上网自由！</p><p>注意：务必检查官方的源代码，可以看 <code>关于 Hnet 的修改</code></p></blockquote><hr><h2 id="Docker-Run"><a href="#Docker-Run" class="headerlink" title="Docker Run"></a>Docker Run</h2><blockquote><p>创建容器</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -itd --name hnet -p 5120:56559 rahn2029/hnet-web:2.0</span><br></pre></td></tr></table></figure><blockquote><p>停止容器并删除</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker stop hnet &amp;&amp; docker <span class="built_in">rm</span> hnet</span><br></pre></td></tr></table></figure><hr><h2 id="Docker-Compose"><a href="#Docker-Compose" class="headerlink" title="Docker-Compose"></a>Docker-Compose</h2><blockquote><p>创建 <code>docker-compose.yml</code> 文件</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nano docker-compose.yml</span><br></pre></td></tr></table></figure><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&#x27;3.3&#x27;</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">    <span class="attr">hideipnetwork-web:</span></span><br><span class="line">        <span class="attr">container_name:</span> <span class="string">hnet</span></span><br><span class="line">        <span class="attr">ports:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="number">5120</span><span class="string">:56559</span></span><br><span class="line">        <span class="attr">volumes:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">./web:/web</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">rahn2029/hnet-web:2.0</span></span><br><span class="line">        <span class="attr">restart:</span> <span class="string">always</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose up -d</span><br></pre></td></tr></table></figure><blockquote><p>打开 <code>5120</code> 端口</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ufw allow 5120/tcp</span><br></pre></td></tr></table></figure><hr><h2 id="一键脚本"><a href="#一键脚本" class="headerlink" title="一键脚本"></a>一键脚本</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#! /bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">red</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;\033[31m\033[01m<span class="variable">$1</span>\033[0m&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">green</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;\033[32m\033[01m<span class="variable">$1</span>\033[0m&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">yellow</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;\033[33m\033[01m<span class="variable">$1</span>\033[0m&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Hnet</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">hnet_install</span></span>()&#123;</span><br><span class="line"><span class="keyword">if</span> nc -z localhost 5120; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot; 5120 端口已经被占用，请检查相关进程&quot;</span></span><br><span class="line"><span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> docker ps -a --format <span class="string">&quot;&#123;&#123;.Names&#125;&#125;&quot;</span> | grep -q <span class="string">&quot;hnet&quot;</span>; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot; hnet 容器名已经被占用&quot;</span></span><br><span class="line"><span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> [ ! -d /root/docker/HNet ]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">mkdir</span> -p /root/docker/HNet</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">cd</span> /root/docker/HNet</span><br><span class="line"><span class="keyword">if</span> [ -d <span class="string">&quot;web&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">green <span class="string">&quot; web 文件夹已经存在, 跳过执行 docker cp 命令&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">docker run -itd --name hnet -p 5120:56559 rahn2029/hnet-web:2.0</span><br><span class="line">docker <span class="built_in">cp</span> hnet:web $(<span class="built_in">pwd</span>)/</span><br><span class="line">docker stop hnet &amp;&amp; docker <span class="built_in">rm</span> hnet</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> [ -f <span class="string">&quot;docker-compose.yml&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">rm</span> docker-compose.yml</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">cat</span> &lt;&lt;<span class="string">EOF &gt; docker-compose.yml</span></span><br><span class="line"><span class="string">version: &#x27;3.3&#x27;</span></span><br><span class="line"><span class="string">services:</span></span><br><span class="line"><span class="string">    hideipnetwork-web:</span></span><br><span class="line"><span class="string">        container_name: hnet</span></span><br><span class="line"><span class="string">        ports:</span></span><br><span class="line"><span class="string">            - 5120:56559</span></span><br><span class="line"><span class="string">        volumes:</span></span><br><span class="line"><span class="string">            - ./web:/web</span></span><br><span class="line"><span class="string">        image: rahn2029/hnet-web:2.0</span></span><br><span class="line"><span class="string">        restart: always</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line">docker-compose up -d</span><br><span class="line">ufw allow 5120/tcp</span><br><span class="line">yellow <span class="string">&quot;-----------------------------------------------&quot;</span></span><br><span class="line">green <span class="string">&quot; Web 端口：5120&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">green <span class="string">&quot; Docker IP = <span class="subst">$(ip addr show docker0 | grep &#x27;inet\b&#x27; | awk &#x27;&#123;print $2&#125;&#x27; | cut -d &#x27;/&#x27; -f1)</span>:5120&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">green <span class="string">&quot; Web 网址 = http://<span class="subst">$(ifconfig $(ifconfig | grep -oP &#x27;enp\w+&#x27;)</span> | grep &#x27;inet &#x27; | awk &#x27;&#123;print <span class="variable">$2</span>&#125;&#x27;):5120&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">green <span class="string">&quot; HNet 安装完毕！&quot;</span></span><br><span class="line">yellow <span class="string">&quot;-----------------------------------------------&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">start_menu</span></span>()&#123;</span><br><span class="line">clear</span><br><span class="line">yellow <span class="string">&quot;-----------------------------------------------&quot;</span></span><br><span class="line">red    <span class="string">&quot; HNet —— Web 代理&quot;</span></span><br><span class="line">yellow <span class="string">&quot;-----------------------------------------------&quot;</span></span><br><span class="line">green  <span class="string">&quot; 1. Hnet 安装&quot;</span></span><br><span class="line">yellow <span class="string">&quot;-----------------------------------------------&quot;</span></span><br><span class="line">red    <span class="string">&quot; 0. 退出脚本&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line"><span class="built_in">read</span> -p <span class="string">&quot;请输入数字:&quot;</span> menuNumberInput</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$menuNumberInput</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">        1 )</span><br><span class="line">            hnet_install</span><br><span class="line">;;</span><br><span class="line">        0 )</span><br><span class="line">            <span class="built_in">exit</span></span><br><span class="line">;;</span><br><span class="line">        * )</span><br><span class="line">            clear</span><br><span class="line">            red <span class="string">&quot;请输入正确数字!&quot;</span></span><br><span class="line">            start_menu</span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line">&#125;</span><br><span class="line">start_menu</span><br></pre></td></tr></table></figure><hr><p>Github 官方地址：<a href="https://github.com/Hideipnetwork/hideipnetwork-web/tree/v2">https://github.com/Hideipnetwork/hideipnetwork-web/tree/v2</a></p><hr><p></p>]]></content>
      
      
      <categories>
          
          <category> Docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hnet </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux Command —— Liunx 命令大全</title>
      <link href="/2023/06/08/linux-command/"/>
      <url>/2023/06/08/linux-command/</url>
      
        <content type="html"><![CDATA[<h1 id="Linux-Command"><a href="#Linux-Command" class="headerlink" title="Linux Command"></a>Linux Command</h1><blockquote><p>Linux 命令大全搜索工具，内容包含 Linux 命令手册、详解、学习、搜集。</p></blockquote><hr><h2 id="Docker-Run"><a href="#Docker-Run" class="headerlink" title="Docker Run"></a>Docker Run</h2><blockquote><p>创建容器</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -itd --name linux-command -p 9665:3000 wcjiang/linux-command:latest</span><br></pre></td></tr></table></figure><blockquote><p>停止容器并删除</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker stop linux-command &amp;&amp; docker <span class="built_in">rm</span> linux-command</span><br></pre></td></tr></table></figure><hr><h2 id="Docker-Compose"><a href="#Docker-Compose" class="headerlink" title="Docker-Compose"></a>Docker-Compose</h2><blockquote><p>创建 <code>docker-compose.yml</code> 文件</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nano docker-compose.yml</span><br></pre></td></tr></table></figure><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&#x27;3.3&#x27;</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">    <span class="attr">linux-command:</span></span><br><span class="line">        <span class="attr">container_name:</span> <span class="string">linux-command</span></span><br><span class="line">        <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">        <span class="attr">ports:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">&#x27;9665:3000&#x27;</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">&#x27;wcjiang/linux-command:latest&#x27;</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose up -d</span><br></pre></td></tr></table></figure><blockquote><p>打开 <code>9665</code> 端口</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ufw allow 9665/tcp</span><br></pre></td></tr></table></figure><hr><hr><p>Github 官方网站：<a href="https://github.com/jaywcjlove/linux-command">https://github.com/jaywcjlove/linux-command</a></p><hr><p></p>]]></content>
      
      
      <categories>
          
          <category> Docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Twikoo —— 静态网站评论系统</title>
      <link href="/2023/06/08/Twikoo/"/>
      <url>/2023/06/08/Twikoo/</url>
      
        <content type="html"><![CDATA[<h1 id="Twikoo"><a href="#Twikoo" class="headerlink" title="Twikoo"></a>Twikoo</h1><blockquote><p>一个简洁、安全、免费的静态网站评论系统</p></blockquote><hr><h2 id="Docker-Run"><a href="#Docker-Run" class="headerlink" title="Docker Run"></a>Docker Run</h2><blockquote><p>创建容器</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run --name twikoo -e TWIKOO_THROTTLE=1000 -p 4001:8080 -v <span class="variable">$&#123;PWD&#125;</span>/data:/app/data -d imaegoo/twikoo</span><br></pre></td></tr></table></figure><blockquote><p>停止容器并删除</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker stop twikoo &amp;&amp; docker <span class="built_in">rm</span> twikoo</span><br></pre></td></tr></table></figure><hr><h2 id="Docker-Compose"><a href="#Docker-Compose" class="headerlink" title="Docker-Compose"></a>Docker-Compose</h2><blockquote><p>创建 <code>docker-compose.yml</code> 文件</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nano docker-compose.yml</span><br></pre></td></tr></table></figure><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&quot;3.5&quot;</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">twikoo:</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">twikoo</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">imaegoo/twikoo</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">TWIKOO_THROTTLE=1000</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">4001</span><span class="string">:8080</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./data:/app/data</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">unless-stopped</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose up -d</span><br></pre></td></tr></table></figure><blockquote><p>打开 <code>4001</code> 端口</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ufw allow 4001/tcp</span><br></pre></td></tr></table></figure><hr><p>官方文档：<a href="https://twikoo.js.org/">https://twikoo.js.org/</a></p><hr><p></p>]]></content>
      
      
      <categories>
          
          <category> Docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> twikoo </tag>
            
            <tag> 评论系统 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Codex Docs —— 多功能文档应用程序</title>
      <link href="/2023/06/08/Codex-Docs/"/>
      <url>/2023/06/08/Codex-Docs/</url>
      
        <content type="html"><![CDATA[<h1 id="Codex-Docs"><a href="#Codex-Docs" class="headerlink" title="Codex Docs"></a>Codex Docs</h1><blockquote><p>CodeX Docs 是一个简单的免费应用程序，适用于您的内部、公共或个人文档。它基于 Editor.js，允许使用漂亮干净的 UI 处理内容。</p></blockquote><hr><h2 id="Docker-Compose"><a href="#Docker-Compose" class="headerlink" title="Docker-Compose"></a>Docker-Compose</h2><blockquote><p>创建 <code>docker-compose.yml</code> 文件</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nano docker-compose.yml</span><br></pre></td></tr></table></figure><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&quot;3.2&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">docs:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">ghcr.io/codex-team/codex.docs:v2.1</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">codex-docs</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;3313:3000&quot;</span></span><br><span class="line">    <span class="attr">command:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">node</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">dist/backend/app.js</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">-c</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">docs-config.yaml</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./uploads:/usr/src/app/uploads</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./db:/usr/src/app/db</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./docs-config.yaml:/usr/src/app/docs-config.yaml</span></span><br></pre></td></tr></table></figure><blockquote><p>在启动之前需要配置一个 <code>docs-config.yaml</code> 文件</p><p>配置文件密码：<code>secretpassword</code></p></blockquote><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">port:</span> <span class="number">3000</span></span><br><span class="line"><span class="attr">host:</span> <span class="string">&quot;localhost&quot;</span></span><br><span class="line"><span class="attr">uploads:</span></span><br><span class="line">  <span class="attr">driver:</span> <span class="string">&quot;local&quot;</span></span><br><span class="line">  <span class="attr">local:</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">&quot;./uploads&quot;</span></span><br><span class="line">  <span class="attr">s3:</span></span><br><span class="line">    <span class="attr">bucket:</span> <span class="string">&quot;my-bucket&quot;</span></span><br><span class="line">    <span class="attr">region:</span> <span class="string">&quot;eu-central-1&quot;</span></span><br><span class="line">    <span class="attr">baseUrl:</span> <span class="string">&quot;http://docs-static.codex.so.s3-website.eu-central-1.amazonaws.com&quot;</span></span><br><span class="line">    <span class="attr">keyPrefix:</span> <span class="string">&quot;/&quot;</span></span><br><span class="line">    <span class="attr">accessKeyId:</span> <span class="string">&quot;my-access-key&quot;</span></span><br><span class="line">    <span class="attr">secretAccessKey:</span> <span class="string">&quot;my-secret-key&quot;</span></span><br><span class="line"><span class="attr">frontend:</span></span><br><span class="line">  <span class="attr">title:</span> <span class="string">&quot;CodeX Docs&quot;</span></span><br><span class="line">  <span class="attr">description:</span> <span class="string">&quot;Free Docs app powered by Editor.js ecosystemt&quot;</span></span><br><span class="line">  <span class="attr">startPage:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">  <span class="attr">misprintsChatId:</span> <span class="string">&quot;12344564&quot;</span></span><br><span class="line">  <span class="attr">yandexMetrikaId:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">  <span class="attr">carbon:</span></span><br><span class="line">    <span class="attr">serve:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="attr">placement:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">  <span class="attr">menu:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&quot;Guides&quot;</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">title:</span> <span class="string">&quot;CodeX&quot;</span></span><br><span class="line">      <span class="attr">uri:</span> <span class="string">&quot;https://codex.so&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">auth:</span></span><br><span class="line">  <span class="attr">password:</span> <span class="string">secretpassword</span></span><br><span class="line">  <span class="attr">secret:</span> <span class="string">supersecret</span></span><br><span class="line"></span><br><span class="line"><span class="attr">hawk:</span></span><br><span class="line"><span class="comment">#  frontendToken: &quot;123&quot;</span></span><br><span class="line"><span class="comment">#  backendToken: &quot;123&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">database:</span></span><br><span class="line">  <span class="attr">driver:</span> <span class="string">local</span> <span class="comment"># you can change database driver here. &#x27;mongodb&#x27; or &#x27;local&#x27;</span></span><br><span class="line">  <span class="attr">local:</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">./db</span></span><br><span class="line"><span class="comment">#  mongodb:</span></span><br><span class="line"><span class="comment">#    uri: mongodb://localhost:27017/docs</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose up -d</span><br></pre></td></tr></table></figure><blockquote><p>打开 <code>3313</code> 端口</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ufw allow 3313/tcp</span><br></pre></td></tr></table></figure><hr><p>官方网站：<a href="https://codex.so/">https://codex.so/</a></p><p>官方文档：<a href="https://docs.codex.so/codex-docs">https://docs.codex.so/codex-docs</a></p><hr><p></p>]]></content>
      
      
      <categories>
          
          <category> Docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> codex docs </tag>
            
            <tag> docs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>RSSHub —— 万物皆可 RSS</title>
      <link href="/2023/06/08/rsshub/"/>
      <url>/2023/06/08/rsshub/</url>
      
        <content type="html"><![CDATA[<h1 id="RSSHub"><a href="#RSSHub" class="headerlink" title="RSSHub"></a>RSSHub</h1><blockquote><p>RSSHub 是一个开源、简单易用、易于扩展的 RSS 生成器，可以给任何奇奇怪怪的内容生成 RSS 订阅源。</p></blockquote><hr><h2 id="Docker-Compose"><a href="#Docker-Compose" class="headerlink" title="Docker-Compose"></a>Docker-Compose</h2><blockquote><p>创建 <code>docker-compose.yml</code> 文件</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nano docker-compose.yml</span><br></pre></td></tr></table></figure><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&#x27;3&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">rsshub:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">diygod/rsshub:chromium-bundled</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">rsshub</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">unless-stopped</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">1200</span><span class="string">:1200</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">CACHE_EXPIRE=3600</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose up -d</span><br></pre></td></tr></table></figure><blockquote><p>打开 <code>1200</code> 端口</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ufw allow 1200/tcp</span><br></pre></td></tr></table></figure><hr><p>官方网站：<a href="https://docs.rsshub.app/">https://docs.rsshub.app/</a></p><hr><p></p>]]></content>
      
      
      <categories>
          
          <category> Docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> rss </tag>
            
            <tag> rsshub </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Jackett —— Torrent 追踪器</title>
      <link href="/2023/06/08/jackett/"/>
      <url>/2023/06/08/jackett/</url>
      
        <content type="html"><![CDATA[<h1 id="Jackett"><a href="#Jackett" class="headerlink" title="Jackett"></a>Jackett</h1><blockquote><p>Jackett 是跨平台的开源应用，支持 OSX ，Windows 和 Linux 平台，集成了众多种子站，可作为代理服务器通过 API 来响应来自应用程序（ Sonarr ， Radarr ，SickRage ，CouchPotato ，Mylar ，Lidarr ，DuckieTV ，qBittorrent ，Nefarious 等）的查询，然后将结果发送回请求软件。</p></blockquote><hr><h2 id="Docker-Compose"><a href="#Docker-Compose" class="headerlink" title="Docker-Compose"></a>Docker-Compose</h2><blockquote><p>创建 <code>docker-compose.yml</code> 文件</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nano docker-compose.yml</span><br></pre></td></tr></table></figure><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&quot;2.1&quot;</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">jackett:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">lscr.io/linuxserver/jackett:latest</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">jackett</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">PUID=1000</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">PGID=1000</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">TZ=Asia/shanghai</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">AUTO_UPDATE=true</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./config:/config</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./downloads:/downloads</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">9117</span><span class="string">:9117</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">unless-stopped</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose up -d</span><br></pre></td></tr></table></figure><blockquote><p>打开 <code>9117 </code> 端口</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ufw allow 9117/tcp</span><br></pre></td></tr></table></figure><hr><p>Github 官方：<a href="https://github.com/Jackett/Jackett">https://github.com/Jackett/Jackett</a></p><hr><p></p>]]></content>
      
      
      <categories>
          
          <category> Docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> jackett </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Bookstack —— 开源的 Wiki 系统</title>
      <link href="/2023/06/08/bookstack/"/>
      <url>/2023/06/08/bookstack/</url>
      
        <content type="html"><![CDATA[<h1 id="BookStack"><a href="#BookStack" class="headerlink" title="BookStack"></a>BookStack</h1><blockquote><p>Bookstack 是一个可以创建漂亮文档的免费开源的Wiki系统。它能让团队通过一个简单的所见即所得的编辑器创建适用的文档。</p></blockquote><hr><h2 id="Docker-Compose"><a href="#Docker-Compose" class="headerlink" title="Docker-Compose"></a>Docker-Compose</h2><blockquote><p>创建 <code>docker-compose.yaml</code> 文件</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nano docker-compose.yaml</span><br></pre></td></tr></table></figure><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&quot;2.1&quot;</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">bookstack:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">linuxserver/bookstack</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">bookstack</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">PUID=0</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">PGID=0</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">APP_URL=https://bookstack.rahn.top</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">DB_HOST=bookstack_db</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">DB_USER=bookstack</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">DB_PASS=&lt;yourdbpass&gt;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">DB_DATABASE=bookstackapp</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./books:/config</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">6875</span><span class="string">:80</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">unless-stopped</span></span><br><span class="line">    <span class="attr">depends_on:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">bookstack_db</span></span><br><span class="line">  <span class="attr">bookstack_db:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">linuxserver/mariadb</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">bookstack_db</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">PUID=0</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">PGID=0</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">MYSQL_ROOT_PASSWORD=&lt;yourdbpass&gt;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">TZ=Asia/Shanghai</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">MYSQL_DATABASE=bookstackapp</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">MYSQL_USER=bookstack</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">MYSQL_PASSWORD=&lt;yourdbpass&gt;</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./data:/config</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">unless-stopped</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose up -d</span><br></pre></td></tr></table></figure><blockquote><p>打开 <code>6875</code> 端口</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ufw allow 6875/tcp</span><br></pre></td></tr></table></figure><hr><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p><code>- APP_URL=</code> 如果不写，直接反向代理会出现直接跳转到 IP 端口的形式。 </p><p>默认的用户名是 <code>admin@admin.com</code> 对应的密码是 <code>password</code> </p><hr><p>官方网站：<a href="https://www.bookstackapp.com/">https://www.bookstackapp.com/</a></p><hr><p></p>]]></content>
      
      
      <categories>
          
          <category> Docekr </category>
          
      </categories>
      
      
        <tags>
            
            <tag> bookstack </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Calibre Web —— 在线电子书库</title>
      <link href="/2023/06/08/Calibre-Web/"/>
      <url>/2023/06/08/Calibre-Web/</url>
      
        <content type="html"><![CDATA[<h1 id="Calibre-Web"><a href="#Calibre-Web" class="headerlink" title="Calibre Web"></a>Calibre Web</h1><blockquote><p>用于浏览、阅读和下载存储在 Calibre 数据库中的电子书的 Web 应用程序。</p></blockquote><hr><h2 id="Docker-Run"><a href="#Docker-Run" class="headerlink" title="Docker Run"></a>Docker Run</h2><blockquote><p>创建容器并运行</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">docker run -d \</span><br><span class="line">  --name=calibre-web \</span><br><span class="line">  -e PUID=0 \</span><br><span class="line">  -e PGID=0 \</span><br><span class="line">  -e TZ=Asia/Shanghai \</span><br><span class="line">  -e DOCKER_MODS=linuxserver/mods:universal-calibre `<span class="comment">#optional` \</span></span><br><span class="line">  -e OAUTHLIB_RELAX_TOKEN_SCOPE=1 `<span class="comment">#optional` \</span></span><br><span class="line">  -p 8083:8083 \</span><br><span class="line">  -v /root/docker/Calibre-Web/config:/config \</span><br><span class="line">  -v /root/docker/Calibre-Web/books:/books \</span><br><span class="line">  --restart unless-stopped \</span><br><span class="line">  lscr.io/linuxserver/calibre-web:latest</span><br></pre></td></tr></table></figure><blockquote><p>停止容器并删除</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker stop calibre-web &amp;&amp; docker <span class="built_in">rm</span> calibre-web</span><br></pre></td></tr></table></figure><blockquote><p>容器运行时的 shell 访问</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="built_in">exec</span> -it calibre-web /bin/bash</span><br></pre></td></tr></table></figure><blockquote><p>实时监控容器的日志</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker logs -f calibre-web</span><br></pre></td></tr></table></figure><blockquote><p>容器版本号</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker inspect -f <span class="string">&#x27;&#123;&#123; index .Config.Labels &quot;build_version&quot; &#125;&#125;&#x27;</span> calibre-web</span><br></pre></td></tr></table></figure><blockquote><p>镜像版本号</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker inspect -f <span class="string">&#x27;&#123;&#123; index .Config.Labels &quot;build_version&quot; &#125;&#125;&#x27;</span> lscr.io/linuxserver/calibre-web:latest</span><br></pre></td></tr></table></figure><hr><h2 id="Docker-Compose"><a href="#Docker-Compose" class="headerlink" title="Docker Compose"></a>Docker Compose</h2><blockquote><p>创建 <code>docker-compose.yaml</code> 文件</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nano docker-compose.yaml</span><br></pre></td></tr></table></figure><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">version:</span> <span class="string">&quot;2.1&quot;</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">calibre-web:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">linuxserver/calibre-web:latest</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">calibre-web</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">PUID=0</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">PGID=0</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">TZ=Asia/Shanghai</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">DOCKER_MODS=linuxserver/mods:universal-calibre</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">OAUTHLIB_RELAX_TOKEN_SCOPE=1</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./config:/config</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./books:/books</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">8083</span><span class="string">:8083</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">unless-stopped</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose up -d</span><br></pre></td></tr></table></figure><blockquote><p>打开 <code>8083</code> 端口</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ufw allow 8083/tcp</span><br></pre></td></tr></table></figure><hr><h2 id="配置过程"><a href="#配置过程" class="headerlink" title="配置过程"></a>配置过程</h2><blockquote><p>出现权限错误是 <code>PUID</code> <code>PGID</code> 填写错误导致</p><p>数据库错误：attempt to write a readonly database</p><p>本地的 <code>books</code> 文件夹需要给予 <code>777</code> 权限</p></blockquote><ol><li><p>配置数据库（可以上传 <code>metadata.db</code> 文件，到 <code>books</code> 文件夹内， <code>PUID</code> <code>PGID</code> 填写错误将需要额外赋予读写权限 755 给 <code>metadata.db</code> 文件）</p></li><li><p>使用 <code>docker logs -f calibre-web </code> 查看日志</p></li><li><p>进入网站</p></li><li><p>默认账号 <code>admin</code> 密码 <code>admin123</code></p></li><li><p>填写数据库位置 <code>/books</code></p></li><li><p>更改语言</p></li><li><p>扩展程序配置（转换格式）</p><ol><li><kbd>管理权限</kbd> - <kbd>编辑基本配置</kbd> - <kbd>扩展程序配置</kbd> </li><li>Calibre 电子书转换器路径: <code>/usr/bin/ebook-convert</code></li><li>KEpubify 电子书转换器路径: <code>/usr/bin/kepubify</code></li></ol></li><li><p>后台启用上传</p><ol><li><kbd>管理权限</kbd> - <kbd>编辑基本配置</kbd> - <kbd>功能配置</kbd> </li><li>启用上传</li><li>允许匿名浏览</li></ol></li><li><p>启用用户阅读权限</p></li><li><p><kbd>管理权限</kbd> -  <kbd>管理用户</kbd></p></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="built_in">exec</span> -it calibre-web sh <span class="comment">#进入容器内部</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> app/calibre/bin <span class="comment">#进入bin文件夹，如果没有bin文件夹需要等待初始化完毕</span></span><br><span class="line"></span><br><span class="line">calibredb restore_database --really-do-it --with-library /books <span class="comment">#创建一个数据库</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">exit</span>  <span class="comment"># 退出容器</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 权限错误，需要添加额外权限，权限正确跳过这个步骤</span></span><br><span class="line"><span class="built_in">chmod</span> a+w /books/metadata.db</span><br></pre></td></tr></table></figure><hr><h2 id="一键脚本"><a href="#一键脚本" class="headerlink" title="一键脚本"></a>一键脚本</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://raw.githubusercontent.com/18nome/docker/main/Calibre-Web/Calibre-Web.sh &amp;&amp; <span class="built_in">chmod</span> +x Calibre-Web.sh &amp;&amp; bash Calibre-Web.sh</span><br></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#! /bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">red</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;\033[31m\033[01m<span class="variable">$1</span>\033[0m&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">green</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;\033[32m\033[01m<span class="variable">$1</span>\033[0m&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">yellow</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;\033[33m\033[01m<span class="variable">$1</span>\033[0m&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Calibre Web</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> calibre-<span class="function"><span class="title">web_install</span></span>()&#123;</span><br><span class="line"><span class="keyword">if</span> nc -z localhost 8083; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot; 8083 端口已经被占用，请检查相关进程&quot;</span></span><br><span class="line"><span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> docker ps -a --format <span class="string">&quot;&#123;&#123;.Names&#125;&#125;&quot;</span> | grep -q <span class="string">&quot;calibre-web&quot;</span>; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot; calibre-web 容器名已经被占用&quot;</span></span><br><span class="line"><span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> [ ! -d /root/docker/Calibre-Web ]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">mkdir</span> -p /root/docker/Calibre-Web</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">cd</span> /root/docker/Calibre-Web</span><br><span class="line"><span class="keyword">if</span> [ -f <span class="string">&quot;docker-compose.yaml&quot;</span> ] || [ -f <span class="string">&quot;docker-compose.yml&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">green <span class="string">&quot; docker-compose 文件已经存在, 跳过创建 docker-compose.yaml 步骤&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">cat</span> &lt;&lt;<span class="string">EOF &gt; docker-compose.yaml</span></span><br><span class="line"><span class="string">---</span></span><br><span class="line"><span class="string">version: &quot;2.1&quot;</span></span><br><span class="line"><span class="string">services:</span></span><br><span class="line"><span class="string">  calibre-web:</span></span><br><span class="line"><span class="string">    image: linuxserver/calibre-web:latest</span></span><br><span class="line"><span class="string">    container_name: calibre-web</span></span><br><span class="line"><span class="string">    environment:</span></span><br><span class="line"><span class="string">      - PUID=</span></span><br><span class="line"><span class="string">      - PGID=</span></span><br><span class="line"><span class="string">      - TZ=Asia/Shanghai</span></span><br><span class="line"><span class="string">      - DOCKER_MODS=linuxserver/mods:universal-calibre</span></span><br><span class="line"><span class="string">      - OAUTHLIB_RELAX_TOKEN_SCOPE=1</span></span><br><span class="line"><span class="string">    volumes:</span></span><br><span class="line"><span class="string">      - ./config:/config</span></span><br><span class="line"><span class="string">      - ./books:/books</span></span><br><span class="line"><span class="string">    ports:</span></span><br><span class="line"><span class="string">      - 8083:8083</span></span><br><span class="line"><span class="string">    restart: unless-stopped</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line">sed -i <span class="string">&quot;s/- PUID=/- PUID=<span class="subst">$(id -u)</span>/&quot;</span> docker-compose.yaml</span><br><span class="line">sed -i <span class="string">&quot;s/- PGID=/- PGID=<span class="subst">$(id -g)</span>/&quot;</span> docker-compose.yaml</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">docker-compose up -d</span><br><span class="line">ufw allow 8083/tcp</span><br><span class="line">yellow <span class="string">&quot;-----------------------------------------------&quot;</span></span><br><span class="line">green <span class="string">&quot; Web 端口：8083&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">green <span class="string">&quot; Docker IP = <span class="subst">$(ip addr show docker0 | grep &#x27;inet\b&#x27; | awk &#x27;&#123;print $2&#125;&#x27; | cut -d &#x27;/&#x27; -f1)</span>:8083&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">green <span class="string">&quot; Web 网址  = http://<span class="subst">$(ifconfig $(ifconfig | grep -oP &#x27;enp\w+&#x27;)</span> | grep &#x27;inet &#x27; | awk &#x27;&#123;print <span class="variable">$2</span>&#125;&#x27;):8083&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">green <span class="string">&quot; 第一次安装需要进入容器内部生成 metadata.db 数据库，步骤如下：&quot;</span></span><br><span class="line">green <span class="string">&quot; cd: can&#x27;t cd to app/calibre/bin 报错，需要等待容器初始化完毕！&quot;</span></span><br><span class="line">green <span class="string">&quot; 大概等待 3 分钟左右！&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">green <span class="string">&quot; 实时监控容器的日志&quot;</span></span><br><span class="line">yellow <span class="string">&quot;-----------------------------------------------&quot;</span></span><br><span class="line">green <span class="string">&quot; docker logs -f calibre-web&quot;</span></span><br><span class="line">yellow <span class="string">&quot;-----------------------------------------------&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">green <span class="string">&quot; 初始化数据库&quot;</span></span><br><span class="line">yellow <span class="string">&quot;-----------------------------------------------&quot;</span></span><br><span class="line">green <span class="string">&quot; docker exec -it calibre-web sh&quot;</span></span><br><span class="line">green <span class="string">&quot; cd app/calibre/bin&quot;</span></span><br><span class="line">green <span class="string">&quot; calibredb restore_database --really-do-it --with-library /books&quot;</span></span><br><span class="line">green <span class="string">&quot; exit&quot;</span></span><br><span class="line">yellow <span class="string">&quot;-----------------------------------------------&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">green <span class="string">&quot; 数据库填写 /books&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">green <span class="string">&quot; 也可以直接 wget 下载 metadata.db 数据库&quot;</span></span><br><span class="line">green <span class="string">&quot; wget -O /root/docker/Calibre-Web/books/metadata.db https://github.com/18nome/docker/raw/main/Calibre-Web/metadata.db&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">green <span class="string">&quot; 登陆账号：admin &quot;</span></span><br><span class="line">green <span class="string">&quot; 登陆密码：admin123&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">green <span class="string">&quot; Calibre Web 安装完毕！&quot;</span></span><br><span class="line">yellow <span class="string">&quot;-----------------------------------------------&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">calibre-web_install</span><br></pre></td></tr></table></figure><hr><h2 id="数据备份"><a href="#数据备份" class="headerlink" title="数据备份"></a>数据备份</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 备份</span></span><br><span class="line"><span class="built_in">cd</span> /root/docker</span><br><span class="line">tar czvf Calibre-Web.tar Calibre-Web</span><br><span class="line">zip -r Calibre-Web.zip Calibre-Web</span><br><span class="line"></span><br><span class="line"><span class="comment"># 解压</span></span><br><span class="line">tar xzvf Calibre-Web.tar</span><br><span class="line">unzip Calibre-Web.zip</span><br></pre></td></tr></table></figure><hr><h2 id="内网穿透"><a href="#内网穿透" class="headerlink" title="内网穿透"></a>内网穿透</h2><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[calibre-web]</span></span><br><span class="line"><span class="attr">type</span> = tcp</span><br><span class="line"><span class="attr">local_ip</span> = <span class="number">127.0</span>.<span class="number">0.1</span></span><br><span class="line"><span class="attr">local_port</span> = <span class="number">8083</span></span><br><span class="line"><span class="attr">remote_port</span> = <span class="number">17011</span></span><br><span class="line"><span class="attr">custom_domains</span> = nascalibreweb.rahn.top</span><br></pre></td></tr></table></figure><hr><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>在本地部署过程中，日志有时候会卡在 <code>[mod-init] Attempting to run Docker Modification Logic</code>  这一步，跟网络环境有关。</p><p>一个网络环境问题，将出现一大堆谜一样的问题！！！</p><p>VPS 中没有问题！</p><hr><p>官方网站：<a href="https://github.com/janeczku/calibre-web">https://github.com/janeczku/calibre-web</a></p><p>项目地址：<a href="https://docs.linuxserver.io/images/docker-calibre-web">https://docs.linuxserver.io/images/docker-calibre-web</a></p><hr><p></p>]]></content>
      
      
      <categories>
          
          <category> Docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> calibre web </tag>
            
            <tag> linuxserver </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Memos —— 自托管备忘录</title>
      <link href="/2023/06/08/Memos/"/>
      <url>/2023/06/08/Memos/</url>
      
        <content type="html"><![CDATA[<h1 id="Memos"><a href="#Memos" class="headerlink" title="Memos"></a>Memos</h1><blockquote><p>一个轻量级的自托管备忘录中心。开源且永远免费。</p></blockquote><hr><h2 id="Docker-Compose"><a href="#Docker-Compose" class="headerlink" title="Docker-Compose"></a>Docker-Compose</h2><blockquote><p>创建 <code> docker-compose.yml</code> 文件</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nano docker-compose.yml</span><br></pre></td></tr></table></figure><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&#x27;3.3&#x27;</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">    <span class="attr">usememos:</span></span><br><span class="line">        <span class="attr">container_name:</span> <span class="string">memos</span></span><br><span class="line">        <span class="attr">ports:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">&#x27;5230:5230&#x27;</span></span><br><span class="line">        <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">        <span class="attr">volumes:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">&#x27;./memos/:/var/opt/memos&#x27;</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">&#x27;ghcr.io/usememos/memos:latest&#x27;</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose up -d</span><br></pre></td></tr></table></figure><blockquote><p>打开 <code>5230</code> 端口</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ufw allow 5230/tcp</span><br></pre></td></tr></table></figure><hr><p>官方网站：<a href="https://usememos.com/">https://usememos.com/</a></p><p>Github 官方网站：<a href="https://github.com/usememos/memos">https://github.com/usememos/memos</a></p><hr><p></p>]]></content>
      
      
      <categories>
          
          <category> Docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> memos </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MoRSS —— 获取全文 RSS 摘要</title>
      <link href="/2023/06/08/morss/"/>
      <url>/2023/06/08/morss/</url>
      
        <content type="html"><![CDATA[<h1 id="MoRSS"><a href="#MoRSS" class="headerlink" title="MoRSS"></a>MoRSS</h1><blockquote><p>Morss 工具的目标是从互联网上常见的 RSS 摘要中获取全文 RSS 摘要。Morss 能打开来自 RSS 的链接，然后从网站下载整篇文章并将其放回 RSS 摘要中，还可以将摘要导出 RSS&#x2F;JSON&#x2F;CSV&#x2F;HTML。</p></blockquote><hr><h2 id="Docker-Compose"><a href="#Docker-Compose" class="headerlink" title="Docker-Compose"></a>Docker-Compose</h2><blockquote><p>创建 <code>docker-compose.yml</code> 文件</p></blockquote><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&#x27;3&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">morss:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">pictuga/morss</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">morss</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">unless-stopped</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">8887</span><span class="string">:8000</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose up -d</span><br></pre></td></tr></table></figure><blockquote><p>打开 <code>8887</code> 端口</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ufw allow 8887/tcp</span><br></pre></td></tr></table></figure><hr><p>官方网站：<a href="https://morss.it/">https://morss.it/</a></p><hr><p></p>]]></content>
      
      
      <categories>
          
          <category> Docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> rss </tag>
            
            <tag> morss </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Reader —— 阅读 3 服务器版</title>
      <link href="/2023/06/08/reader/"/>
      <url>/2023/06/08/reader/</url>
      
        <content type="html"><![CDATA[<h1 id="Reader"><a href="#Reader" class="headerlink" title="Reader"></a>Reader</h1><blockquote><p>阅读3服务器版，桌面端，iOS可用。后端 Kotlin + Spring Boot + Vert.x + Coroutine ；前端 Vue.js + Element。</p></blockquote><hr><h2 id="Docker-Compose"><a href="#Docker-Compose" class="headerlink" title="Docker-Compose"></a>Docker-Compose</h2><blockquote><p>创建 <code>docker-compose.yml</code> 文件</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nano docker-compose.yml</span><br></pre></td></tr></table></figure><blockquote><p>官方 <code>docker-compose.yml</code> 文件</p></blockquote><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&#x27;3.1&#x27;</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line"><span class="comment"># reader 在线阅读</span></span><br><span class="line"><span class="comment"># 公开服务器(服务器位于日本)：[https://reader.nxnow.top](https://reader.nxnow.top) 测试账号/密码分别为guest/guest123，也可自行创建账号添加书源，不定期删除长期未登录账号(2周)</span></span><br><span class="line"><span class="comment"># 阅读官方书源 : [https://legado.pages.dev](https://legado.pages.dev) 或者 [http://legado.git.llc](https://legado.pages.dev) 点击打开连接，添加远程书源即可</span></span><br><span class="line"><span class="comment"># 公众号汇总 : [https://mp.weixin.qq.com/s/5t8nfSnRfHjJNAvT76fA_A](https://mp.weixin.qq.com/s/5t8nfSnRfHjJNAvT76fA_A)</span></span><br><span class="line"><span class="comment"># 手动更新方式 : docker-compose pull &amp;&amp; docker-compose up -d</span></span><br><span class="line">  <span class="attr">reader:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">hectorqin/reader</span></span><br><span class="line">    <span class="comment">#image: hectorqin/reader:openj9-latest #docker镜像，arm64架构或小内存机器优先使用此镜像.启用需删除上一行</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">reader</span> <span class="comment">#容器名 可自行修改</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">4396</span><span class="string">:8080</span> <span class="comment">#4396端口映射可自行修改</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">share_net</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./logs:/logs</span> <span class="comment">#log映射目录 /home/reader/logs 映射目录可自行修改</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./storage:/storage</span> <span class="comment">#数据映射目录 /home/reader/storage 映射目录可自行修改</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">SPRING_PROFILES_ACTIVE=prod</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">READER_APP_USERLIMIT=50</span> <span class="comment">#用户上限,默认50</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">READER_APP_USERBOOKLIMIT=200</span> <span class="comment">#用户书籍上限,默认200</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">READER_APP_CACHECHAPTERCONTENT=true</span> <span class="comment">#开启缓存章节内容 V2.0</span></span><br><span class="line">      <span class="comment"># 如果启用远程webview，需要取消注释下面的 remote-webview 服务</span></span><br><span class="line">      <span class="comment"># - READER_APP_REMOTEWEBVIEWAPI=http://remote-webview:8050 #开启远程webview</span></span><br><span class="line">      <span class="comment"># 下面都是多用户模式配置</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">READER_APP_SECURE=true</span> <span class="comment">#开启登录鉴权，开启后将支持多用户模式</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">READER_APP_SECUREKEY=adminpwd</span>  <span class="comment">#管理员密码  建议修改</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">READER_APP_INVITECODE=code</span> <span class="comment">#注册邀请码 建议修改,如不需要可注释或删除</span></span><br><span class="line">  <span class="comment"># remote-webview:</span></span><br><span class="line">  <span class="comment">#   image: hectorqin/remote-webview</span></span><br><span class="line">  <span class="comment">#   container_name: remote-webview #容器名 可自行修改</span></span><br><span class="line">  <span class="comment">#   restart: always</span></span><br><span class="line">  <span class="comment">#   ports:</span></span><br><span class="line">  <span class="comment">#     - 8050:8050</span></span><br><span class="line">  <span class="comment">#   networks:</span></span><br><span class="line">  <span class="comment">#     - share_net</span></span><br><span class="line"><span class="comment"># 自动更新docker镜像</span></span><br><span class="line">  <span class="attr">watchtower:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">containrrr/watchtower</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">watchtower</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="comment"># 环境变量,设置为上海时区</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">TZ=Asia/Shanghai</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/var/run/docker.sock:/var/run/docker.sock</span></span><br><span class="line">    <span class="attr">command:</span> <span class="string">reader</span> <span class="string">watchtower</span> <span class="string">--cleanup</span> <span class="string">--schedule</span> <span class="string">&quot;0 0 4 * * *&quot;</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">share_net</span></span><br><span class="line">    <span class="comment"># 仅更新reader与watchtower容器,如需其他自行添加 &#x27;容器名&#x27; ,如:reader watchtower nginx</span></span><br><span class="line">    <span class="comment"># --cleanup 更新后清理旧版本镜像</span></span><br><span class="line">    <span class="comment"># --schedule 自动检测更新 crontab定时(限定6位crontab) 此处代表凌晨4点整</span></span><br><span class="line"><span class="attr">networks:</span></span><br><span class="line">  <span class="attr">share_net:</span></span><br><span class="line">    <span class="attr">driver:</span> <span class="string">bridge</span></span><br></pre></td></tr></table></figure><blockquote><p>个人 <code>docker-compose.yml</code> 修改版</p></blockquote><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&#x27;3.1&#x27;</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">reader:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">hectorqin/reader</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">reader</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">4396</span><span class="string">:8080</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./logs:/logs</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./storage:/storage</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">SPRING_PROFILES_ACTIVE=prod</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">READER_APP_USERBOOKLIMIT=500</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">READER_APP_CACHECHAPTERCONTENT=true</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose up -d</span><br></pre></td></tr></table></figure><blockquote><p>打开 <code>4396</code> 端口</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ufw allow 4396/tcp</span><br></pre></td></tr></table></figure><hr><p>书源：<a href="https://yuedu.xiu2.xyz/">https://yuedu.xiu2.xyz/</a></p><p>官方网站：<a href="https://github.com/hectorqin/reader">https://github.com/hectorqin/reader</a></p><hr><p></p>]]></content>
      
      
      <categories>
          
          <category> Docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> reader </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>微信 Markdown 编辑器</title>
      <link href="/2023/06/08/wechat/"/>
      <url>/2023/06/08/wechat/</url>
      
        <content type="html"><![CDATA[<h1 id="微信-Markdown-编辑器"><a href="#微信-Markdown-编辑器" class="headerlink" title="微信 Markdown 编辑器"></a>微信 Markdown 编辑器</h1><blockquote><p>Markdown 文档自动即时渲染为微信图文，让你不再为微信文章排版而发愁！</p></blockquote><hr><h2 id="Docker-Compose"><a href="#Docker-Compose" class="headerlink" title="Docker-Compose"></a>Docker-Compose</h2><blockquote><p>创建  <code>docker-compose.yml</code>  文件</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nano docker-compose.yml</span><br></pre></td></tr></table></figure><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&#x27;3.3&#x27;</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">    <span class="attr">md:</span></span><br><span class="line">        <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">        <span class="attr">container_name:</span> <span class="string">wechat</span></span><br><span class="line">        <span class="attr">ports:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">&#x27;13480:80&#x27;</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">&#x27;doocs/md:latest&#x27;</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose up -d</span><br></pre></td></tr></table></figure><blockquote><p>打开 <code>13480</code>  端口</p></blockquote> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ufw allow 13480/tcp</span><br></pre></td></tr></table></figure><hr><p>Github 官方：<a href="https://github.com/doocs/md">https://github.com/doocs/md</a> </p><hr><p></p><p></p>]]></content>
      
      
      <categories>
          
          <category> Docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ZFile —— 方便快捷的在线目录</title>
      <link href="/2023/06/08/zfile/"/>
      <url>/2023/06/08/zfile/</url>
      
        <content type="html"><![CDATA[<h1 id="ZFile"><a href="#ZFile" class="headerlink" title="ZFile"></a>ZFile</h1><blockquote><p>最方便快捷的在线目录展示程序，支持将本地文件、FTP、SFTP、S3、OneDrive 等存储在网站上展示并浏览。</p></blockquote><hr><h2 id="Docker-Compose"><a href="#Docker-Compose" class="headerlink" title="Docker-Compose"></a>Docker-Compose</h2><blockquote><p>创建 <code>docker-compose.yml</code> 文件</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nano docker-compose.yml</span><br></pre></td></tr></table></figure><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&#x27;3.3&#x27;</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">    <span class="attr">zfile:</span></span><br><span class="line">        <span class="attr">container_name:</span> <span class="string">zfile</span></span><br><span class="line">        <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">        <span class="attr">ports:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">&#x27;9180:8080&#x27;</span></span><br><span class="line">        <span class="attr">volumes:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">&#x27;./db:/root/.zfile-v4/db&#x27;</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">&#x27;./logs:/root/.zfile-v4/logs&#x27;</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">&#x27;./file:/data/file&#x27;</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">zhaojun1998/zfile</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose up -d</span><br></pre></td></tr></table></figure><p>打开 <code>9180</code> 端口</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ufw allow 9180/tcp</span><br></pre></td></tr></table></figure><hr><p>官方网站：<a href="https://www.zfile.vip/">https://www.zfile.vip/</a></p><hr><p></p>]]></content>
      
      
      <categories>
          
          <category> Docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> zfile </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>WordPress —— 适用于专业网站和博客</title>
      <link href="/2023/06/08/wordpress/"/>
      <url>/2023/06/08/wordpress/</url>
      
        <content type="html"><![CDATA[<h1 id="WordPress"><a href="#WordPress" class="headerlink" title="WordPress"></a>WordPress</h1><blockquote><p>WordPress 基于 PHP 脚本语言 （推荐 PHP 7 或更高版本），需要 MySQL 或 MariaDB 数据库。</p></blockquote><hr><h2 id="Docker-Compose"><a href="#Docker-Compose" class="headerlink" title="Docker-Compose"></a>Docker-Compose</h2><blockquote><p>创建 <code>docker-compose.yml</code> 文件</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nano docker-compose.yml</span><br></pre></td></tr></table></figure><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&#x27;3.1&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">wordpress:</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">wordpress</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">wordpress</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">7080</span><span class="string">:80</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="attr">WORDPRESS_DB_HOST:</span> <span class="string">db</span></span><br><span class="line">      <span class="attr">WORDPRESS_DB_USER:</span> <span class="string">wordpress_user</span></span><br><span class="line">      <span class="attr">WORDPRESS_DB_PASSWORD:</span> <span class="string">wordpress_password</span></span><br><span class="line">      <span class="attr">WORDPRESS_DB_NAME:</span> <span class="string">wordpress_db</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./html:/var/www/html</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">db:</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">wordpress_mysql</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">mysql:5.7</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="attr">MYSQL_DATABASE:</span> <span class="string">wordpress_db</span></span><br><span class="line">      <span class="attr">MYSQL_USER:</span> <span class="string">wordpress_user</span></span><br><span class="line">      <span class="attr">MYSQL_PASSWORD:</span> <span class="string">wordpress_password</span></span><br><span class="line">      <span class="attr">MYSQL_RANDOM_ROOT_PASSWORD:</span> <span class="string">rootpassword</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./mysql:/var/lib/mysql</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">phpmyadmin:</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">wordpress_phpmyadmin</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">phpmyadmin</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">7081</span><span class="string">:80</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="attr">PMA_HOST:</span> <span class="string">db</span></span><br><span class="line">      <span class="attr">MYSQL_ROOT_PASSWORD :</span> <span class="string">rootpassword</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose up -d</span><br></pre></td></tr></table></figure><blockquote><p>打开 <code>7080</code> <code>7081</code> 端口</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ufw allow 7080/tcp</span><br><span class="line">ufw allow 7081/tcp</span><br></pre></td></tr></table></figure><hr><h2 id="更改上传文件大小限制"><a href="#更改上传文件大小限制" class="headerlink" title="更改上传文件大小限制"></a>更改上传文件大小限制</h2><blockquote><p>新建 <code>uploads.ini</code> 文件</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nano uploads.ini</span><br></pre></td></tr></table></figure><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">file_uploads</span> = <span class="literal">On</span></span><br><span class="line"><span class="attr">upload_max_filesize</span> = <span class="number">256</span>M</span><br><span class="line"><span class="attr">post_max_size</span> = <span class="number">256</span>M</span><br></pre></td></tr></table></figure><blockquote><p>修改 <code>docker-compose.yml</code> 文件，在 <code>volume</code> 下面添加：</p></blockquote><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="string">./uploads.ini:/usr/local/etc/php/conf.d/uploads.ini</span></span><br></pre></td></tr></table></figure><blockquote><p>完整的配置文件：</p></blockquote><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&#x27;3.1&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">wordpress:</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">wordpress</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">wordpress</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">7080</span><span class="string">:80</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="attr">WORDPRESS_DB_HOST:</span> <span class="string">db</span></span><br><span class="line">      <span class="attr">WORDPRESS_DB_USER:</span> <span class="string">wordpress_user</span></span><br><span class="line">      <span class="attr">WORDPRESS_DB_PASSWORD:</span> <span class="string">wordpress_password</span></span><br><span class="line">      <span class="attr">WORDPRESS_DB_NAME:</span> <span class="string">wordpress_db</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./html:/var/www/html</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./uploads.ini:/usr/local/etc/php/conf.d/uploads.ini</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">db:</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">wordpress_mysql</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">mysql:5.7</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="attr">MYSQL_DATABASE:</span> <span class="string">wordpress_db</span></span><br><span class="line">      <span class="attr">MYSQL_USER:</span> <span class="string">wordpress_user</span></span><br><span class="line">      <span class="attr">MYSQL_PASSWORD:</span> <span class="string">wordpress_password</span></span><br><span class="line">      <span class="attr">MYSQL_RANDOM_ROOT_PASSWORD:</span> <span class="string">rootpassword</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./mysql:/var/lib/mysql</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">phpmyadmin:</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">wordpress_phpmyadmin</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">phpmyadmin</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">7081</span><span class="string">:80</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="attr">PMA_HOST:</span> <span class="string">db</span></span><br><span class="line">      <span class="attr">MYSQL_ROOT_PASSWORD :</span> <span class="string">rootpassword</span></span><br></pre></td></tr></table></figure><hr><h2 id="注解"><a href="#注解" class="headerlink" title="注解"></a>注解</h2><p><code>PMA_HOST</code> 是 phpMyAdmin（PMA）的一个环境变量，它指定了 PMA 将连接到的 MySQL 服务器的主机名或 IP 地址。</p><p>在 Docker 中，当您使用 PMA 镜像时，将需要设置 <code>PMA_HOST</code> 环境变量来告诉 PMA 如何连接到 MySQL 数据库。例如，您可以将 <code>PMA_HOST</code> 设置为 MySQL 容器的名称或 IP 地址。</p><p>以下是一个示例命令，在这个命令中，我们将使用 Docker 运行 PMA，并将 <code>PMA_HOST</code> 设置为 MySQL 容器的名称：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">docker run --name my-pma -d \</span><br><span class="line">    --<span class="built_in">link</span> my-mysql:mysql \</span><br><span class="line">    -p 8080:80 \</span><br><span class="line">    -e PMA_HOST=my-mysql \</span><br><span class="line">    phpmyadmin/phpmyadmin</span><br></pre></td></tr></table></figure><p>在上面的命令中，<code>--link</code> 标志用于链接 MySQL 容器，并将其命名为 <code>mysql</code>，然后将 <code>PMA_HOST</code> 设置为 <code>my-mysql</code>，这是 MySQL 容器的名称。</p><hr><h2 id="内网穿透"><a href="#内网穿透" class="headerlink" title="内网穿透"></a>内网穿透</h2><blockquote><p>wordpress 在本地搭建进行内网映射时，会产生跳转到端口的错误</p></blockquote><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[wordpress]</span></span><br><span class="line"><span class="attr">type</span> = tcp</span><br><span class="line"><span class="attr">local_ip</span> = <span class="number">127.0</span>.<span class="number">0.1</span></span><br><span class="line"><span class="attr">local_port</span> = <span class="number">7080</span></span><br><span class="line"><span class="attr">remote_port</span> = <span class="number">7024</span></span><br><span class="line"><span class="attr">custom_domains</span> = wordpress.rahn.top</span><br><span class="line"></span><br><span class="line"><span class="section">[phpmyadmin]</span></span><br><span class="line"><span class="attr">type</span> = tcp</span><br><span class="line"><span class="attr">local_ip</span> = <span class="number">127.0</span>.<span class="number">0.1</span></span><br><span class="line"><span class="attr">local_port</span> = <span class="number">7081</span></span><br><span class="line"><span class="attr">remote_port</span> = <span class="number">7025</span></span><br><span class="line"><span class="attr">custom_domains</span> = phpmyadmin.rahn.top</span><br></pre></td></tr></table></figure><hr><p>官方地址：<a href="https://wordpress.org/">https://wordpress.org/</a></p><hr><p></p>]]></content>
      
      
      <categories>
          
          <category> Docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> wordpress </tag>
            
            <tag> phpmyadmin </tag>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>qBittorrent —— BitTorrent WeB UI</title>
      <link href="/2023/06/07/qBittorrent/"/>
      <url>/2023/06/07/qBittorrent/</url>
      
        <content type="html"><![CDATA[<h1 id="qBittorrent"><a href="#qBittorrent" class="headerlink" title="qBittorrent"></a>qBittorrent</h1><blockquote><p>qBittorrent 是一款自由、跨平台的 BitTorrent 客户端，它是用 C++ 编写的，并且具有良好的性能和稳定性。</p></blockquote><hr><h2 id="Docker-Compose"><a href="#Docker-Compose" class="headerlink" title="Docker Compose"></a>Docker Compose</h2><blockquote><p>创建 <code>docker-compose.yaml</code> 文件</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nano docker-compose.yaml</span><br></pre></td></tr></table></figure><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">version:</span> <span class="string">&quot;2.1&quot;</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">qbittorrent:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">linuxserver/qbittorrent</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">qbittorrent</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">PUID=0</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">PGID=0</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">TZ=Asia/Shanghai</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">UMASK_SET=022</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">WEBUI_PORT=8081</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./config:/config</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./downloads:/downloads</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">6881</span><span class="string">:6881</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">6881</span><span class="string">:6881/udp</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">8081</span><span class="string">:8081</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">unless-stopped</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose up -d</span><br></pre></td></tr></table></figure><blockquote><p>打开 <code>6881</code>  <code>8081</code> 端口</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ufw allow 6881/udp</span><br><span class="line">ufw allow 6881/tcp</span><br><span class="line">ufw allow 8081/tcp</span><br></pre></td></tr></table></figure><hr><h2 id="Unanthorized-错误"><a href="#Unanthorized-错误" class="headerlink" title="Unanthorized 错误"></a>Unanthorized 错误</h2><ol><li>将语言修改为中文后，<code>HostHeaderValidation=true</code> 配置才会出现</li><li>进入容器 <code>/config/qBittorrent/</code> 目录，打开 <code>qBittorrent.conf</code> 文件</li><li>找到 <code>WebUI\HostHeaderValidation=true</code> , 将 <code>true</code> 改为 <code>false</code></li><li>也可以在外部直接进行修改</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="built_in">exec</span> -it qbittorrent bash</span><br><span class="line"></span><br><span class="line">sed -i <span class="string">&#x27;s/HostHeaderValidation=true/HostHeaderValidation=false/&#x27;</span> /config/qBittorrent/qBittorrent.conf</span><br><span class="line"></span><br><span class="line"><span class="built_in">exit</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed -i <span class="string">&#x27;s/HostHeaderValidation=true/HostHeaderValidation=false/&#x27;</span> /root/docker/qBittorrent/config/qBittorrent/qBittorrent.conf</span><br></pre></td></tr></table></figure><hr><h2 id="一键脚本"><a href="#一键脚本" class="headerlink" title="一键脚本"></a>一键脚本</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#! /bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">red</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;\033[31m\033[01m<span class="variable">$1</span>\033[0m&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">green</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;\033[32m\033[01m<span class="variable">$1</span>\033[0m&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">yellow</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;\033[33m\033[01m<span class="variable">$1</span>\033[0m&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># qBittorrent</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">qbittorrent_install</span></span>()&#123;</span><br><span class="line"><span class="keyword">if</span> nc -z localhost 6881 &amp;&amp; nc -z localhost 8081; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot; 6881 8081 端口已经被占用，请检查相关进程&quot;</span></span><br><span class="line"><span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> docker ps -a --format <span class="string">&quot;&#123;&#123;.Names&#125;&#125;&quot;</span> | grep -q <span class="string">&quot;qbittorrent&quot;</span>; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot; qbittorrent 容器名已经被占用&quot;</span></span><br><span class="line"><span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> [ ! -d /root/docker/qBittorrent ]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">mkdir</span> -p /root/docker/qBittorrent</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">cd</span> /root/docker/qBittorrent</span><br><span class="line"><span class="keyword">if</span> [ -f <span class="string">&quot;docker-compose.yaml&quot;</span> ] || [ -f <span class="string">&quot;docker-compose.yml&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">green <span class="string">&quot; docker-compose 文件已经存在, 跳过创建 docker-compose.yaml 步骤&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">cat</span> &lt;&lt;<span class="string">EOF &gt; docker-compose.yaml</span></span><br><span class="line"><span class="string">---</span></span><br><span class="line"><span class="string">version: &quot;2.1&quot;</span></span><br><span class="line"><span class="string">services:</span></span><br><span class="line"><span class="string">  qbittorrent:</span></span><br><span class="line"><span class="string">    image: linuxserver/qbittorrent</span></span><br><span class="line"><span class="string">    container_name: qbittorrent</span></span><br><span class="line"><span class="string">    environment:</span></span><br><span class="line"><span class="string">      - PUID=</span></span><br><span class="line"><span class="string">      - PGID=</span></span><br><span class="line"><span class="string">      - TZ=Asia/Shanghai</span></span><br><span class="line"><span class="string">      - UMASK_SET=022</span></span><br><span class="line"><span class="string">      - WEBUI_PORT=8081</span></span><br><span class="line"><span class="string">    volumes:</span></span><br><span class="line"><span class="string">      - ./config:/config</span></span><br><span class="line"><span class="string">      - ./downloads:/downloads</span></span><br><span class="line"><span class="string">    ports:</span></span><br><span class="line"><span class="string">      - 6881:6881</span></span><br><span class="line"><span class="string">      - 6881:6881/udp</span></span><br><span class="line"><span class="string">      - 8081:8081</span></span><br><span class="line"><span class="string">    restart: unless-stopped</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line">sed -i <span class="string">&quot;s/- PUID=/- PUID=<span class="subst">$(id -u)</span>/&quot;</span> docker-compose.yaml</span><br><span class="line">sed -i <span class="string">&quot;s/- PGID=/- PGID=<span class="subst">$(id -g)</span>/&quot;</span> docker-compose.yaml</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">docker-compose up -d</span><br><span class="line">ufw allow 6881/tcp</span><br><span class="line">ufw allow 6881/udp</span><br><span class="line">ufw allow 8081/tcp</span><br><span class="line">yellow <span class="string">&quot;-----------------------------------------------&quot;</span></span><br><span class="line">green <span class="string">&quot; Web 端口：8081&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">green <span class="string">&quot; Docker IP = <span class="subst">$(ip addr show docker0 | grep &#x27;inet\b&#x27; | awk &#x27;&#123;print $2&#125;&#x27; | cut -d &#x27;/&#x27; -f1)</span>:8081&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">green <span class="string">&quot; Web 网址  = http://<span class="subst">$(ifconfig $(ifconfig | grep -oP &#x27;enp\w+&#x27;)</span> | grep &#x27;inet &#x27; | awk &#x27;&#123;print <span class="variable">$2</span>&#125;&#x27;):8081&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">green <span class="string">&quot; 初始账号：admin&quot;</span></span><br><span class="line">green <span class="string">&quot; 初始密码：adminadmin&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">green <span class="string">&quot; qBittorrent 安装完毕！&quot;</span></span><br><span class="line">yellow <span class="string">&quot;-----------------------------------------------&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">qbittorrent_install</span><br></pre></td></tr></table></figure><hr><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>在 <code>docker-compose</code> 中，<code>UMASK_SET=022</code> 是一个环境变量设置，用于设置 Docker 容器中的默认文件权限掩码（umask）。这意味着当容器创建新文件或目录时，它们将具有默认权限模式 755（rwxr-xr-x）。</p><p>umask 是一个权限掩码，用于控制在创建新文件或目录时应该禁用哪些权限位。例如，在 umask 设置为 022 的情况下，创建新文件或目录时将禁用所有用户可写权限位（即 2），这意味着文件和目录将默认具有权限模式 755。</p><p>通过在 <code>docker-compose</code> 文件中设置 <code>UMASK_SET=022</code> 环境变量，您可以指示容器使用类似于主机系统的文件权限模式，从而确保在容器内部创建的文件和目录拥有适当的默认权限。</p><p>使用 <a href="https://dns.icoa.cn/tracker/">Tracker</a> 服务器地址，本地加速下载。</p><hr><p>文档地址：<a href="https://docs.linuxserver.io/images/docker-qbittorrent">https://docs.linuxserver.io/images/docker-qbittorrent</a></p><p>Tracker List：<a href="https://dns.icoa.cn/tracker/">https://dns.icoa.cn/tracker/</a></p><p>Tracker List：<a href="https://ngosang.github.io/trackerslist/">https://ngosang.github.io/trackerslist/</a></p><hr><p></p>]]></content>
      
      
      <categories>
          
          <category> Docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> qbittorrent </tag>
            
            <tag> bt </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Halo —— 开源博客</title>
      <link href="/2023/06/07/halo/"/>
      <url>/2023/06/07/halo/</url>
      
        <content type="html"><![CDATA[<h1 id="Halo"><a href="#Halo" class="headerlink" title="Halo"></a>Halo</h1><blockquote><p>Halo 是一款强大易用的开源建站工具，配合上不同的模板与插件，可以很好地帮助你构建你心中的理想站点。 </p></blockquote><hr><h2 id="Docker-Run"><a href="#Docker-Run" class="headerlink" title="Docker Run"></a>Docker Run</h2><blockquote><p>创建容器</p><p>注意：需要等待 1 分钟左右启动容器</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -itd --name halo --restart=always -p 8040:8090 -v /root/docker/halo:/root/.halo halohub/halo:1.5.4</span><br></pre></td></tr></table></figure><blockquote><p>停止容器并删除</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker stop halo &amp;&amp; docker <span class="built_in">rm</span> halo</span><br></pre></td></tr></table></figure><hr><h2 id="Docker-Compose"><a href="#Docker-Compose" class="headerlink" title="Docker-Compose"></a>Docker-Compose</h2><blockquote><p>创建 <code>docker-compose.yml</code> 文件</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nano docker-compose.yml</span><br></pre></td></tr></table></figure><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&#x27;3.3&#x27;</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">    <span class="attr">halo:</span></span><br><span class="line">        <span class="attr">container_name:</span> <span class="string">halo</span></span><br><span class="line">        <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">        <span class="attr">ports:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">&#x27;8040:8090&#x27;</span></span><br><span class="line">        <span class="attr">volumes:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">&#x27;./halo:/root/.halo&#x27;</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">&#x27;halohub/halo:1.5.4&#x27;</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose up -d</span><br></pre></td></tr></table></figure><blockquote><p>打开 <code>8040</code> 端口</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ufw allow 8040/tcp</span><br></pre></td></tr></table></figure><hr><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><blockquote><p>弃用状态，最终发现博客还得是静态网站。</p></blockquote><hr><p>官方网站：<a href="https://halo.run/">https://halo.run/</a></p><hr><p></p>]]></content>
      
      
      <categories>
          
          <category> Docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> halo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>FreshRSS —— 轻量级 RSS 阅读器</title>
      <link href="/2023/06/07/freshrss/"/>
      <url>/2023/06/07/freshrss/</url>
      
        <content type="html"><![CDATA[<h1 id="FreshRSS-——-轻量级-RSS-阅读器"><a href="#FreshRSS-——-轻量级-RSS-阅读器" class="headerlink" title="FreshRSS —— 轻量级 RSS 阅读器"></a>FreshRSS —— 轻量级 RSS 阅读器</h1><blockquote><p>FreshRSS 是一个自托管的 RSS 和 Atom 提要聚合器。<br>FreshRSS 是轻量级的，易于使用，功能强大，并且可定制。</p></blockquote><hr><h2 id="Docker-Run"><a href="#Docker-Run" class="headerlink" title="Docker Run"></a>Docker Run</h2><blockquote><p>创建容器</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -itd --name freshrss -p 5380:80 linuxserver/freshrss:latest</span><br></pre></td></tr></table></figure><blockquote><p>制作一个自带插件的 freshrss 镜像</p><ol><li>创建容器</li><li>将本地 <code>extensions.tar.gz</code> 压缩包，拷贝进容器根目录</li><li>进入容器，查看确认</li><li>退出容器</li><li>登陆 Docker Hub</li><li>上传制作的镜像</li></ol></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">docker run -itd --name freshrss -p 5380:80 linuxserver/freshrss:latest</span><br><span class="line">docker <span class="built_in">cp</span> extensions.tar.gz freshrss:/</span><br><span class="line"></span><br><span class="line">docker <span class="built_in">exec</span> -it freshrss sh</span><br><span class="line"><span class="built_in">ls</span></span><br><span class="line"><span class="built_in">exit</span></span><br><span class="line"></span><br><span class="line">docker ps</span><br><span class="line">docker commit 467807fde623 rahn2029/freshrss</span><br><span class="line">docker login</span><br><span class="line">docker push rahn2029/freshrss</span><br></pre></td></tr></table></figure><blockquote><p>创建 <code>rahn2029/freshrss</code> 容器</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker stop freshrss &amp;&amp; docker <span class="built_in">rm</span> freshrss</span><br><span class="line">docker run -itd --name freshrss -p 5380:80 rahn2029/freshrss</span><br></pre></td></tr></table></figure><blockquote><p>创建好 freshrss 的账号密码，进入容器，将  <code>extensions.tar.gz</code> 移动到 <code>/config/www/freshrss/extensions</code> 文件夹内，解压后删除，大功告成</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="built_in">exec</span> -it freshrss sh</span><br><span class="line"><span class="built_in">ls</span></span><br><span class="line"><span class="built_in">cd</span> / </span><br><span class="line"><span class="built_in">mv</span> extensions.tar.gz /config/www/freshrss/extensions</span><br><span class="line"><span class="built_in">cd</span> /config/www/freshrss/extensions</span><br><span class="line">tar xzvf extensions.tar.gz</span><br><span class="line"><span class="built_in">rm</span> extensions.tar.gz</span><br><span class="line"><span class="built_in">exit</span></span><br></pre></td></tr></table></figure><blockquote><p>将容器内部文件拷贝到当前文件夹下进行后续的挂载操作</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="built_in">cp</span> freshrss:/config  $(<span class="built_in">pwd</span>)/config</span><br></pre></td></tr></table></figure><blockquote><p>停止容器并删除，用 docker-compose 进行挂载操作</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker stop freshrss &amp;&amp; docker <span class="built_in">rm</span> freshrss</span><br></pre></td></tr></table></figure><hr><h2 id="Docker-Compose"><a href="#Docker-Compose" class="headerlink" title="Docker-Compose"></a>Docker-Compose</h2><blockquote><p>创建 <code>docker-compose.yml</code> 文件</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nano docker-compose.yml</span><br></pre></td></tr></table></figure><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&quot;2.1&quot;</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">freshrss:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">linuxserver/freshrss:latest</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">freshrss</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">PUID=1000</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">PGID=1000</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">TZ=Asia/Shanghai</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./config:/config</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">5380</span><span class="string">:80</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">unless-stopped</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose up -d</span><br></pre></td></tr></table></figure><blockquote><p>打开 <code>5380</code> 端口</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ufw allow 5380/tcp</span><br></pre></td></tr></table></figure><hr><h2 id="rahn2029-x2F-freshrss-内部扩展"><a href="#rahn2029-x2F-freshrss-内部扩展" class="headerlink" title="rahn2029&#x2F;freshrss 内部扩展"></a>rahn2029&#x2F;freshrss 内部扩展</h2><blockquote><p>建立账号后，进入容器内部进行移动解压删除操作</p></blockquote><ol><li><p>Image Proxy —— 对图像进行代理 <code>https://weserv.rahn.top/?url=</code> 可以自建 <code>weserv</code> </p></li><li><p>ReadingTime —— 显示阅读时间</p></li><li><p>Title-Wrap —— 对长文章标题应用换行，而不是在标题溢出其显示区域时截断标题</p></li><li><p>YouTubeChannel2RssFeed  —— 将 YouTube 频道 URL 转换为 RSS Feed URL </p></li><li><p>YouTube&#x2F;PeerTube Video Feed —— 在文章内容中嵌入 YouTube&#x2F;PeerTube 视频源</p></li><li><p>ThreePanesView ——  三窗格视图（重要）</p></li><li><p>Always togglable menu —— 始终可切换的菜单</p></li><li><p>Invidious Video Feed —— 将 Youtube 视频切换为 <code>Invidious</code> ，可以自建 <code>Invidious</code> 服务</p></li><li><p>FeedTitleBuilder —— 根据 url、原始提要标题和提要添加日期构建您自己的提要标题</p></li><li><p>Clickable Links —— 用可点击的 HTML 链接替换文章中不可点击的纯文本 URL。</p></li><li><p>Image Cache —— 在您自己的设施或 Cloudflare 缓存中缓存提要图像</p></li><li><p>Auto Refresh —— 没有活动时自动刷新 RSS 提要</p></li><li><p>Feed Priority Shortcut —— 轻松设置提要的可见性&#x2F;优先级</p></li><li><p>Theme Mode Synchronizer —— 将主题与您的系统亮&#x2F;暗模式同步</p></li></ol><hr><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>仅 86M Docker 镜像的 RSS 阅读器。</p><p><code>rahn2029/freshrss</code> 如下图使用效果：</p><p><img src="/%5Cimages%5Cimage-20230607194141201.png" alt="image-20230607194141201"></p><hr><p>官方网站：<a href="https://freshrss.org/">https://freshrss.org/</a></p><p>GitHub 官方地址：<a href="https://github.com/FreshRSS/FreshRSS">https://github.com/FreshRSS/FreshRSS</a></p><hr><p></p>]]></content>
      
      
      <categories>
          
          <category> Docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> invidious </tag>
            
            <tag> rss </tag>
            
            <tag> freshrss </tag>
            
            <tag> weserv </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Stirling PDF —— PDF 多功能工具</title>
      <link href="/2023/06/07/Stirling-PDF/"/>
      <url>/2023/06/07/Stirling-PDF/</url>
      
        <content type="html"><![CDATA[<h1 id="Stirling-PDF"><a href="#Stirling-PDF" class="headerlink" title="Stirling PDF"></a>Stirling PDF</h1><blockquote><p>您的本地托管一站式服务，满足您的所有PDF需求。</p></blockquote><hr><h2 id="Docker-Run"><a href="#Docker-Run" class="headerlink" title="Docker Run"></a>Docker Run</h2><blockquote><p>创建容器</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -itd --name spdf -p 8077:8080 --restart=always frooodle/s-pdf</span><br></pre></td></tr></table></figure><blockquote><p>停止容器并删除</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker stop spdf &amp;&amp; docker <span class="built_in">rm</span> spdf</span><br></pre></td></tr></table></figure><hr><h2 id="Docker-Compose"><a href="#Docker-Compose" class="headerlink" title="Docker-Compose"></a>Docker-Compose</h2><blockquote><p>创建 <code>docker-compose.yml</code> 文件</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nano docker-compose.yml</span><br></pre></td></tr></table></figure><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&#x27;3&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">s-pdf:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">frooodle/s-pdf</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">spdf</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">unless-stopped</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">8077</span><span class="string">:8080</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose up -d</span><br></pre></td></tr></table></figure><blockquote><p>打开 <code>8077</code> 端口</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ufw allow 8077/tcp</span><br></pre></td></tr></table></figure><hr><p>GitHub 官方地址：<a href="https://github.com/Frooodle/Stirling-PDF">https://github.com/Frooodle/Stirling-PDF</a></p><p>Docker 镜像地址：<a href="https://hub.docker.com/r/frooodle/s-pdf">https://hub.docker.com/r/frooodle/s-pdf</a></p><hr><p></p>]]></content>
      
      
      <categories>
          
          <category> Docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> pdf </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Sshwifty —— SSH Web 代理</title>
      <link href="/2023/06/07/sshwifty/"/>
      <url>/2023/06/07/sshwifty/</url>
      
        <content type="html"><![CDATA[<h1 id="Sshwifty-——-SSH-代理"><a href="#Sshwifty-——-SSH-代理" class="headerlink" title="Sshwifty —— SSH 代理"></a>Sshwifty —— SSH 代理</h1><blockquote><p>一款专为 Web 设计的 SSH 和 Telnet 连接器。</p></blockquote><hr><h2 id="Docker-Compose"><a href="#Docker-Compose" class="headerlink" title="Docker-Compose"></a>Docker-Compose</h2><blockquote><p>创建 <code>docker-compose.yml</code> 文件</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nano docker-compose.yml</span><br></pre></td></tr></table></figure><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&#x27;3.3&#x27;</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">    <span class="attr">sshwifty:</span></span><br><span class="line">        <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">        <span class="attr">ports:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">&#x27;8090:8182&#x27;</span></span><br><span class="line">        <span class="attr">container_name:</span> <span class="string">sshwifty</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">&#x27;niruix/sshwifty:latest&#x27;</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose up -d</span><br></pre></td></tr></table></figure><blockquote><p>打开 <code>8090</code> 端口</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ufw allow 8090/tcp</span><br></pre></td></tr></table></figure><hr><p>官方演示：<a href="https://sshwifty-demo.nirui.org/">https://sshwifty-demo.nirui.org/</a></p><p>GitHub 官方地址：<a href="https://github.com/nirui/sshwifty">https://github.com/nirui/sshwifty</a></p><p>Docker 镜像地址：<a href="https://hub.docker.com/r/niruix/sshwifty">https://hub.docker.com/r/niruix/sshwifty</a></p><hr><p></p>]]></content>
      
      
      <categories>
          
          <category> Docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> sshwifty </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Portainer —— Docker 管理工具</title>
      <link href="/2023/06/07/Portainer-ce/"/>
      <url>/2023/06/07/Portainer-ce/</url>
      
        <content type="html"><![CDATA[<h1 id="Portainer-——-Docker-管理面板"><a href="#Portainer-——-Docker-管理面板" class="headerlink" title="Portainer —— Docker 管理面板"></a>Portainer —— Docker 管理面板</h1><blockquote><p>Portainer 是一个非常好用的 Docker 可视化面板，可以让你轻松地管理你的 Docker 容器。</p></blockquote><hr><h2 id="Docker-Run"><a href="#Docker-Run" class="headerlink" title="Docker Run"></a>Docker Run</h2><blockquote><p>创建容器</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -itd --restart=always --name portainer -p 9000:9000 -v /var/run/docker.sock:/var/run/docker.sock rahn2029/portainer-ce</span><br></pre></td></tr></table></figure><blockquote><p>停止容器并删除</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker stop portainer &amp;&amp; docker <span class="built_in">rm</span> portainer</span><br></pre></td></tr></table></figure><hr><h2 id="Docker-Compose"><a href="#Docker-Compose" class="headerlink" title="Docker-Compose"></a>Docker-Compose</h2><blockquote><p>创建 <code>docker-compose.yml</code> 文件</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nano docker-compose.yml</span><br></pre></td></tr></table></figure><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&#x27;3.3&#x27;</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">    <span class="attr">portainer-ce:</span></span><br><span class="line">        <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">        <span class="attr">container_name:</span> <span class="string">portainer</span></span><br><span class="line">        <span class="attr">ports:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">&#x27;9000:9000&#x27;</span></span><br><span class="line">        <span class="attr">volumes:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">&#x27;/var/run/docker.sock:/var/run/docker.sock&#x27;</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">rahn2029/portainer-ce</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose up -d</span><br></pre></td></tr></table></figure><blockquote><p>打开 <code>9000</code> 端口</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ufw allow 9000/tcp</span><br></pre></td></tr></table></figure><hr><p>官网：<a href="https://www.portainer.io/">https://www.portainer.io/</a></p><hr><p></p>]]></content>
      
      
      <categories>
          
          <category> Docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> portainer </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Liunx Command —— 常用命令</title>
      <link href="/2023/06/07/liunx-%E5%91%BD%E4%BB%A4/"/>
      <url>/2023/06/07/liunx-%E5%91%BD%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<h1 id="Liunx-Command"><a href="#Liunx-Command" class="headerlink" title="Liunx Command"></a>Liunx Command</h1><blockquote><p>日常中频繁用到的命令</p></blockquote><hr><h2 id="查看-IP-地址"><a href="#查看-IP-地址" class="headerlink" title="查看 IP 地址"></a>查看 IP 地址</h2><blockquote><ul><li>首先执行 <code>ifconfig</code> 命令，获取当前系统网络接口的信息。</li><li>然后通过 <code>grep -oP &#39;enp\w+&#39;</code> 过滤出以 “enp” 开头的网卡名称，这里使用了正则表达式 <code>\w+</code> 匹配一个或多个字母数字字符。</li><li>把过滤出来的网卡名称作为参数传递给 ifconfig 命令，再次调用 ifconfig 命令来获取该网卡的详细信息。</li><li>然后通过管道符号 <code>|</code> 把输出结果传递给 <code>grep &#39;inet &#39;</code> 命令，过滤出包含 “inet “ 字符串的行，这些行包含了 IPv4 地址的信息。</li><li>最后使用 awk 命令提取出 IPv4 地址，打印在屏幕上。其中 <code>&#123;print $2&#125;</code> 表示打印每行的第二个字段，也就是 IPv4 地址。</li></ul></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ifconfig</span></span><br><span class="line">ifconfig $(ifconfig | grep -oP <span class="string">&#x27;enp\w+&#x27;</span>) | grep <span class="string">&#x27;inet &#x27;</span> | awk <span class="string">&#x27;&#123;print $2&#125;&#x27;</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># url</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;<span class="subst">$(curl -s  ifconfig.me)</span>&quot;</span></span><br></pre></td></tr></table></figure><hr><h2 id="Docker-IP"><a href="#Docker-IP" class="headerlink" title="Docker IP"></a>Docker IP</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> $(ip addr show docker0 | grep <span class="string">&#x27;inet\b&#x27;</span> | awk <span class="string">&#x27;&#123;print $2&#125;&#x27;</span> | <span class="built_in">cut</span> -d <span class="string">&#x27;/&#x27;</span> -f1)</span><br></pre></td></tr></table></figure><hr><h2 id="压缩与解压"><a href="#压缩与解压" class="headerlink" title="压缩与解压"></a>压缩与解压</h2><blockquote><p>压缩文件夹内所有文件到 <code>文件名.tar.gz</code></p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># tar -czvf 文件名.tar.gz *</span></span><br><span class="line">tar czvf 文件名.tar.gz *</span><br></pre></td></tr></table></figure><blockquote><p>上述命令使用了以下选项：</p><ul><li><code>-c</code>：创建一个新的 tar 文件</li><li><code>-z</code>：使用 gzip 压缩文件</li><li><code>-v</code>：在命令行上显示详细输出</li><li><code>-f</code>：指定输出文件名</li></ul></blockquote><p><code>*</code> 表示将当前目录下的所有文件和子目录加入到压缩包中。</p><p>执行该命令后，您将会得到一个名为 <code>文件名.tar.gz</code> 的压缩文件，它包含了当前目录下的所有文件和子目录。</p><blockquote><p>解压</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar xzvf 文件名.tar.gz</span><br></pre></td></tr></table></figure><hr><h2 id="一键执行"><a href="#一键执行" class="headerlink" title="一键执行"></a>一键执行</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nano 1.sh &amp;&amp; <span class="built_in">chmod</span> +x 1.sh &amp;&amp; bash 1.sh</span><br></pre></td></tr></table></figure><hr><p></p>]]></content>
      
      
      <categories>
          
          <category> Liunx </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 命令 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>RustDesk —— 远程桌面软件</title>
      <link href="/2023/06/06/RustDesk/"/>
      <url>/2023/06/06/RustDesk/</url>
      
        <content type="html"><![CDATA[<h1 id="RustDesk"><a href="#RustDesk" class="headerlink" title="RustDesk"></a>RustDesk</h1><blockquote><p>远程桌面软件，开箱即用，无需任何配置。您完全掌控数据，不用担心安全问题。</p></blockquote><hr><h2 id="Docker-Compose"><a href="#Docker-Compose" class="headerlink" title="Docker-Compose"></a>Docker-Compose</h2><blockquote><p>创建 <code>docker-compose.yml</code> 文件</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nano docker-compose.yml</span><br></pre></td></tr></table></figure><blockquote><p><code>command: hbbs -r desk.rahn.top:21117</code>  <code>desk.rahn.top</code> 修改为反向代理的域名</p><p><code>hbbs</code> 是一个服务，它运行在 <code>Docker</code> 容器中，并且可以通过多个端口进行访问。该服务的作用是提供远程桌面的功能，可以让用户通过网络连接到远程计算机并控制其操作。<code>hbbs</code> 服务使用了最新版本的<code>rustdesk/rustdesk-server</code>镜像，并且在容器内有一个数据卷（<code>./hbbs</code>），以保存数据和配置文件。此外，该服务依赖于另一个名为 <code>hbbr</code> 的服务。</p><p><code>hbbr</code> 也是一个运行在 <code>Docker</code> 容器中的服务，它提供了 <code>hbbs</code> 所需的支持服务。<code>hbbr</code> 服务同样使用最新版本的 <code>rustdesk/rustdesk-server</code> 镜像，并且在容器内有一个数据卷（<code>./hbbr</code>），以保存数据和配置文件。该服务使用命令 <code>hbbr</code> 启动，并且可以通过多个端口进行访问。如果出现故障，<code>hbbr</code> 和 <code>hbbs</code> 服务都将自动重启。</p></blockquote><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&#x27;3&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">networks:</span></span><br><span class="line">  <span class="attr">rustdesk-net:</span></span><br><span class="line">    <span class="attr">external:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">hbbs:</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">hbbs</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">21115</span><span class="string">:21115</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">21116</span><span class="string">:21116</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">21116</span><span class="string">:21116/udp</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">21118</span><span class="string">:21118</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">rustdesk/rustdesk-server:latest</span></span><br><span class="line">    <span class="attr">command:</span> <span class="string">hbbs</span> <span class="string">-r</span> <span class="string">desk.rahn.top:21117</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./hbbs:/root</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">rustdesk-net</span></span><br><span class="line">    <span class="attr">depends_on:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">hbbr</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">unless-stopped</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">hbbr:</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">hbbr</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">21117</span><span class="string">:21117</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">21119</span><span class="string">:21119</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">rustdesk/rustdesk-server:latest</span></span><br><span class="line">    <span class="attr">command:</span> <span class="string">hbbr</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./hbbr:/root</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">rustdesk-net</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">unless-stopped</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose up -d</span><br></pre></td></tr></table></figure><blockquote><p>打开 <code>21115</code> <code>21116</code> <code>21117</code>  <code>21118</code> <code>21119</code>  端口</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">ufw allow 21115/tcp</span><br><span class="line">ufw allow 21116/udp</span><br><span class="line">ufw allow 21116/tcp</span><br><span class="line">ufw allow 21117/tcp</span><br><span class="line">ufw allow 21118/tcp</span><br><span class="line">ufw allow 21119/tcp</span><br></pre></td></tr></table></figure><hr><h2 id="允许通过-IP-访问"><a href="#允许通过-IP-访问" class="headerlink" title="允许通过 IP 访问"></a>允许通过 IP 访问</h2><blockquote><p>直接写 IP 地址，不需要加上端口号</p><p>在本地客户端打开 <code>允许IP直接访问</code> </p><p>访问也可以是加密的形式</p></blockquote><hr><h2 id="加密通信"><a href="#加密通信" class="headerlink" title="加密通信"></a>加密通信</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /hbbs</span><br><span class="line"><span class="built_in">cat</span> id_ed25519.pub</span><br><span class="line">z9MtgU7HdltmURkatkcDkJDuW4Tk93NufAhZeWKT02U=</span><br></pre></td></tr></table></figure><p><img src="/%5Cimages%5Cimage-20230606201407154.png" alt="image-20230606201407154"></p><hr><h2 id="一键脚本"><a href="#一键脚本" class="headerlink" title="一键脚本"></a>一键脚本</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#! /bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">red</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;\033[31m\033[01m<span class="variable">$1</span>\033[0m&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">green</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;\033[32m\033[01m<span class="variable">$1</span>\033[0m&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">yellow</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;\033[33m\033[01m<span class="variable">$1</span>\033[0m&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># RustDesk</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">rustdesk_install</span></span>()&#123;</span><br><span class="line"><span class="keyword">if</span> nc -z localhost 21115 &amp;&amp; nc -z localhost 21116 &amp;&amp; nc -z localhost 21117 &amp;&amp; nc -z localhost 21118 &amp;&amp; nc -z localhost 21119; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot; 21115 21116 21117 21118 21119 中的端口已经被占用，请检查相关进程&quot;</span></span><br><span class="line"><span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> docker ps -a --format <span class="string">&quot;&#123;&#123;.Names&#125;&#125;&quot;</span> | grep -q <span class="string">&quot;hbbs&quot;</span> &amp;&amp; docker ps -a --format <span class="string">&quot;&#123;&#123;.Names&#125;&#125;&quot;</span> | grep -q <span class="string">&quot;hbbr&quot;</span>; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot; hbbs hbbr 容器名已经被占用&quot;</span></span><br><span class="line"><span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> [ ! -d /root/docker/RustDesk ]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">mkdir</span> -p /root/docker/RustDesk</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">cd</span> /root/docker/RustDesk</span><br><span class="line"><span class="keyword">if</span> [ -f <span class="string">&quot;docker-compose.yml&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">rm</span> docker-compose.yml</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">cat</span> &lt;&lt;<span class="string">EOF &gt; docker-compose.yml</span></span><br><span class="line"><span class="string">version: &#x27;3&#x27;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">networks:</span></span><br><span class="line"><span class="string">  rustdesk-net:</span></span><br><span class="line"><span class="string">    external: false</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">services:</span></span><br><span class="line"><span class="string">  hbbs:</span></span><br><span class="line"><span class="string">    container_name: hbbs</span></span><br><span class="line"><span class="string">    ports:</span></span><br><span class="line"><span class="string">      - 21115:21115</span></span><br><span class="line"><span class="string">      - 21116:21116</span></span><br><span class="line"><span class="string">      - 21116:21116/udp</span></span><br><span class="line"><span class="string">      - 21118:21118</span></span><br><span class="line"><span class="string">    image: rustdesk/rustdesk-server:latest</span></span><br><span class="line"><span class="string">    command: hbbs -r https://rustdesk.rahn.top</span></span><br><span class="line"><span class="string">    volumes:</span></span><br><span class="line"><span class="string">      - ./hbbs:/root</span></span><br><span class="line"><span class="string">    networks:</span></span><br><span class="line"><span class="string">      - rustdesk-net</span></span><br><span class="line"><span class="string">    depends_on:</span></span><br><span class="line"><span class="string">      - hbbr</span></span><br><span class="line"><span class="string">    restart: unless-stopped</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  hbbr:</span></span><br><span class="line"><span class="string">    container_name: hbbr</span></span><br><span class="line"><span class="string">    ports:</span></span><br><span class="line"><span class="string">      - 21117:21117</span></span><br><span class="line"><span class="string">      - 21119:21119</span></span><br><span class="line"><span class="string">    image: rustdesk/rustdesk-server:latest</span></span><br><span class="line"><span class="string">    command: hbbr</span></span><br><span class="line"><span class="string">    volumes:</span></span><br><span class="line"><span class="string">      - ./hbbr:/root</span></span><br><span class="line"><span class="string">    networks:</span></span><br><span class="line"><span class="string">      - rustdesk-net</span></span><br><span class="line"><span class="string">    restart: unless-stopped</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line">docker-compose up -d</span><br><span class="line">ufw allow 21115/tcp</span><br><span class="line">ufw allow 21116/udp</span><br><span class="line">ufw allow 21116/tcp</span><br><span class="line">ufw allow 21117/tcp</span><br><span class="line">ufw allow 21118/tcp</span><br><span class="line">ufw allow 21119/tcp</span><br><span class="line">yellow <span class="string">&quot;-----------------------------------------------&quot;</span></span><br><span class="line">green <span class="string">&quot; Web 端口：21117&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">green <span class="string">&quot; Docker IP = <span class="subst">$(ip addr show docker0 | grep &#x27;inet\b&#x27; | awk &#x27;&#123;print $2&#125;&#x27; | cut -d &#x27;/&#x27; -f1)</span>:21117&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">green <span class="string">&quot; Web 网址  = http://<span class="subst">$(ifconfig $(ifconfig | grep -oP &#x27;enp\w+&#x27;)</span> | grep &#x27;inet &#x27; | awk &#x27;&#123;print <span class="variable">$2</span>&#125;&#x27;):21117&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">green <span class="string">&quot; ID 服务器 = https://rustdesk.rahn.top&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line"><span class="built_in">cd</span> /root/docker/RustDesk/hbbs</span><br><span class="line">green <span class="string">&quot; Key       = <span class="subst">$(cat id_ed25519.pub)</span>&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">green <span class="string">&quot; RustDesk 安装完毕！&quot;</span></span><br><span class="line">yellow <span class="string">&quot;-----------------------------------------------&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">rustdesk_install</span><br></pre></td></tr></table></figure><hr><h2 id="内网穿透"><a href="#内网穿透" class="headerlink" title="内网穿透"></a>内网穿透</h2><blockquote><p>在 RustDesk 软件中，<code>nasrustdesk.rahn.top</code> 填写在中继服务中</p></blockquote><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[rustdesk]</span></span><br><span class="line"><span class="attr">type</span> = tcp</span><br><span class="line"><span class="attr">local_ip</span> = <span class="number">127.0</span>.<span class="number">0.1</span></span><br><span class="line"><span class="attr">local_port</span> = <span class="number">21117</span></span><br><span class="line"><span class="attr">remote_port</span> = <span class="number">7019</span></span><br><span class="line"><span class="attr">custom_domains</span> = nasrustdesk.rahn.top</span><br></pre></td></tr></table></figure><hr><p>官方：<a href="https://rustdesk.com/zh/">https://rustdesk.com/zh/</a></p><p>Docker： <a href="https://hub.docker.com/r/rustdesk/rustdesk-server">https://hub.docker.com/r/rustdesk/rustdesk-server</a></p><hr><p></p>]]></content>
      
      
      <categories>
          
          <category> Docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> rustdesk </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Weserv —— 图片代理</title>
      <link href="/2023/06/06/weserv/"/>
      <url>/2023/06/06/weserv/</url>
      
        <content type="html"><![CDATA[<h1 id="Weserv-——-图片代理"><a href="#Weserv-——-图片代理" class="headerlink" title="Weserv —— 图片代理"></a>Weserv —— 图片代理</h1><blockquote><p>图像缓存和调整大小服务。<br>使用全球缓存即时处理图像。</p></blockquote><hr><h2 id="Docker-Compose"><a href="#Docker-Compose" class="headerlink" title="Docker-Compose"></a>Docker-Compose</h2><blockquote><p>创建 <code>docker-compose.yml</code> 文件</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nano docker-compose.yml</span><br></pre></td></tr></table></figure><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&#x27;3.3&#x27;</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">    <span class="attr">weserv:</span></span><br><span class="line">        <span class="attr">ports:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">&#x27;9999:80&#x27;</span></span><br><span class="line">        <span class="attr">container_name:</span> <span class="string">weserv</span></span><br><span class="line">        <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">&#x27;ghcr.io/weserv/images:5.x&#x27;</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose up -d</span><br></pre></td></tr></table></figure><blockquote><p>打开 <code>9999</code> 端口</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ufw allow 9999/tcp</span><br></pre></td></tr></table></figure><hr><h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><p><code>https://weserv.rahn.top/?url=</code> 加上代理的图片网址如下：</p><p><code>https://weserv.rahn.top/?url=https%3A%2F%2Fi3.ytimg.com%2Fvi%2FvX6e3mYwH7s%2Fhqdefault.jpg</code></p><p><code>https://weserv.rahn.top</code> 为网站代理的域名</p><hr><p>官方： <a href="https://wsrv.nl/">https://wsrv.nl/</a></p><p>Github: <a href="https://github.com/weserv/images/tree/5.x/docker">https://github.com/weserv/images/tree/5.x/docker</a></p><hr><p></p>]]></content>
      
      
      <categories>
          
          <category> Docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> weserv </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Invidious —— 代理 YouTube 网站</title>
      <link href="/2023/06/06/Invidious/"/>
      <url>/2023/06/06/Invidious/</url>
      
        <content type="html"><![CDATA[<h1 id="Invidious"><a href="#Invidious" class="headerlink" title="Invidious"></a>Invidious</h1><blockquote><p>Invidious 保护您免受 Google 的窥探。它也不会跟踪你。</p><p>Invidious 可让您观看视频而不会被烦人的广告打扰。</p><p>Invidious 允许您订阅频道和创建播放列表，而无需 YouTube 帐户。</p><p>Invidious 有多种不同的语言版本。</p><p>Invidious 可让您观看视频而不会被烦人的广告打扰。</p><p>Invidious 为开发人员提供功能齐全且文档齐全的 REST API。</p></blockquote><hr><h2 id="Docker-Compose"><a href="#Docker-Compose" class="headerlink" title="Docker-Compose"></a>Docker-Compose</h2><blockquote><p>创建 <code>docker-compose.yml</code> 文件</p></blockquote><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">nano</span> <span class="string">docker-compose.yml</span></span><br></pre></td></tr></table></figure><blockquote><p>官方 <code>docker-compose.yml</code> 示例</p></blockquote><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&quot;3&quot;</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">invidious:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">quay.io/invidious/invidious:latest</span></span><br><span class="line">    <span class="comment"># image: quay.io/invidious/invidious:latest-arm64 # ARM64/AArch64 devices</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">unless-stopped</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;127.0.0.1:3000:3000&quot;</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="comment"># Please read the following file for a comprehensive list of all available</span></span><br><span class="line">      <span class="comment"># configuration options and their associated syntax:</span></span><br><span class="line">      <span class="comment"># https://github.com/iv-org/invidious/blob/master/config/config.example.yml</span></span><br><span class="line">      <span class="attr">INVIDIOUS_CONFIG:</span> <span class="string">|</span></span><br><span class="line"><span class="string">        db:</span></span><br><span class="line"><span class="string">          dbname: invidious</span></span><br><span class="line"><span class="string">          user: kemal</span></span><br><span class="line"><span class="string">          password: kemal</span></span><br><span class="line"><span class="string">          host: invidious-db</span></span><br><span class="line"><span class="string">          port: 5432</span></span><br><span class="line"><span class="string">        check_tables: true</span></span><br><span class="line"><span class="string">        # external_port:</span></span><br><span class="line"><span class="string">        # domain:</span></span><br><span class="line"><span class="string">        # https_only: false</span></span><br><span class="line"><span class="string">        # statistics_enabled: false</span></span><br><span class="line"><span class="string"></span>    <span class="attr">healthcheck:</span></span><br><span class="line">      <span class="attr">test:</span> <span class="string">wget</span> <span class="string">-nv</span> <span class="string">--tries=1</span> <span class="string">--spider</span> <span class="string">http://127.0.0.1:3000/api/v1/comments/jNQXAC9IVRw</span> <span class="string">||</span> <span class="string">exit</span> <span class="number">1</span></span><br><span class="line">      <span class="attr">interval:</span> <span class="string">30s</span></span><br><span class="line">      <span class="attr">timeout:</span> <span class="string">5s</span></span><br><span class="line">      <span class="attr">retries:</span> <span class="number">2</span></span><br><span class="line">    <span class="attr">logging:</span></span><br><span class="line">      <span class="attr">options:</span></span><br><span class="line">        <span class="attr">max-size:</span> <span class="string">&quot;1G&quot;</span></span><br><span class="line">        <span class="attr">max-file:</span> <span class="string">&quot;4&quot;</span></span><br><span class="line">    <span class="attr">depends_on:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">invidious-db</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">invidious-db:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">docker.io/library/postgres:14</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">unless-stopped</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">postgresdata:/var/lib/postgresql/data</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./config/sql:/config/sql</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./docker/init-invidious-db.sh:/docker-entrypoint-initdb.d/init-invidious-db.sh</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="attr">POSTGRES_DB:</span> <span class="string">invidious</span></span><br><span class="line">      <span class="attr">POSTGRES_USER:</span> <span class="string">kemal</span></span><br><span class="line">      <span class="attr">POSTGRES_PASSWORD:</span> <span class="string">kemal</span></span><br><span class="line">    <span class="attr">healthcheck:</span></span><br><span class="line">      <span class="attr">test:</span> [<span class="string">&quot;CMD-SHELL&quot;</span>, <span class="string">&quot;pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB&quot;</span>]</span><br><span class="line"></span><br><span class="line"><span class="attr">volumes:</span></span><br><span class="line">  <span class="attr">postgresdata:</span></span><br></pre></td></tr></table></figure><blockquote><ol><li><p>个人 <code>docker-compose.yml</code> 修改版</p></li><li><p><code>127.0.0.1:3000:3000</code> 修改成自己的端口 <code>5000:3000</code></p></li><li><p>修改 <code>postgresdata:/var/lib/postgresql/data</code> 将 <code>postgresql</code> 数据存储在当前文件夹下，而不是以卷数据形式存在，<code>./postgresdata:/var/lib/postgresql/data</code></p></li></ol></blockquote><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&quot;3&quot;</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">invidious:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">quay.io/invidious/invidious:latest</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">unless-stopped</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">invidious</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;5000:3000&quot;</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="attr">INVIDIOUS_CONFIG:</span> <span class="string">|</span></span><br><span class="line"><span class="string">        db:</span></span><br><span class="line"><span class="string">          dbname: invidious</span></span><br><span class="line"><span class="string">          user: kemal</span></span><br><span class="line"><span class="string">          password: kemal</span></span><br><span class="line"><span class="string">          host: invidious-db</span></span><br><span class="line"><span class="string">          port: 5432</span></span><br><span class="line"><span class="string">        check_tables: true</span></span><br><span class="line"><span class="string"></span>    <span class="attr">healthcheck:</span></span><br><span class="line">      <span class="attr">test:</span> <span class="string">wget</span> <span class="string">-nv</span> <span class="string">--tries=1</span> <span class="string">--spider</span> <span class="string">http://127.0.0.1:3000/api/v1/comments/jNQXAC9IVRw</span> <span class="string">||</span> <span class="string">exit</span> <span class="number">1</span></span><br><span class="line">      <span class="attr">interval:</span> <span class="string">30s</span></span><br><span class="line">      <span class="attr">timeout:</span> <span class="string">5s</span></span><br><span class="line">      <span class="attr">retries:</span> <span class="number">2</span></span><br><span class="line">    <span class="attr">logging:</span></span><br><span class="line">      <span class="attr">options:</span></span><br><span class="line">        <span class="attr">max-size:</span> <span class="string">&quot;1G&quot;</span></span><br><span class="line">        <span class="attr">max-file:</span> <span class="string">&quot;4&quot;</span></span><br><span class="line">    <span class="attr">depends_on:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">invidious-db</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">invidious-db:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">docker.io/library/postgres:14</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">invidious_postgres</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">unless-stopped</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./postgresdata:/var/lib/postgresql/data</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./config/sql:/config/sql</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./docker/init-invidious-db.sh:/docker-entrypoint-initdb.d/init-invidious-db.sh</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="attr">POSTGRES_DB:</span> <span class="string">invidious</span></span><br><span class="line">      <span class="attr">POSTGRES_USER:</span> <span class="string">kemal</span></span><br><span class="line">      <span class="attr">POSTGRES_PASSWORD:</span> <span class="string">kemal</span></span><br><span class="line">    <span class="attr">healthcheck:</span></span><br><span class="line">      <span class="attr">test:</span> [<span class="string">&quot;CMD-SHELL&quot;</span>, <span class="string">&quot;pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB&quot;</span>]</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose up -d</span><br></pre></td></tr></table></figure><blockquote><p>打开 <code>5000</code> 端口</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ufw allow 5000/tcp</span><br></pre></td></tr></table></figure><hr><h2 id="一键脚本"><a href="#一键脚本" class="headerlink" title="一键脚本"></a>一键脚本</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#! /bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">red</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;\033[31m\033[01m<span class="variable">$1</span>\033[0m&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">green</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;\033[32m\033[01m<span class="variable">$1</span>\033[0m&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">yellow</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;\033[33m\033[01m<span class="variable">$1</span>\033[0m&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Invidious</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">invidious_install</span></span>()&#123;</span><br><span class="line"><span class="keyword">if</span> nc -z localhost 5000; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot; 5000 端口已经被占用，请检查相关进程。&quot;</span></span><br><span class="line"><span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> docker ps -a --format <span class="string">&quot;&#123;&#123;.Names&#125;&#125;&quot;</span> | grep -q <span class="string">&quot;invidious&quot;</span> &amp;&amp; docker ps -a --format <span class="string">&quot;&#123;&#123;.Names&#125;&#125;&quot;</span> | grep -q <span class="string">&quot;invidious_postgres&quot;</span>; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;invidious 和 invidious_postgres 容器名已经被占用&quot;</span></span><br><span class="line"><span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> [ ! -d /root/docker/Invidious ]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">mkdir</span> -p /root/docker/Invidious</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">cd</span> /root/docker/Invidious</span><br><span class="line"><span class="keyword">if</span> [ -f <span class="string">&quot;docker-compose.yml&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">rm</span> docker-compose.yml</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">cat</span> &lt;&lt;<span class="string">EOF &gt; docker-compose.yml</span></span><br><span class="line"><span class="string">version: &quot;3&quot;</span></span><br><span class="line"><span class="string">services:</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  invidious:</span></span><br><span class="line"><span class="string">    image: quay.io/invidious/invidious:latest</span></span><br><span class="line"><span class="string">    restart: unless-stopped</span></span><br><span class="line"><span class="string">    container_name: invidious</span></span><br><span class="line"><span class="string">    ports:</span></span><br><span class="line"><span class="string">      - &quot;5000:3000&quot;</span></span><br><span class="line"><span class="string">    environment:</span></span><br><span class="line"><span class="string">      INVIDIOUS_CONFIG: |</span></span><br><span class="line"><span class="string">        db:</span></span><br><span class="line"><span class="string">          dbname: invidious</span></span><br><span class="line"><span class="string">          user: kemal</span></span><br><span class="line"><span class="string">          password: kemal</span></span><br><span class="line"><span class="string">          host: invidious-db</span></span><br><span class="line"><span class="string">          port: 5432</span></span><br><span class="line"><span class="string">        check_tables: true</span></span><br><span class="line"><span class="string">    healthcheck:</span></span><br><span class="line"><span class="string">      test: wget -nv --tries=1 --spider http://127.0.0.1:3000/api/v1/comments/jNQXAC9IVRw || exit 1</span></span><br><span class="line"><span class="string">      interval: 30s</span></span><br><span class="line"><span class="string">      timeout: 5s</span></span><br><span class="line"><span class="string">      retries: 2</span></span><br><span class="line"><span class="string">    logging:</span></span><br><span class="line"><span class="string">      options:</span></span><br><span class="line"><span class="string">        max-size: &quot;1G&quot;</span></span><br><span class="line"><span class="string">        max-file: &quot;4&quot;</span></span><br><span class="line"><span class="string">    depends_on:</span></span><br><span class="line"><span class="string">      - invidious-db</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  invidious-db:</span></span><br><span class="line"><span class="string">    image: docker.io/library/postgres:14</span></span><br><span class="line"><span class="string">    container_name: invidious_postgres</span></span><br><span class="line"><span class="string">    restart: unless-stopped</span></span><br><span class="line"><span class="string">    volumes:</span></span><br><span class="line"><span class="string">      - ./postgresdata:/var/lib/postgresql/data</span></span><br><span class="line"><span class="string">      - ./config/sql:/config/sql</span></span><br><span class="line"><span class="string">      - ./docker/init-invidious-db.sh:/docker-entrypoint-initdb.d/init-invidious-db.sh</span></span><br><span class="line"><span class="string">    environment:</span></span><br><span class="line"><span class="string">      POSTGRES_DB: invidious</span></span><br><span class="line"><span class="string">      POSTGRES_USER: kemal</span></span><br><span class="line"><span class="string">      POSTGRES_PASSWORD: kemal</span></span><br><span class="line"><span class="string">    healthcheck:</span></span><br><span class="line"><span class="string">      test: [&quot;CMD-SHELL&quot;, &quot;pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB&quot;]</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line">docker-compose up -d</span><br><span class="line">ufw allow 5000/tcp</span><br><span class="line">yellow <span class="string">&quot;-----------------------------------------------&quot;</span></span><br><span class="line">green <span class="string">&quot; Web 端口：5000&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">green <span class="string">&quot; Docker IP = <span class="subst">$(ip addr show docker0 | grep &#x27;inet\b&#x27; | awk &#x27;&#123;print $2&#125;&#x27; | cut -d &#x27;/&#x27; -f1)</span>:5000&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">green <span class="string">&quot; Web 网址  = http://<span class="subst">$(ifconfig $(ifconfig | grep -oP &#x27;enp\w+&#x27;)</span> | grep &#x27;inet &#x27; | awk &#x27;&#123;print <span class="variable">$2</span>&#125;&#x27;):5000&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">green <span class="string">&quot; Invidious 安装完毕！&quot;</span></span><br><span class="line">yellow <span class="string">&quot;-----------------------------------------------&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">invidious_install</span><br></pre></td></tr></table></figure><hr><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>一个简洁干净的 <code>Invidious</code> 就此搭建完成。 </p><p>可以在不开代理的情况下，愉快的观看 <code>Youtube</code>。</p><p>公开的 <code>Invidious</code>  <a href="https://docs.invidious.io/instances/">实例网站</a>。</p><p><img src="/images/image-20230606185108244.png" alt="image-20230606185108244"></p><p><img src="/images/image-20230606191223871.png" alt="image-20230606191223871"></p><p><img src="/images/image-20230606190454866.png" alt="image-20230606190454866"></p><hr><p>官方网站：<a href="https://invidious.io/">https://invidious.io/</a></p><p>官方文档：<a href="https://docs.invidious.io/installation/">https://docs.invidious.io/installation/</a></p><hr><p></p>]]></content>
      
      
      <categories>
          
          <category> Docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> invidious </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nginx Proxy Manager —— 反向代理</title>
      <link href="/2023/06/06/Nginx-Proxy-Manager/"/>
      <url>/2023/06/06/Nginx-Proxy-Manager/</url>
      
        <content type="html"><![CDATA[<h1 id="Nginx-Proxy-Manager"><a href="#Nginx-Proxy-Manager" class="headerlink" title="Nginx Proxy Manager"></a>Nginx Proxy Manager</h1><blockquote><p>轻松安全地公开您的 Web 服务</p></blockquote><hr><h2 id="Docker-Compose"><a href="#Docker-Compose" class="headerlink" title="Docker-Compose"></a>Docker-Compose</h2><blockquote><p>创建 <code>docker-compose.yml</code> 文件</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nano docker-compose.yml</span><br></pre></td></tr></table></figure><blockquote><ol><li>初始账号 <code>admin@example.com</code></li><li>初始密码 <code>changeme</code></li></ol></blockquote><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&#x27;3.8&#x27;</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">app:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">&#x27;jc21/nginx-proxy-manager:latest&#x27;</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">npm</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">unless-stopped</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&#x27;80:80&#x27;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&#x27;81:81&#x27;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&#x27;443:443&#x27;</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./data:/data</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./letsencrypt:/etc/letsencrypt</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose up -d</span><br></pre></td></tr></table></figure><blockquote><p>开启 <code>80</code> <code>81</code> <code>443</code> 端口</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ufw allow 80/tcp</span><br><span class="line">ufw allow 81/tcp</span><br><span class="line">ufw allow 443/tcp</span><br></pre></td></tr></table></figure><hr><h2 id="部署静态网站"><a href="#部署静态网站" class="headerlink" title="部署静态网站"></a>部署静态网站</h2><blockquote><p>进入挂载 <code>data</code> 文件夹下，新建你要创建的静态网站文件夹 <code>docs.rahn.top</code></p><p>来到 <code>Edit Proxy Host</code> — <code>Advanced</code> 输入以下内容，就完成了静态网站的搭建 </p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">location / &#123;</span><br><span class="line">  root  /data/docs.rahn.top; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="登陆限制功能"><a href="#登陆限制功能" class="headerlink" title="登陆限制功能"></a>登陆限制功能</h2><hr><h2 id="一键脚本"><a href="#一键脚本" class="headerlink" title="一键脚本"></a>一键脚本</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#! /bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">red</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;\033[31m\033[01m<span class="variable">$1</span>\033[0m&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">green</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;\033[32m\033[01m<span class="variable">$1</span>\033[0m&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">yellow</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;\033[33m\033[01m<span class="variable">$1</span>\033[0m&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Nginx Proxy Manager</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> nginx-proxy-<span class="function"><span class="title">manager_install</span></span>()&#123;</span><br><span class="line"><span class="keyword">if</span> nc -z localhost 80 || nc -z localhost 81 || nc -z localhost 443; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;端口 80、81 或 443 已经被占用，请检查相关进程。&quot;</span></span><br><span class="line"><span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> docker ps -a --format <span class="string">&quot;&#123;&#123;.Names&#125;&#125;&quot;</span> | grep -q <span class="string">&quot;npm&quot;</span>; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;容器名 npm 被占用&quot;</span></span><br><span class="line"><span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> [ ! -d /root/docker/Nginx-Proxy-Manager ]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">mkdir</span> -p /root/docker/Nginx-Proxy-Manager</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">cd</span> /root/docker/Nginx-Proxy-Manager</span><br><span class="line"><span class="keyword">if</span> [ -f <span class="string">&quot;docker-compose.yml&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">rm</span> docker-compose.yml</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">cat</span> &lt;&lt;<span class="string">EOF &gt; docker-compose.yml</span></span><br><span class="line"><span class="string">version: &#x27;3.3&#x27;</span></span><br><span class="line"><span class="string">services:</span></span><br><span class="line"><span class="string">  app:</span></span><br><span class="line"><span class="string">    image: &#x27;jc21/nginx-proxy-manager:latest&#x27;</span></span><br><span class="line"><span class="string">    container_name: npm</span></span><br><span class="line"><span class="string">    restart: unless-stopped</span></span><br><span class="line"><span class="string">    ports:</span></span><br><span class="line"><span class="string">      - &#x27;80:80&#x27;</span></span><br><span class="line"><span class="string">      - &#x27;81:81&#x27;</span></span><br><span class="line"><span class="string">      - &#x27;443:443&#x27;</span></span><br><span class="line"><span class="string">    volumes:</span></span><br><span class="line"><span class="string">      - ./data:/data</span></span><br><span class="line"><span class="string">      - ./letsencrypt:/etc/letsencrypt</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line">docker-compose up -d</span><br><span class="line">ufw allow 80/tcp</span><br><span class="line">ufw allow 81/tcp</span><br><span class="line">ufw allow 443/tcp</span><br><span class="line">yellow <span class="string">&quot;-----------------------------------------------&quot;</span></span><br><span class="line">green <span class="string">&quot; Web 端口：80 81 443&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">green <span class="string">&quot; Docker IP = <span class="subst">$(ip addr show docker0 | grep &#x27;inet\b&#x27; | awk &#x27;&#123;print $2&#125;&#x27; | cut -d &#x27;/&#x27; -f1)</span>:81&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">green <span class="string">&quot; 服务器 IP = http://<span class="subst">$(ifconfig $(ifconfig | grep -oP &#x27;enp\w+&#x27;)</span> | grep &#x27;inet &#x27; | awk &#x27;&#123;print <span class="variable">$2</span>&#125;&#x27;):81&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">green <span class="string">&quot; Nginx Proxy Manager 安装完毕！&quot;</span></span><br><span class="line">yellow <span class="string">&quot;-----------------------------------------------&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">start_menu</span></span>()&#123;</span><br><span class="line">clear</span><br><span class="line">yellow <span class="string">&quot;-----------------------------------------------&quot;</span></span><br><span class="line">red    <span class="string">&quot; Nginx Proxy Manager —— 反向代理&quot;</span></span><br><span class="line">yellow <span class="string">&quot;-----------------------------------------------&quot;</span></span><br><span class="line">green  <span class="string">&quot; 1. Nginx Proxy Manager 安装&quot;</span></span><br><span class="line">yellow <span class="string">&quot;-----------------------------------------------&quot;</span></span><br><span class="line">red    <span class="string">&quot; 0. 退出脚本&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line"><span class="built_in">read</span> -p <span class="string">&quot;请输入数字:&quot;</span> menuNumberInput</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$menuNumberInput</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">        1 )</span><br><span class="line">            nginx-proxy-manager_install</span><br><span class="line">;;</span><br><span class="line">        0 )</span><br><span class="line">            <span class="built_in">exit</span></span><br><span class="line">;;</span><br><span class="line">        * )</span><br><span class="line">            clear</span><br><span class="line">            red <span class="string">&quot;请输入正确数字!&quot;</span></span><br><span class="line">            start_menu</span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line">&#125;</span><br><span class="line">start_menu</span><br></pre></td></tr></table></figure><hr><p>官方： <a href="https://nginxproxymanager.com/">https://nginxproxymanager.com/</a></p><hr><p></p>]]></content>
      
      
      <categories>
          
          <category> Docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Nginx Proxy Manager </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Searxng —— 自建开源搜索引擎</title>
      <link href="/2023/06/06/Searxng/"/>
      <url>/2023/06/06/Searxng/</url>
      
        <content type="html"><![CDATA[<h1 id="Searxng-——-开源搜索引擎"><a href="#Searxng-——-开源搜索引擎" class="headerlink" title="Searxng —— 开源搜索引擎"></a>Searxng —— 开源搜索引擎</h1><blockquote><p>一个基于 Python 的完全开源免费搜索引擎平台，为你提供来自 Google、Bing、Yahoo 等 70 多种各大视频、图片、搜索、磁力等网站结果展示，并对搜索结果进行优化，同时不会存储你的任何搜索信息。</p></blockquote><hr><h2 id="Docker-Compose"><a href="#Docker-Compose" class="headerlink" title="Docker-Compose"></a>Docker-Compose</h2><blockquote><p>创建 <code>docker-compose.yml</code></p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nano docker-compose.yml</span><br></pre></td></tr></table></figure><blockquote><ol><li><p><code>&quot;19723:8080&quot;</code> 中 <code>19723</code> 可以修改为你所需要的端口</p></li><li><p><code>SEARXNG_BASE_URL=https://rahn.top</code> 将 <code>https://rahn.top</code> 修改为你搜索引擎的网站</p></li></ol></blockquote><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&#x27;3.7&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">redis:</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">redis</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">&quot;redis:alpine&quot;</span></span><br><span class="line">    <span class="attr">command:</span> <span class="string">redis-server</span> <span class="string">--save</span> <span class="string">&quot;&quot;</span> <span class="string">--appendonly</span> <span class="string">&quot;no&quot;</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">unless-stopped</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">searxng</span></span><br><span class="line">    <span class="attr">tmpfs:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/var/lib/redis</span></span><br><span class="line">    <span class="attr">cap_drop:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">ALL</span></span><br><span class="line">    <span class="attr">cap_add:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">SETGID</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">SETUID</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">DAC_OVERRIDE</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">searxng:</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">searxng</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">searxng/searxng:latest</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">unless-stopped</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">searxng</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">     <span class="bullet">-</span> <span class="string">&quot;19723:8080&quot;</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./Searxng:/etc/searxng:rw</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">SEARXNG_BASE_URL=https://rahn.top</span></span><br><span class="line">    <span class="attr">cap_drop:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">ALL</span></span><br><span class="line">    <span class="attr">cap_add:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">CHOWN</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">SETGID</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">SETUID</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">DAC_OVERRIDE</span></span><br><span class="line">    <span class="attr">logging:</span></span><br><span class="line">      <span class="attr">driver:</span> <span class="string">&quot;json-file&quot;</span></span><br><span class="line">      <span class="attr">options:</span></span><br><span class="line">        <span class="attr">max-size:</span> <span class="string">&quot;1m&quot;</span></span><br><span class="line">        <span class="attr">max-file:</span> <span class="string">&quot;1&quot;</span></span><br><span class="line"><span class="attr">networks:</span></span><br><span class="line">  <span class="attr">searxng:</span></span><br><span class="line">    <span class="attr">ipam:</span></span><br><span class="line">      <span class="attr">driver:</span> <span class="string">default</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose up -d</span><br></pre></td></tr></table></figure><blockquote><p>打开 <code>19723</code> 端口</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ufw allow 19723/tcp</span><br></pre></td></tr></table></figure><hr><p>官方： <a href="https://docs.searxng.org/">https://docs.searxng.org/</a></p><p>参考： <a href="https://blog.laoda.de/archives/docker-compose-install-searxng">https://blog.laoda.de/archives/docker-compose-install-searxng</a></p><p>Github: <a href="https://github.com/searxng/searxng-docker/tree/master">https://github.com/searxng/searxng-docker/tree/master</a></p><hr><p></p>]]></content>
      
      
      <categories>
          
          <category> Docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> searxng </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Jellyfin —— 开源媒体系统</title>
      <link href="/2023/06/06/Jellyfin/"/>
      <url>/2023/06/06/Jellyfin/</url>
      
        <content type="html"><![CDATA[<h1 id="Jellyfin-——-开源媒体系统"><a href="#Jellyfin-——-开源媒体系统" class="headerlink" title="Jellyfin —— 开源媒体系统"></a>Jellyfin —— 开源媒体系统</h1><blockquote><p>nyanmisaka&#x2F;jellyfin 中国特供版 Jellyfin 。</p></blockquote><hr><h2 id="Docker-Compose"><a href="#Docker-Compose" class="headerlink" title="Docker-Compose"></a>Docker-Compose</h2><blockquote><p>创建  <code>docker-compose.yml</code>  文件</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nano docker-compose.yml</span><br></pre></td></tr></table></figure><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&#x27;3.3&#x27;</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">    <span class="attr">jellyfin:</span></span><br><span class="line">        <span class="attr">container_name:</span> <span class="string">jellyfin</span></span><br><span class="line">        <span class="attr">ports:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">&#x27;8096:8096&#x27;</span></span><br><span class="line">        <span class="attr">volumes:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">&#x27;./config:/config&#x27;</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">&#x27;./cache:/cache&#x27;</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">&#x27;./media:/media&#x27;</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">&#x27;./movies:/movies&#x27;</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">&#x27;./tvshows:/tvshows&#x27;</span></span><br><span class="line">        <span class="attr">environment:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">TZ=Asia/Shanghai</span></span><br><span class="line">        <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">nyanmisaka/jellyfin</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose up -d</span><br></pre></td></tr></table></figure><blockquote><p>开启 <code>8096</code> 端口</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ufw allow 8096/tcp</span><br></pre></td></tr></table></figure><hr><h2 id="Docker-Compose-修改版"><a href="#Docker-Compose-修改版" class="headerlink" title="Docker-Compose 修改版"></a>Docker-Compose 修改版</h2><blockquote><p>在 <code>nyanmisaka/jellyfin</code> 内创建了一个 <code>animation</code> 文件夹 </p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">version: <span class="string">&#x27;3.3&#x27;</span></span><br><span class="line">services:</span><br><span class="line">    jellyfin:</span><br><span class="line">        container_name: jellyfin</span><br><span class="line">        ports:</span><br><span class="line">            - <span class="string">&#x27;8096:8096&#x27;</span></span><br><span class="line">        volumes:</span><br><span class="line">            - <span class="string">&#x27;./config:/config&#x27;</span></span><br><span class="line">            - <span class="string">&#x27;./cache:/cache&#x27;</span></span><br><span class="line">            - <span class="string">&#x27;./media:/media&#x27;</span></span><br><span class="line">            - <span class="string">&#x27;./movies:/movies&#x27;</span></span><br><span class="line">            - <span class="string">&#x27;./tvshows:/tvshows&#x27;</span></span><br><span class="line">            - <span class="string">&#x27;./animation:/animation&#x27;</span></span><br><span class="line">        environment:</span><br><span class="line">            - TZ=Asia/Shanghai</span><br><span class="line">        restart: always</span><br><span class="line">        image: rahn2029/jellyfin</span><br></pre></td></tr></table></figure><hr><p>Github 官方网站：<a href="https://hub.docker.com/r/nyanmisaka/jellyfin">https://hub.docker.com/r/nyanmisaka/jellyfin</a></p><hr><p></p>]]></content>
      
      
      <categories>
          
          <category> Docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> jellyfin </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vaultwarden —— 密码管理器</title>
      <link href="/2023/06/06/vaultwarden/"/>
      <url>/2023/06/06/vaultwarden/</url>
      
        <content type="html"><![CDATA[<h1 id="Vaultwarden"><a href="#Vaultwarden" class="headerlink" title="Vaultwarden"></a>Vaultwarden</h1><blockquote><p>用 Rust 编写的非官方 Bitwarden 兼容服务器，以前称为 bitwarden_rs</p></blockquote><hr><h2 id="Docker-Run"><a href="#Docker-Run" class="headerlink" title="Docker Run"></a>Docker Run</h2><blockquote><p>创建容器</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker pull vaultwarden/server:latest</span><br><span class="line">docker run -it -d --name vaultwarden -v /root/docker/vaultwarden/:/data/ -p 8000:80 vaultwarden/server:latest</span><br></pre></td></tr></table></figure><blockquote><p>停止容器并删除</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker stop vaultwarden &amp;&amp; docker <span class="built_in">rm</span> vaultwarden</span><br></pre></td></tr></table></figure><hr><h2 id="Docker-Compose"><a href="#Docker-Compose" class="headerlink" title="Docker-Compose"></a>Docker-Compose</h2><blockquote><p>创建 <code>docker-compose.yml</code> 文件</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nano docker-compose.yml</span><br></pre></td></tr></table></figure><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&#x27;3.3&#x27;</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">    <span class="attr">server:</span></span><br><span class="line">        <span class="attr">container_name:</span> <span class="string">vaultwarden</span></span><br><span class="line">        <span class="attr">restart:</span> <span class="string">unless-stopped</span></span><br><span class="line">        <span class="attr">environment:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">SIGNUPS_ALLOWED=true</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">WEBSOCKET_ENABLED=true</span></span><br><span class="line">        <span class="attr">volumes:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">&#x27;./data/:/data/&#x27;</span></span><br><span class="line">        <span class="attr">ports:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">&#x27;8000:80&#x27;</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">&#x27;vaultwarden/server:latest&#x27;</span></span><br></pre></td></tr></table></figure><blockquote><p><code>6666:80</code> 为网页端口</p><p><code>SIGNUPS_ALLOWED=true</code> 注册完毕后，可以将注册关闭</p><p><code>SIGNUPS_ALLOWED=false</code> 代表禁止注册</p><p><code>WEBSOCKET_ENABLED=true</code> 此浏览器需要 HTTPS 才能使用 Web 密码库</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose up -d</span><br></pre></td></tr></table></figure><blockquote><p>打开 <code>8000</code> 端口</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ufw allow 8000/tcp</span><br></pre></td></tr></table></figure><hr><h2 id="一键脚本"><a href="#一键脚本" class="headerlink" title="一键脚本"></a>一键脚本</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#! /bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">red</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;\033[31m\033[01m<span class="variable">$1</span>\033[0m&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">green</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;\033[32m\033[01m<span class="variable">$1</span>\033[0m&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">yellow</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;\033[33m\033[01m<span class="variable">$1</span>\033[0m&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Vaultwarden</span></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">vaultwarden_install</span></span>()&#123;</span><br><span class="line"><span class="keyword">if</span> nc -z localhost 8000; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot; 8000 端口已经被占用，请检查相关进程。&quot;</span></span><br><span class="line"><span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> docker ps -a --format <span class="string">&quot;&#123;&#123;.Names&#125;&#125;&quot;</span> | grep -q <span class="string">&quot;vaultwarden&quot;</span>; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot; vaultwarden 容器名已经被占用&quot;</span></span><br><span class="line"><span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> [ ! -d /root/docker/Vaultwarden ]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">mkdir</span> -p /root/docker/Vaultwarden</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">cd</span> /root/docker/Vaultwarden</span><br><span class="line"><span class="keyword">if</span> [ -f <span class="string">&quot;docker-compose.yml&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">rm</span> docker-compose.yml</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">cat</span> &lt;&lt;<span class="string">EOF &gt; docker-compose.yml</span></span><br><span class="line"><span class="string">version: &#x27;3.3&#x27;</span></span><br><span class="line"><span class="string">services:</span></span><br><span class="line"><span class="string">    server:</span></span><br><span class="line"><span class="string">        container_name: vaultwarden</span></span><br><span class="line"><span class="string">        restart: unless-stopped</span></span><br><span class="line"><span class="string">        environment:</span></span><br><span class="line"><span class="string">            - SIGNUPS_ALLOWED=true</span></span><br><span class="line"><span class="string">            - WEBSOCKET_ENABLED=true</span></span><br><span class="line"><span class="string">        volumes:</span></span><br><span class="line"><span class="string">            - &#x27;./data/:/data/&#x27;</span></span><br><span class="line"><span class="string">        ports:</span></span><br><span class="line"><span class="string">            - &#x27;8000:80&#x27;</span></span><br><span class="line"><span class="string">        image: &#x27;vaultwarden/server:latest&#x27;</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line">docker-compose up -d</span><br><span class="line">ufw allow 8000/tcp</span><br><span class="line">yellow <span class="string">&quot;-----------------------------------------------&quot;</span></span><br><span class="line">green <span class="string">&quot; Web 端口：8000&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">green <span class="string">&quot; Docker IP = <span class="subst">$(ip addr show docker0 | grep &#x27;inet\b&#x27; | awk &#x27;&#123;print $2&#125;&#x27; | cut -d &#x27;/&#x27; -f1)</span>:8000&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">green <span class="string">&quot; 服务器 IP = http://<span class="subst">$(ifconfig $(ifconfig | grep -oP &#x27;enp\w+&#x27;)</span> | grep &#x27;inet &#x27; | awk &#x27;&#123;print <span class="variable">$2</span>&#125;&#x27;):8000&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">green <span class="string">&quot; vaultwarden 安装完毕！&quot;</span></span><br><span class="line">yellow <span class="string">&quot;-----------------------------------------------&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">vaultwarden_install</span><br></pre></td></tr></table></figure><hr><p>Bitwarden: <a href="https://bitwarden.com/">https://bitwarden.com/</a></p><p>Vaultwarden: <a href="https://github.com/dani-garcia/vaultwarden">https://github.com/dani-garcia/vaultwarden</a></p><hr><p></p>]]></content>
      
      
      <categories>
          
          <category> Docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vaultwarden </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Tachidesk Server —— 漫画阅读服务</title>
      <link href="/2023/06/06/Tachidesk-Server/"/>
      <url>/2023/06/06/Tachidesk-Server/</url>
      
        <content type="html"><![CDATA[<h1 id="Tachidesk-Server"><a href="#Tachidesk-Server" class="headerlink" title="Tachidesk Server"></a>Tachidesk Server</h1><blockquote><p>一个免费且开源的漫画阅读服务，运行为 <a href="https://tachiyomi.org/">Tachiyomi</a> 构建的扩展。</p></blockquote><hr><h2 id="Docker-Run"><a href="#Docker-Run" class="headerlink" title="Docker Run"></a>Docker Run</h2><blockquote><p>创建容器并运行</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -itd -p 4567:4567 --name tachidesk-server rahn2029/tachidesk-server:2.0</span><br></pre></td></tr></table></figure><blockquote><p>停止容器并删除</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker stop tachidesk-server &amp;&amp; docker rm tachidesk-server</span><br></pre></td></tr></table></figure><blockquote><p>查看容器日志</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker logs tachidesk-server</span><br></pre></td></tr></table></figure><hr><h2 id="Docker-Compose"><a href="#Docker-Compose" class="headerlink" title="Docker Compose"></a>Docker Compose</h2><blockquote><p>官方版本的 <code>docker-compose.yaml</code> 文件</p></blockquote><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">version:</span> <span class="string">&#x27;3.7&#x27;</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">suwayomi:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">tachidesk:new</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">TZ=Etc/UTC</span> <span class="comment"># Use TZ database name from https://en.wikipedia.org/wiki/List_of_tz_database_time_zones</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">DEBUG=true</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">BIND_IP=0.0.0.0</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">BIND_PORT=4567</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">SOCKS_PROXY_ENABLED=false</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">DOWNLOAD_AS_CBZ=true</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">MAX_PARALLEL_UPDATE=3</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">BASIC_AUTH_ENABLED=true</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">BASIC_AUTH_USERNAME=manga</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">BASIC_AUTH_PASSWORD=hello123</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./data:/home/suwayomi/.local/share/Tachidesk</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;4567:4567&quot;</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">on-failure:3</span></span><br></pre></td></tr></table></figure><blockquote><ol><li>要将数据挂载进行保存，需要将容器内部的文件复制到当前位置的 <code>data</code> 目录下</li><li>添加权限，如果没有权限，文件夹会被拒绝访问，发生错误</li><li>停止容器并删除</li><li>使用 <code>docker-compose</code> 进行管理</li></ol></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> -p /root/docker/Tachidesk-Server</span><br><span class="line"><span class="built_in">cd</span> /root/docker/Tachidesk-Server</span><br><span class="line"></span><br><span class="line">docker run -itd -p 4567:4567 --name tachidesk-server ghcr.io/suwayomi/tachidesk:stable</span><br><span class="line"></span><br><span class="line">docker <span class="built_in">cp</span> tachidesk-server:/home/suwayomi/.local/share/Tachidesk $(<span class="built_in">pwd</span>)/data</span><br><span class="line"></span><br><span class="line"><span class="built_in">chmod</span> -R 777 data</span><br><span class="line"></span><br><span class="line">docker stop tachidesk-server &amp;&amp; docker <span class="built_in">rm</span> tachidesk-server</span><br></pre></td></tr></table></figure><blockquote><p>创建 <code>docker-compose.yaml</code>  文件</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nano docker-compose.yaml</span><br></pre></td></tr></table></figure><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">version:</span> <span class="string">&quot;2.1&quot;</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">suwayomi:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">ghcr.io/suwayomi/tachidesk:stable</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">tachidesk-server</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">TZ=Asia/Shanghai</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./data:/home/suwayomi/.local/share/Tachidesk</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">4567</span><span class="string">:4567</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">unless-stopped</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose up -d</span><br></pre></td></tr></table></figure><hr><blockquote><p>个人版本的 <code>docker-compose.yaml</code> 文件</p><p>不再需要设置权限，启动更快</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> -p /root/docker/Tachidesk-Server</span><br><span class="line"><span class="built_in">cd</span> /root/docker/Tachidesk-Server</span><br><span class="line"></span><br><span class="line">docker run -d -p 4567:4567 --name tachidesk-server rahn2029/tachidesk-server:2.0</span><br><span class="line"></span><br><span class="line">docker <span class="built_in">cp</span> tachidesk-server:/root/.local/share/Tachidesk $(<span class="built_in">pwd</span>)/data</span><br><span class="line"></span><br><span class="line">docker stop tachidesk-server &amp;&amp; docker <span class="built_in">rm</span> tachidesk-server</span><br></pre></td></tr></table></figure><blockquote><p>创建 <code>docker-compose.yaml</code>  文件</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nano docker-compose.yaml</span><br></pre></td></tr></table></figure><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">version:</span> <span class="string">&quot;2.1&quot;</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">suwayomi:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">rahn2029/tachidesk-server:2.0</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">tachidesk-server</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">TZ=Asia/Shanghai</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./data:/root/.local/share/Tachidesk</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">4567</span><span class="string">:4567</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">unless-stopped</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose up -d</span><br></pre></td></tr></table></figure><hr><h2 id="环境变量"><a href="#环境变量" class="headerlink" title="环境变量"></a>环境变量</h2><blockquote><p>官方版本的环境变量</p></blockquote><table><thead><tr><th align="center">变量</th><th align="center">默认值</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center"><strong>TZ</strong></td><td align="center"><code>Etc/UTC</code></td><td align="center">容器时区</td></tr><tr><td align="center"><strong>BIND_IP</strong></td><td align="center"><code>0.0.0.0</code></td><td align="center">容器内监听的 IP</td></tr><tr><td align="center"><strong>BIND_PORT</strong></td><td align="center"><code>4567</code></td><td align="center">Suwayomi 将监听的端口</td></tr><tr><td align="center"><strong>SOCKS_PROXY_ENABLED</strong></td><td align="center"><code>false</code></td><td align="center">Suwayomi 是否将通过 SOCKS5 代理连接</td></tr><tr><td align="center"><strong>SOCKS_PROXY_HOST</strong></td><td align="center"><code>&quot;&quot;</code></td><td align="center">SOCKS5 代理的 TCP 主机</td></tr><tr><td align="center"><strong>SOCKS_PROXY_PORT</strong></td><td align="center"><code>&quot;&quot;</code></td><td align="center">SOCKS5 代理的端口</td></tr><tr><td align="center"><strong>DOWNLOAD_AS_CBZ</strong></td><td align="center"><code>false</code></td><td align="center">Suwayomi 是否应将漫画以 CBZ 格式保存到磁盘</td></tr><tr><td align="center"><strong>MAX_PARALLEL_UPDATE</strong></td><td align="center"><code>10</code></td><td align="center">可以同时更新多少个源</td></tr><tr><td align="center"><strong>BASIC_AUTH_ENABLED</strong></td><td align="center"><code>false</code></td><td align="center">Suwayomi 是否需要 HTTP Basic Auth 才能进入</td></tr><tr><td align="center"><strong>BASIC_AUTH_USERNAME</strong></td><td align="center"><code>&quot;&quot;</code></td><td align="center">登录 Suwayomi 的用户名</td></tr><tr><td align="center"><strong>BASIC_AUTH_PASSWORD</strong></td><td align="center"><code>&quot;&quot;</code></td><td align="center">登录 Suwayomi 的密码</td></tr><tr><td align="center"><strong>DEBUG</strong></td><td align="center"><code>true</code></td><td align="center">如果启用了额外的日志记录</td></tr></tbody></table><hr><h2 id="DockerFile"><a href="#DockerFile" class="headerlink" title="DockerFile"></a>DockerFile</h2><blockquote><p>官方版本的 <code>DockerFile</code> 文件</p></blockquote><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">FROM</span> eclipse-temurin:<span class="number">11</span>-jre-jammy</span><br><span class="line"></span><br><span class="line"><span class="keyword">ARG</span> BUILD_DATE</span><br><span class="line"><span class="keyword">ARG</span> TACHIDESK_RELEASE_TAG</span><br><span class="line"><span class="keyword">ARG</span> TACHIDESK_FILENAME</span><br><span class="line"><span class="keyword">ARG</span> TACHIDESK_RELEASE_DOWNLOAD_URL</span><br><span class="line"><span class="keyword">ARG</span> TACHIDESK_DOCKER_GIT_COMMIT</span><br><span class="line"></span><br><span class="line"><span class="keyword">LABEL</span><span class="language-bash"> maintainer=<span class="string">&quot;suwayomi&quot;</span> \</span></span><br><span class="line"><span class="language-bash">      org.opencontainers.image.title=<span class="string">&quot;Suwayomi Docker&quot;</span> \</span></span><br><span class="line"><span class="language-bash">      org.opencontainers.image.authors=<span class="string">&quot;https://github.com/suwayomi&quot;</span> \</span></span><br><span class="line"><span class="language-bash">      org.opencontainers.image.url=<span class="string">&quot;https://github.com/suwayomi/docker-tachidesk/pkgs/container/tachidesk&quot;</span> \</span></span><br><span class="line"><span class="language-bash">      org.opencontainers.image.source=<span class="string">&quot;https://github.com/suwayomi/docker-tachidesk&quot;</span> \</span></span><br><span class="line"><span class="language-bash">      org.opencontainers.image.description=<span class="string">&quot;This image is used to start suwayomi server in a container&quot;</span> \</span></span><br><span class="line"><span class="language-bash">      org.opencontainers.image.vendor=<span class="string">&quot;suwayomi&quot;</span> \</span></span><br><span class="line"><span class="language-bash">      org.opencontainers.image.created=<span class="variable">$BUILD_DATE</span> \</span></span><br><span class="line"><span class="language-bash">      org.opencontainers.image.version=<span class="variable">$TACHIDESK_RELEASE_TAG</span> \</span></span><br><span class="line"><span class="language-bash">      tachidesk.docker_commit=<span class="variable">$TACHIDESK_DOCKER_GIT_COMMIT</span> \</span></span><br><span class="line"><span class="language-bash">      tachidesk.release_tag=<span class="variable">$TACHIDESK_RELEASE_TAG</span> \</span></span><br><span class="line"><span class="language-bash">      tachidesk.filename=<span class="variable">$TACHIDESK_FILENAME</span> \</span></span><br><span class="line"><span class="language-bash">      download_url=<span class="variable">$TACHIDESK_RELEASE_DOWNLOAD_URL</span> \</span></span><br><span class="line"><span class="language-bash">      org.opencontainers.image.licenses=<span class="string">&quot;MPL-2.0&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Install envsubst from GNU&#x27;s gettext project</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> apt-get update &amp;&amp; \</span></span><br><span class="line"><span class="language-bash">    apt-get -y install gettext-base &amp;&amp; \</span></span><br><span class="line"><span class="language-bash">    apt-get clean &amp;&amp; \</span></span><br><span class="line"><span class="language-bash">    <span class="built_in">rm</span> -rf /var/lib/apt/lists/*</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Create a user to run as</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> groupadd --gid 1000 suwayomi &amp;&amp; \</span></span><br><span class="line"><span class="language-bash">    useradd  --uid 1000 --gid suwayomi --no-log-init suwayomi &amp;&amp; \</span></span><br><span class="line"><span class="language-bash">    <span class="built_in">mkdir</span> -p /home/suwayomi &amp;&amp; \</span></span><br><span class="line"><span class="language-bash">    <span class="built_in">chown</span> -R suwayomi:suwayomi /home/suwayomi</span></span><br><span class="line"><span class="keyword">USER</span> suwayomi</span><br><span class="line"><span class="keyword">WORKDIR</span><span class="language-bash"> /home/suwayomi</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Copy the app into the container</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> curl -s --create-dirs -L <span class="variable">$TACHIDESK_RELEASE_DOWNLOAD_URL</span> -o /home/suwayomi/startup/tachidesk_latest.jar</span></span><br><span class="line"><span class="keyword">COPY</span><span class="language-bash"> scripts/startup_script.sh /home/suwayomi/startup_script.sh</span></span><br><span class="line"><span class="keyword">COPY</span><span class="language-bash"> server.conf.template /home/suwayomi/server.conf.template</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">EXPOSE</span> <span class="number">4567</span></span><br><span class="line"><span class="keyword">CMD</span><span class="language-bash"> [<span class="string">&quot;/bin/sh&quot;</span>, <span class="string">&quot;/home/suwayomi/startup_script.sh&quot;</span>]</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># vim: set ft=dockerfile:</span></span><br></pre></td></tr></table></figure><hr><blockquote><p>个人版本的 <code>DockerFile</code> 文件</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://github.com/Suwayomi/Tachidesk-Server/releases/download/v0.7.0/Tachidesk-Server-v0.7.0-r1197.jar</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">FROM eclipse-temurin:11-jre-jammy</span><br><span class="line"></span><br><span class="line">WORKDIR /root</span><br><span class="line">VOLUME /root/.local/share/Tachidesk</span><br><span class="line"></span><br><span class="line">COPY Tachidesk-Server-v0.7.0-r1197.jar /root/Tachidesk-Server-v0.7.0-r1197.jar</span><br><span class="line"></span><br><span class="line">EXPOSE 4567</span><br><span class="line">CMD [<span class="string">&quot;java&quot;</span>, <span class="string">&quot;-jar&quot;</span>, <span class="string">&quot;Tachidesk-Server-v0.7.0-r1197.jar&quot;</span>]</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker build -f DockerFile -t rahn2029/tachidesk-server:2.0 .</span><br></pre></td></tr></table></figure><hr><h2 id="一键脚本"><a href="#一键脚本" class="headerlink" title="一键脚本"></a>一键脚本</h2><blockquote><p>官方版本</p></blockquote><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#! /bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">red</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;\033[31m\033[01m<span class="variable">$1</span>\033[0m&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">green</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;\033[32m\033[01m<span class="variable">$1</span>\033[0m&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">yellow</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;\033[33m\033[01m<span class="variable">$1</span>\033[0m&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Tachidesk Server</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> tachidesk-<span class="function"><span class="title">server_install</span></span>()&#123;</span><br><span class="line"><span class="keyword">if</span> nc -z localhost 4567; <span class="keyword">then</span></span><br><span class="line">green <span class="string">&quot; 4567 端口已经被占用，请检查相关进程&quot;</span></span><br><span class="line"><span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> docker ps -a --format <span class="string">&quot;&#123;&#123;.Names&#125;&#125;&quot;</span> | grep -q <span class="string">&quot;tachidesk-server&quot;</span>; <span class="keyword">then</span></span><br><span class="line">green <span class="string">&quot; tachidesk-server 容器名已经被占用&quot;</span></span><br><span class="line"><span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> [ ! -d /root/docker/Tachidesk-Server ]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">mkdir</span> -p /root/docker/Tachidesk-Server</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">cd</span> /root/docker/Tachidesk-Server</span><br><span class="line"><span class="keyword">if</span> [ -d <span class="string">&quot;data&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">chmod</span> -R 777 data</span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">green <span class="string">&quot; data 文件夹已经存在, 跳过执行 docker cp 命令&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">docker run -itd -p 4567:4567 --name tachidesk-server rahn2029/tachidesk-server:1.0</span><br><span class="line">docker <span class="built_in">cp</span> tachidesk-server:/home/suwayomi/.local/share/Tachidesk $(<span class="built_in">pwd</span>)/data</span><br><span class="line"><span class="built_in">chmod</span> -R 777 data</span><br><span class="line">docker stop tachidesk-server &amp;&amp; docker <span class="built_in">rm</span> tachidesk-server</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> [ -f <span class="string">&quot;docker-compose.yaml&quot;</span> ] || [ -f <span class="string">&quot;docker-compose.yml&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">green <span class="string">&quot; docker-compose 文件已经存在, 跳过创建 docker-compose.yaml 步骤&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">cat</span> &lt;&lt;<span class="string">EOF &gt; docker-compose.yaml</span></span><br><span class="line"><span class="string">---</span></span><br><span class="line"><span class="string">version: &quot;2.1&quot;</span></span><br><span class="line"><span class="string">services:</span></span><br><span class="line"><span class="string">  suwayomi:</span></span><br><span class="line"><span class="string">    image: rahn2029/tachidesk-server:1.0</span></span><br><span class="line"><span class="string">    container_name: tachidesk-server</span></span><br><span class="line"><span class="string">    environment:</span></span><br><span class="line"><span class="string">      - TZ=Asia/Shanghai</span></span><br><span class="line"><span class="string">    volumes:</span></span><br><span class="line"><span class="string">      - ./data:/./home/suwayomi/.local/share/Tachidesk</span></span><br><span class="line"><span class="string">    ports:</span></span><br><span class="line"><span class="string">      - 4567:4567</span></span><br><span class="line"><span class="string">    restart: unless-stopped</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">docker-compose up -d</span><br><span class="line">ufw allow 4567/tcp</span><br><span class="line">yellow <span class="string">&quot;-----------------------------------------------&quot;</span></span><br><span class="line">green <span class="string">&quot; Web 端口：4567&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">green <span class="string">&quot; Docker IP = <span class="subst">$(ip addr show docker0 | grep &#x27;inet\b&#x27; | awk &#x27;&#123;print $2&#125;&#x27; | cut -d &#x27;/&#x27; -f1)</span>:4567&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">green <span class="string">&quot; Web 网址  = http://<span class="subst">$(ifconfig $(ifconfig | grep -oP &#x27;enp\w+&#x27;)</span> | grep &#x27;inet &#x27; | awk &#x27;&#123;print <span class="variable">$2</span>&#125;&#x27;):4567&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">green <span class="string">&quot; 查看日志  - docker logs tachidesk-server &quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">green <span class="string">&quot; Tachidesk Server 安装完毕！&quot;</span></span><br><span class="line">yellow <span class="string">&quot;-----------------------------------------------&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">tachidesk-server_install</span><br></pre></td></tr></table></figure><blockquote><p>个人版本(推荐)</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://raw.githubusercontent.com/18nome/docker/main/Tachidesk-Server.sh &amp;&amp; <span class="built_in">chmod</span> +x Tachidesk-Server.sh &amp;&amp; bash Tachidesk-Server.sh</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#! /bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">red</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;\033[31m\033[01m<span class="variable">$1</span>\033[0m&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">green</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;\033[32m\033[01m<span class="variable">$1</span>\033[0m&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">yellow</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;\033[33m\033[01m<span class="variable">$1</span>\033[0m&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Tachidesk Server</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> tachidesk-<span class="function"><span class="title">server_install</span></span>()&#123;</span><br><span class="line"><span class="keyword">if</span> nc -z localhost 4567; <span class="keyword">then</span></span><br><span class="line">green <span class="string">&quot; 4567 端口已经被占用，请检查相关进程&quot;</span></span><br><span class="line"><span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> docker ps -a --format <span class="string">&quot;&#123;&#123;.Names&#125;&#125;&quot;</span> | grep -q <span class="string">&quot;tachidesk-server&quot;</span>; <span class="keyword">then</span></span><br><span class="line">green <span class="string">&quot; tachidesk-server 容器名已经被占用&quot;</span></span><br><span class="line"><span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> [ ! -d /root/docker/Tachidesk-Server ]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">mkdir</span> -p /root/docker/Tachidesk-Server</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">cd</span> /root/docker/Tachidesk-Server</span><br><span class="line"><span class="keyword">if</span> [ -d <span class="string">&quot;data&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">yellow <span class="string">&quot;-----------------------------------------------&quot;</span></span><br><span class="line">green <span class="string">&quot; data 文件夹已经存在, 跳过执行 docker cp 命令&quot;</span></span><br><span class="line">yellow <span class="string">&quot;-----------------------------------------------&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">docker run -itd -p 4567:4567 --name tachidesk-server rahn2029/tachidesk-server:1.0</span><br><span class="line">docker <span class="built_in">cp</span> tachidesk-server:/root/.local/share/Tachidesk $(<span class="built_in">pwd</span>)/data</span><br><span class="line">docker stop tachidesk-server &amp;&amp; docker <span class="built_in">rm</span> tachidesk-server</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> [ -f <span class="string">&quot;docker-compose.yaml&quot;</span> ] || [ -f <span class="string">&quot;docker-compose.yml&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">green <span class="string">&quot; docker-compose 文件已经存在, 跳过创建 docker-compose.yaml 步骤&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">cat</span> &lt;&lt;<span class="string">EOF &gt; docker-compose.yaml</span></span><br><span class="line"><span class="string">---</span></span><br><span class="line"><span class="string">version: &quot;2.1&quot;</span></span><br><span class="line"><span class="string">services:</span></span><br><span class="line"><span class="string">  suwayomi:</span></span><br><span class="line"><span class="string">    image: rahn2029/tachidesk-server:1.0</span></span><br><span class="line"><span class="string">    container_name: tachidesk-server</span></span><br><span class="line"><span class="string">    environment:</span></span><br><span class="line"><span class="string">      - TZ=Asia/Shanghai</span></span><br><span class="line"><span class="string">    volumes:</span></span><br><span class="line"><span class="string">      - ./data:/root/.local/share/Tachidesk</span></span><br><span class="line"><span class="string">    ports:</span></span><br><span class="line"><span class="string">      - 4567:4567</span></span><br><span class="line"><span class="string">    restart: unless-stopped</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">docker-compose up -d</span><br><span class="line">ufw allow 4567/tcp</span><br><span class="line">yellow <span class="string">&quot;-----------------------------------------------&quot;</span></span><br><span class="line">green <span class="string">&quot; Web 端口：4567&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">green <span class="string">&quot; Docker IP = <span class="subst">$(ip addr show docker0 | grep &#x27;inet\b&#x27; | awk &#x27;&#123;print $2&#125;&#x27; | cut -d &#x27;/&#x27; -f1)</span>:4567&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">green <span class="string">&quot; Web 网址  = http://<span class="subst">$(ifconfig $(ifconfig | grep -oP &#x27;enp\w+&#x27;)</span> | grep &#x27;inet &#x27; | awk &#x27;&#123;print <span class="variable">$2</span>&#125;&#x27;):4567&quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">green <span class="string">&quot; 查看日志  - docker logs tachidesk-server &quot;</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">green <span class="string">&quot; Tachidesk Server 安装完毕！&quot;</span></span><br><span class="line">yellow <span class="string">&quot;-----------------------------------------------&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">tachidesk-server_install</span><br></pre></td></tr></table></figure><hr><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>官方版本的 <code>Docker-Compose</code> 权限问题被折磨了好久，突然发现不就是一个环境，一个软件，命令开启吗？为什么要弄的那么复杂呢。</p><p>在内部执行的  <code>apt-get</code>  步骤，严重拖垮了在本地本就网络不佳的环境，接着出现的许多奇怪错误。</p><p>如今不再需要漫长的等待！</p><hr><p>项目地址： <a href="https://github.com/Suwayomi/docker-tachidesk">https://github.com/Suwayomi/docker-tachidesk</a></p><p>项目下载：<a href="https://github.com/Suwayomi/Tachidesk-Server/releases/tag/v0.7.0">https://github.com/Suwayomi/Tachidesk-Server/releases/tag/v0.7.0</a></p><hr><p></p>]]></content>
      
      
      <categories>
          
          <category> Docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> tachidesk </tag>
            
            <tag> 定制 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Homepage —— 主页导航</title>
      <link href="/2023/06/06/homepage/"/>
      <url>/2023/06/06/homepage/</url>
      
        <content type="html"><![CDATA[<h1 id="Homepage-主页导航"><a href="#Homepage-主页导航" class="headerlink" title="Homepage 主页导航"></a>Homepage 主页导航</h1><blockquote><p>现代（完全静态、快速）、安全（完全代理）、高度可定制的应用程序仪表板，集成了超过 25 种服务和超过 15 种语言的翻译。通过 YAML 文件轻松配置（或通过 docker 标签发现）。</p></blockquote><hr><h2 id="Docker-Compose"><a href="#Docker-Compose" class="headerlink" title="Docker-Compose"></a>Docker-Compose</h2><blockquote><p>根据官方 <code>docker</code> 的配置你只能修改主页面的设置，在不进行修改的前提下挂载本地图片，需要复制出 <code>/app/public</code> 文件夹 ，再进行挂载，不然只能应用它相关的 CDN 图片服务</p></blockquote><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&quot;3.3&quot;</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">homepage:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">ghcr.io/benphelps/homepage:latest</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">homepage</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">3000</span><span class="string">:3000</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/path/to/config:/app/config</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/var/run/docker.sock:/var/run/docker.sock:ro</span></span><br></pre></td></tr></table></figure><hr><h2 id="Docker-Compose-修改版"><a href="#Docker-Compose-修改版" class="headerlink" title="Docker-Compose 修改版"></a>Docker-Compose 修改版</h2><blockquote><p>修改版只是在 <code>/app/public</code> 文件夹下创建了一个 <code>images</code> 文件夹，来进行本地图片挂载</p><p>格式为：&#x2F;images&#x2F;xx.png</p></blockquote><p>创建  <code>docker-compose.yml</code>  文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nano docker-compose.yml</span><br></pre></td></tr></table></figure><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&quot;3.3&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">homepage:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">rahn2029/homepage</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">homepage</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">3344</span><span class="string">:3000</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./config:/app/config</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./images:/app/public/images</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/var/run/docker.sock:/var/run/docker.sock</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">unless-stopped</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose up -d</span><br></pre></td></tr></table></figure><blockquote><p>打开 <code>3344</code> 端口</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ufw allow 3344/tcp</span><br></pre></td></tr></table></figure><hr><h2 id="注意点"><a href="#注意点" class="headerlink" title="注意点"></a>注意点</h2><ol><li><code>icon: hexo.png</code>  这样的写法格式，采用了 <a href="https://cdn.jsdelivr.net/gh/walkxcode/dashboard-icons/png/hexo.png">CDN</a> 路径下存在的图片 </li><li><code>icon: https://image.png</code> 这样的写法格式，采用了 <code>url</code> 地址</li><li><code>icon: /images/hexo.png</code> 这样的写法格式，采用了本地 <code>images</code> 文件夹下的 <code>hexo.png</code></li><li>可以使用 <code>wget</code> 下载这个页面上的所有图片，目前有 <code>1316</code> 张</li></ol><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 调用 CDN</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">Hexo:</span></span><br><span class="line">        <span class="attr">icon:</span> <span class="string">hexo.png</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 采用 url</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">Hexo:</span></span><br><span class="line">        <span class="attr">icon:</span> <span class="string">https://cdn.jsdelivr.net/gh/walkxcode/dashboard-icons/png/hexo.png</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 本地图片</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">Hexo:</span></span><br><span class="line">        <span class="attr">icon:</span> <span class="string">/images/hexo.png</span>        </span><br><span class="line"></span><br><span class="line"><span class="comment"># wget 下载网站页面下的图片</span></span><br><span class="line"><span class="string">wget</span> <span class="string">-r</span> <span class="string">-np</span> <span class="string">-nH</span> <span class="string">--cut-dirs=2</span> <span class="string">-R</span> <span class="string">index.html*</span> <span class="string">https://cdn.jsdelivr.net/gh/walkxcode/dashboard-icons@master/png/</span>        </span><br></pre></td></tr></table></figure><hr><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>理解 <code>docker commit</code>  <code>docker cp</code> 命令后，在 <code>docker</code> 中进行挂载会变得很清晰。</p><p>挂载的文件夹要么是空的文件夹，要么是将内部文件复制后，再进行的挂载操作，又或是 <code>DockerFile</code> 中的脚本。</p><p>可以使用 <a href="https://weserv.rahn.top/">wsrv.nl</a> 来进行图片代理。</p><hr><p>CDN : <a href="https://cdn.jsdelivr.net/gh/walkxcode/dashboard-icons@master/png/">https://cdn.jsdelivr.net/gh/walkxcode/dashboard-icons@master/png/</a>    </p><p>Wget : <a href="https://www.gnu.org/software/wget/">https://www.gnu.org/software/wget/</a></p><p>Github : <a href="https://github.com/benphelps/homepage">https://github.com/benphelps/homepage</a></p><p>官方文档 : <a href="https://gethomepage.dev/en/installation/">https://gethomepage.dev/en/installation/</a></p><p>Wget  for Windows : <a href="https://gnuwin32.sourceforge.net/packages/wget.htm">https://gnuwin32.sourceforge.net/packages/wget.htm</a></p><hr><p></p>]]></content>
      
      
      <categories>
          
          <category> Docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> homepage </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Minimalist Web Notepad —— 极简网络记事本</title>
      <link href="/2023/06/05/Minimalist-Web-Notepad/"/>
      <url>/2023/06/05/Minimalist-Web-Notepad/</url>
      
        <content type="html"><![CDATA[<h1 id="极简网络记事本"><a href="#极简网络记事本" class="headerlink" title="极简网络记事本"></a>极简网络记事本</h1><blockquote><p>这是 <code>notepad.cc</code> 的开源克隆，现已经不存在了。</p></blockquote><hr><h2 id="Docker-Run"><a href="#Docker-Run" class="headerlink" title="Docker Run"></a>Docker Run</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -itd --restart=always --name mini-web-notepad -p 8006:80 -v $(<span class="built_in">pwd</span>)/data:/var/www/html/_tmp  rahn2029/minimalist-web-notepad</span><br></pre></td></tr></table></figure><blockquote><p>停止容器并删除</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker stop mini-web-notepad &amp;&amp; docker <span class="built_in">rm</span> mini-web-notepad</span><br></pre></td></tr></table></figure><hr><h2 id="Docker-Compose"><a href="#Docker-Compose" class="headerlink" title="Docker Compose"></a>Docker Compose</h2><blockquote><p>创建 <code>docker-compose.yml</code></p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nano docker-compose.yml</span><br></pre></td></tr></table></figure><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&#x27;3.3&#x27;</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">    <span class="attr">minimalist-web-notepad:</span></span><br><span class="line">        <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">        <span class="attr">container_name:</span> <span class="string">mini-web-notepad</span></span><br><span class="line">        <span class="attr">volumes:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">&#x27;./data:/var/www/html/_tmp&#x27;</span></span><br><span class="line">        <span class="attr">ports:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">&#x27;8006:80&#x27;</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">rahn2029/minimalist-web-notepad</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose up -d</span><br></pre></td></tr></table></figure><blockquote><p>打开 <code>8006</code> 端口</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ufw allow 8006/tcp</span><br></pre></td></tr></table></figure><hr><h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="/images/image-20230606115423969.png" alt="image-20230606115423969"></p><hr><p>Github : <a href="https://github.com/pereorga/minimalist-web-notepad/tree/docker">https://github.com/pereorga/minimalist-web-notepad/tree/docker</a></p><hr><p></p>]]></content>
      
      
      <categories>
          
          <category> Docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Minimalist-Web-Notepad </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Docker —— 镜像库</title>
      <link href="/2023/06/05/docker-%E9%95%9C%E5%83%8F%E5%BA%93/"/>
      <url>/2023/06/05/docker-%E9%95%9C%E5%83%8F%E5%BA%93/</url>
      
        <content type="html"><![CDATA[<ol><li>node:18-alpine</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># alpine 系统 </span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装 git</span></span><br><span class="line">apk update</span><br><span class="line">apk add git</span><br><span class="line">git --version</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装 nano</span></span><br><span class="line">apk update</span><br><span class="line">apk add nano</span><br><span class="line">nano --version</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装 curl</span></span><br><span class="line">apk update</span><br><span class="line">apk add curl</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装 bash</span></span><br><span class="line">apk update</span><br><span class="line">apk add bash</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装 openssh</span></span><br><span class="line">apk update</span><br><span class="line">apk add openssh</span><br></pre></td></tr></table></figure><hr><h2 id="alpine-系统设置上海时间"><a href="#alpine-系统设置上海时间" class="headerlink" title="alpine 系统设置上海时间"></a>alpine 系统设置上海时间</h2><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">RUN</span><span class="language-bash"> apk --update add tzdata &amp;&amp; \</span></span><br><span class="line"><span class="language-bash">    <span class="built_in">cp</span> /usr/share/zoneinfo/Asia/Shanghai /etc/localtime &amp;&amp; \</span></span><br><span class="line"><span class="language-bash">    <span class="built_in">echo</span> <span class="string">&quot;Asia/Shanghai&quot;</span> &gt; /etc/timezone &amp;&amp; \</span></span><br><span class="line"><span class="language-bash">    apk del tzdata &amp;&amp; \</span></span><br><span class="line"><span class="language-bash">    <span class="built_in">rm</span> -rf /var/cache/apk/*</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">FROM xxx</span><br><span class="line"></span><br><span class="line">RUN apk --update add tzdata &amp;&amp; \</span><br><span class="line">    <span class="built_in">cp</span> /usr/share/zoneinfo/Asia/Shanghai /etc/localtime &amp;&amp; \</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;Asia/Shanghai&quot;</span> &gt; /etc/timezone &amp;&amp; \</span><br><span class="line">    apk del tzdata &amp;&amp; \</span><br><span class="line">    <span class="built_in">rm</span> -rf /var/cache/apk/*</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker build -f DockerFile -t xxx .</span><br></pre></td></tr></table></figure><hr><h2 id="设置容器时间"><a href="#设置容器时间" class="headerlink" title="设置容器时间"></a>设置容器时间</h2><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">volumes:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&#x27;/etc/localtime:/etc/localtime:ro&#x27;</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&#x27;/etc/timezone:/etc/timezone:ro&#x27;</span></span><br></pre></td></tr></table></figure><hr><table><thead><tr><th align="left">Docker 镜像</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">node:18-alpine</td><td align="left"></td></tr><tr><td align="left"></td><td align="left"></td></tr><tr><td align="left"></td><td align="left"></td></tr><tr><td align="left"></td><td align="left"></td></tr><tr><td align="left"></td><td align="left"></td></tr><tr><td align="left"></td><td align="left"></td></tr><tr><td align="left"></td><td align="left"></td></tr></tbody></table><h2 id="自定义镜像"><a href="#自定义镜像" class="headerlink" title="自定义镜像"></a>自定义镜像</h2><table><thead><tr><th>Docker 镜像</th><th>描述</th></tr></thead><tbody><tr><td>rahn2029&#x2F;hexo:1.0</td><td>hexo 初始化 博客</td></tr><tr><td>rahn2029&#x2F;hexo-butterfly:1.0</td><td>中文版 hexo-butterfly 主题初始化</td></tr><tr><td>rahn2029&#x2F;hexo-butterfly:2.0</td><td>个性化 hexo-butterfly 主题</td></tr><tr><td>rahn2029&#x2F;hnet-web:1.0</td><td>hnet-web 官方初始化 网页代理</td></tr><tr><td>rahn2029&#x2F;hnet-web:2.0</td><td>hnet-web 个人修改版 网页代理</td></tr><tr><td>rahn2029&#x2F;frps</td><td>snowdreamtech&#x2F;frps 内网穿透服务端</td></tr><tr><td>rahn2029&#x2F;frpc</td><td>snowdreamtech&#x2F;frpc 内网穿透客户端</td></tr><tr><td>rahn2029&#x2F;minimalist-web-notepad</td><td><a href="https://github.com/pereorga/minimalist-web-notepad/tree/docker">极简主义网络记事本</a></td></tr><tr><td>rahn2029&#x2F;homepage</td><td>修改 <code>ghcr.io/benphelps/homepage</code> 的主页导航</td></tr><tr><td>rahn2029&#x2F;tachidesk</td><td>ghcr.io&#x2F;suwayomi&#x2F;tachidesk 漫画阅读器</td></tr><tr><td>rahn2029&#x2F;vaultwarden</td><td>vaultwarden&#x2F;server:latest 密码库管理</td></tr><tr><td>rahn2029&#x2F;jellyfin</td><td>修改 <code>nyanmisaka/jellyfin</code> 添加一个 <code>animation</code> 文件夹</td></tr><tr><td>rahn2029&#x2F;searxng</td><td>searxng&#x2F;searxng  开源聚合搜索引擎</td></tr><tr><td>redis:alpine</td><td>redis:alpine 开源聚合搜索引擎</td></tr><tr><td>rahn2029&#x2F;npm</td><td>jc21&#x2F;nginx-proxy-manager 网站代理</td></tr><tr><td>rahn2029&#x2F;invidious</td><td>quay.io&#x2F;invidious&#x2F;invidious:latest <code>Invidious</code></td></tr><tr><td>rahn2029&#x2F;postgres:14</td><td>docker.io&#x2F;library&#x2F;postgres:14 <code>Invidious</code></td></tr><tr><td>rahn2029&#x2F;weserv</td><td>ghcr.io&#x2F;weserv&#x2F;images:5.x 图片代理</td></tr><tr><td>rahn2029&#x2F;rustdesk</td><td>rustdesk&#x2F;rustdesk-server 远程连接</td></tr><tr><td>rahn2029&#x2F;portainer-ce</td><td>6053537&#x2F;portainer-ce docker 可视化面板</td></tr><tr><td>rahn2029&#x2F;sshwifty</td><td>niruix&#x2F;sshwifty</td></tr><tr><td></td><td></td></tr><tr><td></td><td></td></tr><tr><td></td><td></td></tr><tr><td></td><td></td></tr><tr><td></td><td></td></tr><tr><td></td><td></td></tr><tr><td></td><td></td></tr><tr><td></td><td></td></tr></tbody></table><hr><p></p>]]></content>
      
      
      <categories>
          
          <category> Docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 镜像 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo-Butterfly 主题镜像的制作过程</title>
      <link href="/2023/06/05/hexo-%E9%85%8D%E7%BD%AE%E8%BF%87%E7%A8%8B/"/>
      <url>/2023/06/05/hexo-%E9%85%8D%E7%BD%AE%E8%BF%87%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<h1 id="Hexo-Butterfly-主题镜像的制作过程"><a href="#Hexo-Butterfly-主题镜像的制作过程" class="headerlink" title="Hexo-Butterfly 主题镜像的制作过程"></a>Hexo-Butterfly 主题镜像的制作过程</h1><blockquote><p>使用 <code>node:18-alpine</code> 版本来构建 <code>hexo-butterfly</code> 镜像</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull node:18-alpine</span><br></pre></td></tr></table></figure><hr><h2 id="Hexo-镜像"><a href="#Hexo-镜像" class="headerlink" title="Hexo 镜像"></a>Hexo 镜像</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -it -d --name hexo -p 4000:4000 node:18-alpine</span><br></pre></td></tr></table></figure><blockquote><p>进入容器</p><ol><li>全局安装 <code>hexo</code> 客户端</li><li>升级 <code>npm</code></li><li><code>hexo</code> 初始化</li><li>进入 <code>blog</code> 文件夹</li><li>安装依赖</li><li>运行 <code>hexo</code> ，在浏览器中查看（4000端口）</li></ol></blockquote><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="built_in">exec</span> -it hexo sh</span><br><span class="line"></span><br><span class="line">npm install hexo-cli -g</span><br><span class="line">npm install -g npm@9.6.7</span><br><span class="line">hexo init blog</span><br><span class="line"><span class="built_in">cd</span> blog</span><br><span class="line">npm install</span><br><span class="line">hexo server</span><br><span class="line"><span class="built_in">exit</span></span><br></pre></td></tr></table></figure><blockquote><p><kbd>Ctrl</kbd> + <kbd>C</kbd> 取消 <code>hexo server</code> 退出，到这里就可以通过 <code>DockerFile</code> 制作一个 Hexo 的镜像，如下</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker ps</span><br><span class="line">docker commit d0e58c6f5a71 hexo</span><br></pre></td></tr></table></figure><blockquote><p>构建 hexo 镜像</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nano DockerFile</span><br></pre></td></tr></table></figure><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">FROM</span> hexo</span><br><span class="line"><span class="keyword">LABEL</span><span class="language-bash"> maintainer=<span class="string">&quot;Nome &lt;rainsky512@gmail.com&gt;&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">WORKDIR</span><span class="language-bash"> /blog</span></span><br><span class="line"><span class="keyword">VOLUME</span><span class="language-bash"> /blog</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">EXPOSE</span> <span class="number">4000</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">CMD</span><span class="language-bash"> [<span class="string">&quot;hexo&quot;</span>, <span class="string">&quot;server&quot;</span>]</span></span><br></pre></td></tr></table></figure><blockquote><p>构建镜像</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker build -f DockerFile -t rahn2029/hexo:1.0 .</span><br></pre></td></tr></table></figure><blockquote><p>创建容器</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker stop hexo &amp;&amp; docker <span class="built_in">rm</span> hexo</span><br><span class="line">docker run -it -d --name hexo -p 4000:4000 rahn2029/hexo:1.0</span><br></pre></td></tr></table></figure><blockquote><p><code>rahn2029/hexo:1.0</code> 镜像制作完成</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker stop hexo &amp;&amp; docker <span class="built_in">rm</span> hexo</span><br></pre></td></tr></table></figure><hr><h2 id="Hexo-Butterfly-1-0-镜像"><a href="#Hexo-Butterfly-1-0-镜像" class="headerlink" title="Hexo-Butterfly:1.0 镜像"></a>Hexo-Butterfly:1.0 镜像</h2><blockquote><p>在 <code>hexo</code> 镜像的基础上继续构建，而不是用已经构建完成的 <code>rahn2029/hexo:1.0</code> 镜像</p><p>创建容器</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -it -d --name hexo -p 4000:4000 hexo</span><br></pre></td></tr></table></figure><blockquote><p>进入容器</p><ol><li>进入 <code>blog</code> 文件夹内 </li><li>参考 <a href="https://butterfly.js.org/posts/21cfbf15/">https://butterfly.js.org/posts/21cfbf15/</a> 进行安装 Butterfly 主题</li><li>安装 Git</li><li>安装 Nano</li><li>下载 Butterfly 到 <code>themes/butterfly</code> 文件夹下</li><li>修改 Hexo 根目录下的 <code>_config.yml</code>，把主题改为 <code>butterfly</code> ，语言为 <code>zh-CN</code></li><li>安装 <code>butterfly</code> 插件以及渲染器</li><li>将 <code>butterfly</code> 主题的 <code>_config.yml</code> 拷贝一份到根目录，取名为 <code>_config.butterfly.yml</code></li><li>运行 <code>hexo server</code> ，查看效果</li></ol></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="built_in">exec</span> -it hexo sh</span><br><span class="line"></span><br><span class="line"><span class="built_in">ls</span></span><br><span class="line"><span class="built_in">cd</span> blog</span><br><span class="line"></span><br><span class="line">apk update</span><br><span class="line">apk add git</span><br><span class="line">git --version</span><br><span class="line"></span><br><span class="line">apk update</span><br><span class="line">apk add nano</span><br><span class="line">nano --version</span><br><span class="line"></span><br><span class="line">git <span class="built_in">clone</span> -b master https://github.com/jerryc127/hexo-theme-butterfly.git themes/butterfly</span><br><span class="line"></span><br><span class="line">nano _config.yml</span><br><span class="line">language: zh_CN</span><br><span class="line">theme: butterfly</span><br><span class="line"></span><br><span class="line">npm install hexo-renderer-pug hexo-renderer-stylus --save</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> themes/butterfly/</span><br><span class="line"><span class="built_in">cp</span> _config.yml /blog/_config.butterfly.yml</span><br><span class="line"></span><br><span class="line">hexo server</span><br><span class="line"><span class="built_in">exit</span></span><br></pre></td></tr></table></figure><blockquote><p><kbd>Ctrl</kbd> + <kbd>C</kbd> 取消 <code>hexo server</code> 退出，到这里就可以通过 <code>DockerFile</code> 制作一个 <code>Hexo-Butterfly</code> 的镜像，如下</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker ps</span><br><span class="line">docker commit 905d75673c10 hexo-butterfly</span><br></pre></td></tr></table></figure><blockquote><p>构建 hexo-butterfly 镜像</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nano DockerFile</span><br></pre></td></tr></table></figure><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">FROM</span> hexo-butterfly</span><br><span class="line"><span class="keyword">LABEL</span><span class="language-bash"> maintainer=<span class="string">&quot;Nome &lt;rainsky512@gmail.com&gt;&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">WORKDIR</span><span class="language-bash"> /blog</span></span><br><span class="line"><span class="keyword">VOLUME</span><span class="language-bash"> /blog</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">EXPOSE</span> <span class="number">4000</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">CMD</span><span class="language-bash"> [<span class="string">&quot;hexo&quot;</span>, <span class="string">&quot;server&quot;</span>]</span></span><br></pre></td></tr></table></figure><blockquote><p>构建镜像</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker build -f DockerFile -t rahn2029/hexo-butterfly:1.0 .</span><br></pre></td></tr></table></figure><blockquote><p> 创建容器</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker stop hexo &amp;&amp; docker <span class="built_in">rm</span> hexo</span><br><span class="line">docker run -it -d --name hexo -p 4000:4000 rahn2029/hexo-butterfly:1.0</span><br></pre></td></tr></table></figure><blockquote><p>一个安装 <code>butterfly</code> 主题的中文 <code>hexo</code> 镜像创建完毕</p></blockquote><hr><h2 id="Hexo-Butterfly-2-0-镜像"><a href="#Hexo-Butterfly-2-0-镜像" class="headerlink" title="Hexo-Butterfly:2.0 镜像"></a>Hexo-Butterfly:2.0 镜像</h2><blockquote><p>将自己配置好的主题设置，制作 <code>hexo-butterfly:2.0</code> </p><p>将从 <code>hexo-butterfly</code> 镜像开始</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker stop hexo &amp;&amp; docker <span class="built_in">rm</span> hexo</span><br><span class="line">docker run -it -d --name hexo -p 4000:4000 hexo-butterfly</span><br></pre></td></tr></table></figure><blockquote><ol><li>删除 <code>blog</code> 内部的所有文件，退回到主机</li><li>将本地的 <code>blog</code> 进行压缩，通过 <code>docker cp</code> 拷贝到容器内部</li><li>再次进入，进入 <code>blog</code> 目录进行解压，解压完成后删除</li><li>运行 <code>hexo server</code> ，查看效果</li><li>在导入的文章中，标题有乱码的问题，就此删除了文章，用命令新建了文章，作为演示</li></ol></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="built_in">exec</span> -it hexo sh</span><br><span class="line"><span class="built_in">cd</span> blog</span><br><span class="line"><span class="built_in">rm</span> -rf *</span><br><span class="line"><span class="built_in">exit</span></span><br><span class="line"></span><br><span class="line">docker <span class="built_in">cp</span> blog.zip hexo:/blog</span><br><span class="line"></span><br><span class="line">docker <span class="built_in">exec</span> -it hexo sh</span><br><span class="line"><span class="built_in">cd</span> blog</span><br><span class="line">unzip blog.zip</span><br><span class="line"><span class="built_in">rm</span> blog.zip</span><br><span class="line"></span><br><span class="line">hexo server</span><br><span class="line"></span><br><span class="line">hexo new <span class="string">&#x27;你好&#x27;</span></span><br><span class="line">hexo new <span class="string">&#x27;hello world&#x27;</span></span><br><span class="line"></span><br><span class="line">hexo server</span><br><span class="line"><span class="built_in">exit</span></span><br></pre></td></tr></table></figure><blockquote><p><kbd>Ctrl</kbd> + <kbd>C</kbd> 取消 <code>hexo server</code> 并退出，到这里就可以通过 <code>DockerFile</code> 制作一个 <code>Hexo-Butterfly:2.0</code> 的镜像，如下</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker ps</span><br><span class="line">docker commit c7f0862a037d hexo-butterfly2.0</span><br></pre></td></tr></table></figure><blockquote><p>构建 hexo-butterfly2.0 镜像</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nano DockerFile</span><br></pre></td></tr></table></figure><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">FROM</span> hexo-butterfly2.<span class="number">0</span></span><br><span class="line"><span class="keyword">LABEL</span><span class="language-bash"> maintainer=<span class="string">&quot;Nome &lt;rainsky512@gmail.com&gt;&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">WORKDIR</span><span class="language-bash"> /blog</span></span><br><span class="line"><span class="keyword">VOLUME</span><span class="language-bash"> /blog</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">EXPOSE</span> <span class="number">4000</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">CMD</span><span class="language-bash"> [<span class="string">&quot;hexo&quot;</span>, <span class="string">&quot;server&quot;</span>]</span></span><br></pre></td></tr></table></figure><blockquote><p>构建镜像</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker build -f DockerFile -t rahn2029/hexo-butterfly:2.0 .</span><br></pre></td></tr></table></figure><blockquote><p>创建容器</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker stop hexo &amp;&amp; docker <span class="built_in">rm</span> hexo</span><br><span class="line">docker run -it -d --name hexo -p 4000:4000 rahn2029/hexo-butterfly:2.0</span><br></pre></td></tr></table></figure><blockquote><p>一个本地的 <code>blog</code> 至此就完整的安装到 docker 镜像之中，<code>rahn2029/hexo-butterfly:2.0</code> </p><p>通过 <code>docker-compose </code> 挂载它，制作 <code>2.0</code> 是为了防止配置的丢失</p><p>将容器内部的全部文件拷贝到当前位置的 <code>blog</code> 文件夹下</p><p>停止删除这个容器，用 <code>docker-compose</code> 作为最终管理方式</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="built_in">cp</span> hexo:/blog $(<span class="built_in">pwd</span>)/blog</span><br><span class="line">docker stop hexo &amp;&amp; docker <span class="built_in">rm</span> hexo</span><br></pre></td></tr></table></figure><hr><h2 id="Docker-Compose"><a href="#Docker-Compose" class="headerlink" title="Docker-Compose"></a>Docker-Compose</h2><p>编写 <code>docker-compose.yml</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nano docker-compose.yml</span><br></pre></td></tr></table></figure><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&#x27;3.3&#x27;</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">    <span class="attr">hexo-butterfly:</span></span><br><span class="line">        <span class="attr">container_name:</span> <span class="string">hexo</span></span><br><span class="line">        <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">        <span class="attr">ports:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">&#x27;4000:4000&#x27;</span></span><br><span class="line">        <span class="attr">volumes:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">&#x27;./blog:/blog&#x27;</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">&#x27;rahn2029/hexo-butterfly:2.0&#x27;</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose up -d</span><br></pre></td></tr></table></figure><blockquote><p>打开 <code>4000</code> 端口</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ufw allow 4000/tcp</span><br></pre></td></tr></table></figure><hr><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><ol><li>用 <code>rahn2029/hexo:1.0</code>  <code>hexo-butterfly:1.0</code> 版本就可以将本地的 <code>blog</code> 映射到内部</li><li><code>hexo-butterfly:2.0</code> 的自定义，主要目的其实还是保留了数据，专为私有化</li><li><code>hexo-butterfly:2.0</code> 还是存在一些隐形的问题，在 <code>windows</code> 过度到 <code>Liunx</code> 中</li><li>在使用镜像 <code>rahn2029/hexo:1.0</code> <code>hexo-butterfly:1.0</code>  进行本地挂载时候，效果相同且优异</li></ol><hr><p>官方：<a href="https://hexo.io/">https://hexo.io/</a></p><p>主题： <a href="https://butterfly.js.org/">https://butterfly.js.org/</a></p><hr><p></p>]]></content>
      
      
      <categories>
          
          <category> Docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> butterfly </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Frps 配合 Frpc 实现内网穿透</title>
      <link href="/2023/06/05/frps-%E9%85%8D%E5%90%88-frpc-%E5%AE%9E%E7%8E%B0%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/"/>
      <url>/2023/06/05/frps-%E9%85%8D%E5%90%88-frpc-%E5%AE%9E%E7%8E%B0%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/</url>
      
        <content type="html"><![CDATA[<h1 id="Frps-配合-Frpc-实现内网穿透"><a href="#Frps-配合-Frpc-实现内网穿透" class="headerlink" title="Frps 配合 Frpc 实现内网穿透"></a>Frps 配合 Frpc 实现内网穿透</h1><blockquote><p>frps 作为公网服务器, frpc 作为客户端。</p><p>需要使用到 Nginx Proxy Manager 并拥有一个域名和 VPS 。</p></blockquote><hr><h2 id="配置-frps-服务器端"><a href="#配置-frps-服务器端" class="headerlink" title="配置 frps 服务器端"></a>配置 frps 服务器端</h2><blockquote><p>创建一个 <code>frps.ini</code> 文件，作为 <code>frps</code> 的配置</p><p>配置文件分为3个部分</p><ol><li><code>bind_port</code> <code>kcp_bind_port</code> 为监听端口，与客户端绑定端口</li><li><code>dashboard_user</code> <code>dashboard_pwd</code> <code>dashboard_port</code> 为网页端的用户、密码与端口</li><li><code>token</code> 为客户端连接服务器端需要用到的验证</li></ol></blockquote><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># frps.ini</span></span><br><span class="line"><span class="section">[common]</span></span><br><span class="line"></span><br><span class="line"><span class="attr">bind_port</span>= <span class="number">52244</span></span><br><span class="line"><span class="attr">kcp_bind_port</span> = <span class="number">52244</span></span><br><span class="line"></span><br><span class="line"><span class="attr">dashboard_user</span>= admin</span><br><span class="line"><span class="attr">dashboard_pwd</span>= jdn7*LV!*qKEkdDQ</span><br><span class="line"><span class="attr">dashboard_port</span>= <span class="number">9527</span></span><br><span class="line"></span><br><span class="line"><span class="attr">token</span> = Q8!!<span class="number">3</span>V897&amp;qe<span class="comment">#&amp;#jt9*q</span></span><br></pre></td></tr></table></figure><blockquote><p>配置完上面的服务器端设置，就可以使用 <code>docker-compose</code> 启动这项服务</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nano docker-compose.yml</span><br></pre></td></tr></table></figure><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&#x27;3.3&#x27;</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">    <span class="attr">frps:</span></span><br><span class="line">        <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">        <span class="attr">network_mode:</span> <span class="string">host</span></span><br><span class="line">        <span class="attr">volumes:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">&#x27;./frps.ini:/etc/frp/frps.ini&#x27;</span></span><br><span class="line">        <span class="attr">container_name:</span> <span class="string">frps</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">snowdreamtech/frps</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose up -d</span><br></pre></td></tr></table></figure><blockquote><p>打开端口后，使用 Nginx Proxy Manager 设置 <code>frps</code> 网站代理</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ufw allow 52244/tcp</span><br><span class="line">ufw allow 9527/tcp</span><br><span class="line"></span><br><span class="line">http://45.76.126.20:9527</span><br></pre></td></tr></table></figure><hr><h2 id="配置-frpc-客户端"><a href="#配置-frpc-客户端" class="headerlink" title="配置 frpc 客户端"></a>配置 frpc 客户端</h2><blockquote><p>创建一个 <code>frpc.ini</code> 文件，作为 <code>frpc</code> 的配置</p><p>配置文件分为 2 个部分</p><ol><li>服务器端的配置<ol><li><code>server_addr</code> 服务器所在的 IP</li><li><code>server_port</code> 服务器设置的端口</li><li><code>token</code> 服务器设置的 token</li></ol></li><li>客户端的配置<ol><li><code>type</code> &#x3D; <code>tcp</code> 类型为 tcp</li><li><code>local_ip</code> &#x3D; <code>127.0.0.1</code> 本地网站的 IP 地址</li><li><code>local_port</code>  &#x3D; <code>4000</code> 本地网站的端口</li><li><code>remote_port</code> &#x3D; <code>7000</code> 反向代理本地的端口</li></ol></li></ol></blockquote><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># frpc.ini</span></span><br><span class="line"><span class="section">[common]</span></span><br><span class="line"><span class="attr">server_addr</span> = <span class="number">45.76</span>.<span class="number">126.20</span></span><br><span class="line"><span class="attr">server_port</span> = <span class="number">52244</span></span><br><span class="line"><span class="attr">token</span> = Q8!!<span class="number">3</span>V897&amp;qe<span class="comment">#&amp;#jt9*q</span></span><br><span class="line"></span><br><span class="line"><span class="section">[hexo]</span></span><br><span class="line"><span class="attr">type</span> = tcp</span><br><span class="line"><span class="attr">local_ip</span> = <span class="number">127.0</span>.<span class="number">0.1</span></span><br><span class="line"><span class="attr">local_port</span> = <span class="number">4000</span></span><br><span class="line"><span class="attr">remote_port</span> = <span class="number">7000</span></span><br></pre></td></tr></table></figure><blockquote><p>配置完上面的客户端设置，就可以使用 <code>docker-compose</code> 启动这项服务</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nano docker-compose.yml</span><br></pre></td></tr></table></figure><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&#x27;3.3&#x27;</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">    <span class="attr">frpc:</span></span><br><span class="line">        <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">        <span class="attr">network_mode:</span> <span class="string">host</span></span><br><span class="line">        <span class="attr">volumes:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">&#x27;./frpc.ini:/etc/frp/frpc.ini&#x27;</span></span><br><span class="line">        <span class="attr">container_name:</span> <span class="string">frpc</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">snowdreamtech/frpc</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose up -d</span><br></pre></td></tr></table></figure><blockquote><p><code>7000</code> 端口需要在 VPS 中打开，通过 Nginx Proxy Manager  反向代理就可以通过域名访问本地 <code>hexo</code> 网页了，如下图</p></blockquote><p><img src="/%5Cimages%5Cimage-20230605152936764.png" alt="image-20230605152936764"></p><hr><p>Blog : <a href="https://blog.laoda.de/archives/frp-with-nginx-proxy-manager">https://blog.laoda.de/archives/frp-with-nginx-proxy-manager</a></p><p>Github : <a href="https://github.com/fatedier/frp/blob/dev/README_zh.md">https://github.com/fatedier/frp/blob/dev/README_zh.md</a></p><hr><p></p>]]></content>
      
      
      <categories>
          
          <category> Docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> frps </tag>
            
            <tag> frpc </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>X-UI 安装配置</title>
      <link href="/2023/06/05/X-ui/"/>
      <url>/2023/06/05/X-ui/</url>
      
        <content type="html"><![CDATA[<h1 id="X-UI-安装配置"><a href="#X-UI-安装配置" class="headerlink" title="X-UI 安装配置"></a>X-UI 安装配置</h1><blockquote><p>Nginx Proxy Manager 搭配 X-UI 实现 Vless+WS+TLS 教程。</p></blockquote><hr><h2 id="安装-Nginx-Proxy-Manager"><a href="#安装-Nginx-Proxy-Manager" class="headerlink" title="安装 Nginx Proxy Manager"></a>安装 Nginx Proxy Manager</h2><blockquote><p>创建 <code>docker-compose.yml</code> 文件</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nano docker-compose.yml</span><br></pre></td></tr></table></figure><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&#x27;3&#x27;</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">app:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">&#x27;jc21/nginx-proxy-manager:latest&#x27;</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">npm</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">unless-stopped</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&#x27;80:80&#x27;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&#x27;81:81&#x27;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&#x27;443:443&#x27;</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./data:/data</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./letsencrypt:/etc/letsencrypt</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose up -d</span><br></pre></td></tr></table></figure><blockquote><p>打开 <code>80</code> <code>81</code> <code>443</code> 端口</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ufw allow 80</span><br><span class="line">ufw allow 81</span><br><span class="line">ufw allow 443</span><br></pre></td></tr></table></figure><hr><h2 id="安装-X-UI"><a href="#安装-X-UI" class="headerlink" title="安装 X-UI"></a>安装 X-UI</h2><blockquote><p>一键安装与升级</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash &lt;(curl -Ls https://raw.githubusercontent.com/vaxilu/x-ui/master/install.sh)</span><br></pre></td></tr></table></figure><blockquote><p>重启面板后需要在网站后加入 <code>/home</code> 才能进入后台</p></blockquote><p><img src="/%5Cimages%5Cimage-20230603134221961.png" alt="image-20230603134221961"></p><blockquote><p>remark &#x3D; <code>备注</code><br>protocol &#x3D; <code>vless</code><br>传输 &#x3D; <code>ws</code><br>路径 &#x3D; <code>/rss</code><br>路径可以自定义，但需要唯一路径名<br>注意：需要开启端口后才能连接 </p></blockquote><p><img src="/%5Cimages%5Cimage-20230603135856769.png" alt="image-20230603135856769"></p><hr><h2 id="Nginx-Proxy-Manager-配置"><a href="#Nginx-Proxy-Manager-配置" class="headerlink" title="Nginx Proxy Manager 配置"></a>Nginx Proxy Manager 配置</h2><blockquote><p>Edit Proxy Host 的设置</p></blockquote><p><img src="/%5Cimages%5Cimage-20230603132824153.png" alt="image-20230603132824153"></p><blockquote><p>&#x2F;home 为 x-ui 设置进入后台的路径，整合起来刚好是 x-ui 的登陆页面</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://45.76.126.21:52441/home</span><br></pre></td></tr></table></figure><blockquote><p>我这里使用了 npm 新建了一个静态网站，用于开启 CDN  </p></blockquote><p><img src="/%5Cimages%5Cimage-20230603133259178.png" alt="image-20230603133259178"></p><blockquote><p>如果有反向代理，此处可以不写</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">location / &#123;</span><br><span class="line">  root  /data/i.gald.top;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>需要修改的地方  <code>location /rss</code> <code> proxy_pass http://45.76.126.21:52443;</code></p></blockquote><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">location</span> /rss &#123;</span><br><span class="line">        <span class="attribute">proxy_redirect</span> <span class="literal">off</span>;</span><br><span class="line">        <span class="attribute">proxy_pass</span> http://45.76.126.21:52443;</span><br><span class="line">        <span class="attribute">proxy_http_version</span> <span class="number">1</span>.<span class="number">1</span>;</span><br><span class="line">        <span class="attribute">proxy_set_header</span> Upgrade <span class="variable">$http_upgrade</span>;</span><br><span class="line">        <span class="attribute">proxy_set_header</span> Connection <span class="string">&quot;upgrade&quot;</span>;</span><br><span class="line">        <span class="attribute">proxy_set_header</span> Host <span class="variable">$http_host</span>;</span><br><span class="line">        <span class="attribute">proxy_read_timeout</span> <span class="number">300s</span>;</span><br><span class="line">        <span class="comment"># Show realip in v2ray access.log</span></span><br><span class="line">        <span class="attribute">proxy_set_header</span> X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">        <span class="attribute">proxy_set_header</span> X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p><code>location /rss</code> 填上添加入站时的路径</p><p><code>proxy_pass http://45.76.126.21:52443;</code> 填上 VPS 的 IP 地址与入站地址填写的端口</p></blockquote><hr><h2 id="v2rayN-的设置"><a href="#v2rayN-的设置" class="headerlink" title="v2rayN 的设置"></a>v2rayN 的设置</h2><p>在 X-UI 的后台  <code>入站列表</code> — <code>操作</code> — <code>生成二维码</code> —  <code>v2rayN 软件</code> — <code>扫描屏幕上的二维码</code> </p><p><img src="/%5Cimages%5Cimage-20230603141551930.png" alt="image-20230603141551930"></p><blockquote><p>修改端口为 <code>443</code> 伪装域名 <code>i.gald.top</code> 传输安全层 <code>tls</code> </p><p>至此，大功告成 </p></blockquote><p><img src="/%5Cimages%5Cimage-20230603141031074.png" alt="image-20230603141031074"></p><p><img src="/%5Cimages%5Cimage-20230603140324508.png" alt="image-20230603140324508"></p><hr><h2 id="开启-CDN"><a href="#开启-CDN" class="headerlink" title="开启 CDN"></a>开启 CDN</h2><blockquote><p>模式需要修改为完全模式，不然会出现重定向</p></blockquote><p><img src="/%5Cimages%5Cimage-20230603142331567.png" alt="image-20230603142331567"></p><hr><p>Blog: <a href="https://blog.laoda.de/archives/npm-xui">https://blog.laoda.de/archives/npm-xui</a></p><p>Github: <a href="https://github.com/vaxilu/x-ui">https://github.com/vaxilu/x-ui</a></p><hr><p></p>]]></content>
      
      
      <categories>
          
          <category> VPS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 代理 </tag>
            
            <tag> x-ui </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于 Hnet 的修改</title>
      <link href="/2023/06/05/%E5%85%B3%E4%BA%8E-Hnet-%E7%9A%84%E4%BF%AE%E6%94%B9/"/>
      <url>/2023/06/05/%E5%85%B3%E4%BA%8E-Hnet-%E7%9A%84%E4%BF%AE%E6%94%B9/</url>
      
        <content type="html"><![CDATA[<h1 id="关于-Hnet-的修改"><a href="#关于-Hnet-的修改" class="headerlink" title="关于 Hnet 的修改"></a>关于 Hnet 的修改</h1><h2 id="index-7a30b4a8-css"><a href="#index-7a30b4a8-css" class="headerlink" title="index-7a30b4a8.css"></a>index-7a30b4a8.css</h2><p><code>index-7a30b4a8.css</code> 文件位于 <code>/app/public/assets/</code> 文件夹下。</p><p>在这个文件夹下主要修改了字体样式和背景图片，删除了自带的图片，添加了一张 <code>bg.webp</code> 作为背景图片。</p><hr><h2 id="index-52af0cfd-js"><a href="#index-52af0cfd-js" class="headerlink" title="index-52af0cfd.js"></a>index-52af0cfd.js</h2><p><code>index-52af0cfd.js</code> 文件位于 <code>/app/public/assets/</code> 文件夹下。</p><p>这是一个让我困惑怀疑作者的地方，因为这地方出现了 <code>baidu</code> <code>https://www.fbi.gov</code> 奇怪网站，在作为代理网站时甚至出现了 <code>baidu Cookie</code> 。  </p><p>我在这个文件中，将 <code>baidu</code> <code>https://www.fbi.gov</code> 全部设置为空。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="attr">icon</span>:<span class="string">&quot;https://api.faviconkit.com/www.youtube.com/&quot;</span>,<span class="attr">name</span>:<span class="string">&quot;Youtube&quot;</span>,<span class="attr">link</span>:<span class="string">&quot;https://www.youtube.com&quot;</span>&#125;,&#123;<span class="attr">icon</span>:<span class="string">&quot;https://store.heytapimage.com/cdo-portal/feedback/202210/17/b9eb8499d97c5ad0f064f5059116c129.png&quot;</span>,<span class="attr">name</span>:<span class="string">&quot;Add BM&quot;</span>,<span class="attr">link</span>:<span class="string">&quot;https://hideip.network&quot;</span>&#125;</span><br></pre></td></tr></table></figure><p>在起始页面中这里是一个添加自定义网站的功能，和一个跳转到 <code>Youtube</code> 网站的图标。</p><p>进行修改， <code>icon</code> 图片将它上传到本地，而不是一个超链接，修复了不显示的问题。</p><p><code>https://store.heytapimage.com/cdo-portal/feedback/202210/17/b9eb8499d97c5ad0f064f5059116c129.png</code> 修改为 <code>/b9eb8499d97c5ad0f064f5059116c129.png</code> 存放地点为内部的 <code>/app/public/</code> 目录下。</p><p><code>link:&quot;https://hideip.network&quot;</code> 修改为自己网站代理的域名。</p><p>下面的代码，一种是搜索功能默认为 <code>Google</code> 进行搜索，一种是自定义进行搜索。将 <code>fs=&quot;hideip.network&quot;</code> 参数进行了删除。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> us=<span class="string">&quot;Search on HNet, or enter a URL&quot;</span>,zt=<span class="string">&quot;https://www.google.com/search?safe=on&amp;q=&quot;</span>,fs=<span class="string">&quot;hideip.network&quot;</span>;</span><br></pre></td></tr></table></figure><p>修改如下 <code>↓</code> ，下方是二种不同的搜索方式。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> us=<span class="string">&quot;Search&quot;</span>,zt=<span class="string">&quot;https://www.google.com/search?q=&quot;</span>;</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> us=<span class="string">&quot;Search&quot;</span>,zt=<span class="string">&quot;https://rahn.top/search?q=&quot;</span>;</span><br></pre></td></tr></table></figure><p>下面的代码可以对搜索栏上面的文字进行修改，可以设置为空。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">s=<span class="keyword">new</span> <span class="title function_">as</span>(&#123;<span class="attr">props</span>:&#123;<span class="attr">title</span>:<span class="string">&quot;HNet Web&quot;</span>&#125;&#125;);</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">s=new as(&#123;props:&#123;title:<span class="string">&quot;&quot;</span>&#125;&#125;);</span><br></pre></td></tr></table></figure><p>下面的代码可以取消搜索栏上方文字的跳转功能。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">s</span>=(<span class="params"></span>)=&gt;&#123;<span class="variable language_">window</span>.<span class="title function_">open</span>(<span class="string">&quot;https://github.com/hideipnetwork/&quot;</span>,<span class="string">&quot;_blank&quot;</span>)&#125;;</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">s</span>=(<span class="params"></span>)=&gt;&#123;&#125;;</span><br></pre></td></tr></table></figure><hr><h2 id="server-config-js"><a href="#server-config-js" class="headerlink" title="server.config.js"></a>server.config.js</h2><p><code>server.config.js</code> 文件位于 <code>/app/public/server/</code> 文件夹下。</p><p><code>server.config.js</code> 的 <code>prefix</code> 值可以被修改，为浏览器域名之后的代码。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">prefix</span>: <span class="string">`/aHR0cHM6Ly9naXRodWIuY29tL2hpZGVpcG5ldHdvcms=/`</span></span><br><span class="line"><span class="attr">prefix</span>: <span class="string">`/Lqn4Z4fvhFAKAjj9dpRtVGRXWyGpC43do6fXRodWIug=/`</span></span><br></pre></td></tr></table></figure><p>修改前 —— <code>https://web.rahn.top/aHR0cHM6Ly9naXRodWIuY29tL2hpZGVpcG5ldHdvcms=/</code></p><p>修改后 —— <code>https://web.rahn.top/Lqn4Z4fvhFAKAjj9dpRtVGRXWyGpC43do6fXRodWIug=/</code></p><h2 id="index-html"><a href="#index-html" class="headerlink" title="index.html"></a>index.html</h2><p><code>index.html</code> 文件位于 <code>/app/public/</code> 文件夹下。</p><p>对图标、网站标题进行修改。</p><p>就此大致修改完成。</p><hr><h2 id="rahn2029-x2F-hnet-web-2-0-镜像"><a href="#rahn2029-x2F-hnet-web-2-0-镜像" class="headerlink" title="rahn2029&#x2F;hnet-web:2.0 镜像"></a>rahn2029&#x2F;hnet-web:2.0 镜像</h2><h3 id="将-Hnet-下载到本地"><a href="#将-Hnet-下载到本地" class="headerlink" title="将 Hnet 下载到本地"></a>将 Hnet 下载到本地</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> -b v2 https://github.com/Hideipnetwork/hideipnetwork-web.git</span><br></pre></td></tr></table></figure><h3 id="Hnet1-0-镜像制作"><a href="#Hnet1-0-镜像制作" class="headerlink" title="Hnet1.0 镜像制作"></a>Hnet1.0 镜像制作</h3><blockquote><p>启动容器，将文件导入到容器内部</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker run -itd --name node18 -p 5120:56559 node:18-alpine</span><br><span class="line">docker <span class="built_in">cp</span> hnet.zip node18:hnet.zip</span><br></pre></td></tr></table></figure><blockquote><p>进入容器内部</p><ol><li>解压</li><li>删除压缩包</li><li>修改文件名</li><li>进行 Hnet 安装</li><li>开启测试，外部端口是否能够连接</li></ol></blockquote><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="built_in">exec</span> -it node18 sh</span><br><span class="line"></span><br><span class="line">unzip hnet.zip</span><br><span class="line"><span class="built_in">rm</span> hnet.zip</span><br><span class="line"></span><br><span class="line"><span class="built_in">mv</span> hideipnetwork-web web</span><br><span class="line"><span class="built_in">cd</span> web</span><br><span class="line"></span><br><span class="line">npm install</span><br><span class="line">npm run start</span><br><span class="line"><span class="built_in">exit</span></span><br></pre></td></tr></table></figure><blockquote><p><kbd>Ctrl</kbd> + <kbd>C</kbd> 退出  <code>npm run start</code> </p><p>用 <code>docker commit</code> 创建一个新的镜像</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker ps</span><br><span class="line">docker commit 2360f19a235e hnet1.0</span><br></pre></td></tr></table></figure><h3 id="修改-public-文件夹"><a href="#修改-public-文件夹" class="headerlink" title="修改 public 文件夹"></a>修改 public 文件夹</h3><blockquote><p>创建容器</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -it -d --name hnet -p 5120:56559 hnet1.0</span><br></pre></td></tr></table></figure><blockquote><p>进入容器</p><ol><li>来到容器内部</li><li>进入 Hnet 目录</li><li>删除 <code>public</code> 文件夹下的文件</li><li>退出容器</li><li>将修改好的 <code>public.zip</code> 拷贝到 <code>public</code> 文件夹下</li><li>再次进入容器</li><li>解压 <code>public.zip</code> 完成后，删除</li><li><code>npm run start</code> 查看效果</li><li><kbd>Ctrl</kbd> + <kbd>C</kbd> 退出  <code>npm run start</code> </li><li>查看容器的id，用 docker commit 进行构建新的镜像</li></ol></blockquote><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="built_in">exec</span> -it hnet sh</span><br><span class="line"><span class="built_in">cd</span> /web/public</span><br><span class="line"><span class="built_in">rm</span> -rf *</span><br><span class="line"><span class="built_in">exit</span></span><br><span class="line"></span><br><span class="line">docker <span class="built_in">cp</span> public.zip hnet:/web/public/public.zip</span><br><span class="line"></span><br><span class="line">docker <span class="built_in">exec</span> -it hnet sh</span><br><span class="line"><span class="built_in">cd</span> /web/public</span><br><span class="line">unzip public.zip</span><br><span class="line"><span class="built_in">rm</span> public.zip</span><br><span class="line"></span><br><span class="line">npm run start</span><br><span class="line"><span class="built_in">exit</span></span><br><span class="line"></span><br><span class="line">docker ps</span><br><span class="line">docker commit 2263313c0027 hnet2.0</span><br></pre></td></tr></table></figure><h3 id="Hnet-web-2-0-镜像构建"><a href="#Hnet-web-2-0-镜像构建" class="headerlink" title="Hnet-web:2.0 镜像构建"></a>Hnet-web:2.0 镜像构建</h3><blockquote><p>编写 DockerFile</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nano DockerFile</span><br></pre></td></tr></table></figure><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">FROM</span> hnet2.<span class="number">0</span></span><br><span class="line"><span class="keyword">LABEL</span><span class="language-bash"> maintainer=<span class="string">&quot;Nome &lt;rainsky512@gmail.com&gt;&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">WORKDIR</span><span class="language-bash"> /web</span></span><br><span class="line"><span class="keyword">VOLUME</span><span class="language-bash"> /web</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">EXPOSE</span> <span class="number">56559</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">CMD</span><span class="language-bash"> [<span class="string">&quot;npm&quot;</span>, <span class="string">&quot;run&quot;</span>, <span class="string">&quot;start&quot;</span>]</span></span><br></pre></td></tr></table></figure><blockquote><p>构建镜像</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker build -f DockerFile -t rahn2029/hnet-web:2.0 .</span><br></pre></td></tr></table></figure><blockquote><p>启动</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -itd --name hnet -p 5120:56559 rahn2029/hnet-web:2.0</span><br></pre></td></tr></table></figure><blockquote><p>将容器内部文件复制到本地，为 <code>docker-compose</code> 挂载做准备</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="built_in">cp</span> hnet:web $(<span class="built_in">pwd</span>)/web</span><br></pre></td></tr></table></figure><blockquote><p>停止容器并删除</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker stop hnet &amp;&amp; docker <span class="built_in">rm</span> hnet</span><br></pre></td></tr></table></figure><h2 id="Docker-Compose"><a href="#Docker-Compose" class="headerlink" title="Docker-Compose"></a>Docker-Compose</h2><p>编写 <code>docker-compose.yml</code> </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nano docker-compose.yml</span><br></pre></td></tr></table></figure><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&#x27;3.3&#x27;</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">    <span class="attr">hideipnetwork-web:</span></span><br><span class="line">        <span class="attr">container_name:</span> <span class="string">hnet</span></span><br><span class="line">        <span class="attr">ports:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="number">5120</span><span class="string">:56559</span></span><br><span class="line">        <span class="attr">volumes:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">./web:/web</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">rahn2029/hnet-web:2.0</span></span><br><span class="line">        <span class="attr">restart:</span> <span class="string">always</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose up -d</span><br></pre></td></tr></table></figure><blockquote><p>打开 <code>5120</code> 端口</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ufw allow 5120/tcp</span><br></pre></td></tr></table></figure><hr><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><blockquote><p>rahn2029&#x2F;hnet-web:1.0</p></blockquote><p><img src="/../images/22.webp"></p><blockquote><p>rahn2029&#x2F;hnet-web:2.0</p></blockquote><p><img src="/../images/55.webp"></p><hr><p></p>]]></content>
      
      
      <categories>
          
          <category> Docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hnet </tag>
            
            <tag> 代理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hnet 镜像的制作过程</title>
      <link href="/2023/06/05/Hnet-%E9%95%9C%E5%83%8F%E5%88%B6%E4%BD%9C%E8%BF%87%E7%A8%8B/"/>
      <url>/2023/06/05/Hnet-%E9%95%9C%E5%83%8F%E5%88%B6%E4%BD%9C%E8%BF%87%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<h1 id="Hnet-镜像构建与问题"><a href="#Hnet-镜像构建与问题" class="headerlink" title="Hnet 镜像构建与问题"></a>Hnet 镜像构建与问题</h1><blockquote><p>注意：很不错的代理，但里面的代码使我感受到一些私货</p><p>建议：修改里面的一些代码</p></blockquote><hr><h2 id="将-Hnet-下载到本地"><a href="#将-Hnet-下载到本地" class="headerlink" title="将 Hnet 下载到本地"></a>将 Hnet 下载到本地</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> -b v2 https://github.com/Hideipnetwork/hideipnetwork-web.git</span><br></pre></td></tr></table></figure><hr><h2 id="Node18-镜像制作"><a href="#Node18-镜像制作" class="headerlink" title="Node18 镜像制作"></a>Node18 镜像制作</h2><blockquote><p>启动容器，将文件导入到容器内部</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker run -itd --name node18 -p 5120:56559 node:18-alpine</span><br><span class="line">docker <span class="built_in">cp</span> hnet.zip node18:hnet.zip</span><br></pre></td></tr></table></figure><blockquote><p>进入容器内部</p><ol><li>解压</li><li>删除压缩包</li><li>修改文件名</li><li>进行 Hnet 安装</li><li>开启测试，外部端口是否能够连接</li></ol></blockquote><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="built_in">exec</span> -it node18 sh</span><br><span class="line"></span><br><span class="line">unzip hnet.zip</span><br><span class="line"><span class="built_in">rm</span> hnet.zip</span><br><span class="line"></span><br><span class="line"><span class="built_in">mv</span> hideipnetwork-web web</span><br><span class="line"><span class="built_in">cd</span> web</span><br><span class="line"></span><br><span class="line">npm install</span><br><span class="line">npm run start</span><br><span class="line"><span class="built_in">exit</span></span><br></pre></td></tr></table></figure><blockquote><p><kbd>Ctrl</kbd> + <kbd>C</kbd> 退出  <code>npm run start</code> </p><p>用 <code>docker commit</code> 创建一个新的镜像</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker ps</span><br><span class="line">docker commit 2360f19a235e node18</span><br></pre></td></tr></table></figure><hr><h2 id="Hnet-镜像构建"><a href="#Hnet-镜像构建" class="headerlink" title="Hnet 镜像构建"></a>Hnet 镜像构建</h2><blockquote><p>编写 DockerFile</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nano DockerFile</span><br></pre></td></tr></table></figure><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">FROM</span> node18</span><br><span class="line"><span class="keyword">LABEL</span><span class="language-bash"> maintainer=<span class="string">&quot;Nome &lt;rainsky512@gmail.com&gt;&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">WORKDIR</span><span class="language-bash"> /web</span></span><br><span class="line"><span class="keyword">VOLUME</span><span class="language-bash"> /web</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">EXPOSE</span> <span class="number">56559</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">CMD</span><span class="language-bash"> [<span class="string">&quot;npm&quot;</span>, <span class="string">&quot;run&quot;</span>, <span class="string">&quot;start&quot;</span>]</span></span><br></pre></td></tr></table></figure><blockquote><p>构建镜像</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker build -f DockerFile -t rahn2029/hnet-web:1.0 .</span><br></pre></td></tr></table></figure><blockquote><p>启动</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -itd --name hnet -p 5120:56559 rahn2029/hnet-web:1.0</span><br></pre></td></tr></table></figure><blockquote><p>将容器内部文件复制到本地，为 <code>docker-compose</code> 挂载做准备</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="built_in">cp</span> hnet:web $(<span class="built_in">pwd</span>)/web</span><br></pre></td></tr></table></figure><blockquote><p>停止容器并删除</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker stop hnet &amp;&amp; docker <span class="built_in">rm</span> hnet</span><br></pre></td></tr></table></figure><hr><h2 id="Docker-Compose"><a href="#Docker-Compose" class="headerlink" title="Docker-Compose"></a>Docker-Compose</h2><p>编写 <code>docker-compose.yml</code> </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nano docker-compose.yml</span><br></pre></td></tr></table></figure><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&#x27;3.3&#x27;</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">    <span class="attr">hideipnetwork-web:</span></span><br><span class="line">        <span class="attr">container_name:</span> <span class="string">hnet</span></span><br><span class="line">        <span class="attr">ports:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="number">5120</span><span class="string">:56559</span></span><br><span class="line">        <span class="attr">volumes:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">./web:/web</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">rahn2029/hnet-web:1.0</span></span><br><span class="line">        <span class="attr">restart:</span> <span class="string">always</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose up -d</span><br></pre></td></tr></table></figure><blockquote><p>打开 <code>5120</code> 端口</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ufw allow 5120/tcp</span><br></pre></td></tr></table></figure><hr><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>这里写了制作 <code>rahn2029/hnet-web:1.0</code> 镜像的整个过程，但是这个镜像中的代码是存在隐藏问题的, 可以查看 <code>hnet-web:2.0</code> 作为参考。 </p><p><code>hnet-web:1.0</code> 中有意义不明的网站，且有百度的影子。</p><p>下方的网站中，提供参考，<code>Hnet</code> 运行环境是需要 <code>Node 18</code> 版本的。</p><hr><p>官方 <a href="https://official.hideip.network/">https://official.hideip.network/</a></p><p>博客 <a href="https://blog.tanglu.me/web-browser/">https://blog.tanglu.me/web-browser/</a></p><p>Github <a href="https://github.com/Hideipnetwork/hideipnetwork-web/tree/v2">https://github.com/Hideipnetwork/hideipnetwork-web/tree/v2</a></p><p>Github <a href="https://github.com/18nome/dockerfiles/tree/main/hideipnetwork-web">https://github.com/18nome/dockerfiles/tree/main/hideipnetwork-web</a></p><hr><p></p>]]></content>
      
      
      <categories>
          
          <category> Docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hnet </tag>
            
            <tag> 代理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ubuntu Server 20.04</title>
      <link href="/2023/05/31/ubuntu-server20-04/"/>
      <url>/2023/05/31/ubuntu-server20-04/</url>
      
        <content type="html"><![CDATA[<h1 id="Ubuntu-Server-20-04"><a href="#Ubuntu-Server-20-04" class="headerlink" title="Ubuntu Server 20.04"></a>Ubuntu Server 20.04</h1><p>等待一段时间加载，来到欢迎界面进行系统安装。</p><hr><ol><li>语言默认 English， <code>Enter</code> 。</li></ol><p><img src="/../images/image-20230531104724485.png" alt="image-20230531104724485"></p><ol start="2"><li>可用的安装程序更新，默认 <code>Enter</code> 。</li></ol><p><img src="/../images/image-20230531104915010.png" alt="image-20230531104915010"></p><ol start="3"><li>键盘配置，默认 <code>Enter</code> 。</li></ol><p><img src="/../images/image-20230531105053991.png" alt="image-20230531105053991"></p><ol start="4"><li>网络连接，默认 <code>Enter</code> 。</li></ol><p><img src="/../images/image-20230531105434391.png" alt="image-20230531105434391"></p><ol start="5"><li>配置代理，默认 <code>Enter</code> 。</li></ol><p><img src="/../images/image-20230531105611921.png" alt="image-20230531105611921"></p><ol start="6"><li>配置 Ubuntu 镜像源，默认 <code>Enter</code> 。</li></ol><p><img src="/../images/image-20230531105709664.png" alt="image-20230531105709664"></p><p>提示：可以自行更换镜像源，例如</p><ul><li><p><a href="http://cn.archive.ubuntu.com/ubuntu">http://cn.archive.ubuntu.com/ubuntu</a></p></li><li><p><a href="http://mirrors.aliyun.com/ubuntu">http://mirrors.aliyun.com/ubuntu</a></p></li></ul><p><img src="/../images/image-20230531110305745.png" alt="image-20230531110305745"></p><ol start="7"><li>引导式存储配置，键盘 <code>↓</code> 移至 <code>Done</code> ，<code>Enter</code> 。</li></ol><p><img src="/../images/image-20230531105909435.png" alt="image-20230531105909435"></p><p><img src="/../images/image-20230531110753371.png" alt="image-20230531110753371"></p><ol start="8"><li>存储配置，默认 <code>Enter</code> 。</li></ol><p><img src="/../images/image-20230531110824321.png" alt="image-20230531110824321"></p><ol start="9"><li>出现弹窗，键盘 <code>↓</code> 移至 <code>Continue </code> ，<code>Enter</code> 。</li></ol><p><img src="/../images/image-20230531110913019.png" alt="image-20230531110913019"></p><blockquote><p> 提示：将会格式化硬盘，删除硬盘内的数据，完成硬盘分区。</p></blockquote><p><img src="/../images/image-20230531111053599.png" alt="image-20230531111053599"></p><ol start="10"><li>配置用户的 Linux 环境</li></ol><p><img src="/../images/image-20230531115441362.png" alt="image-20230531115441362"></p><ul><li>Your name  —  你的名字</li><li>Your server’s name — 你服务器的名字</li><li>Pick a username — 创建登陆用户名</li><li>choose a password —  用户名密码</li><li>Confirm your password — 确认用户名密码</li></ul><p><img src="/../images/image-20230531111406153.png" alt="image-20230531111406153"></p><ol start="11"><li>SSH 设置，<code>Enter</code> 选中 <code>Install OpenSSH server</code> ，键盘 <code>↓</code> 移至 <code>Done</code> ，<code>Enter</code> 。</li></ol><p><img src="/../images/image-20230531111517900.png" alt="image-20230531111517900"></p><p><img src="/../images/image-20230531111612342.png" alt="image-20230531111612342"></p><ol start="12"><li>安装常用的应用程序和服务，键盘 <code>↓</code> 移至 <code>Done</code> ，<code>Enter</code> 。</li></ol><p><img src="/../images/image-20230531111635093.png" alt="image-20230531111635093"></p><blockquote><p>提示：看情况安装你所需要的服务。</p></blockquote><p><img src="/../images/image-20230531111721108.png" alt="image-20230531111721108"></p><ol start="13"><li>开始自动安装系统</li></ol><p><img src="/../images/image-20230531111734797.png" alt="image-20230531111734797"></p><blockquote><p>当出现 Cancel update and reboot 选项时，可以取消更新，重启完成系统安装。</p></blockquote><p><img src="/../images/image-20230531111753490.png" alt="image-20230531111753490"></p><p><img src="/images/image-20230531111959058.png"></p><blockquote><p>也可以等到更新完毕后，出现 Reboot Now 完成系统安装。</p></blockquote><p><img src="/../images/image-20230531120402058.png" alt="image-20230531120402058"></p><ol start="14"><li><code>Reboot Now</code> 后，来到开机界面，按 <code>Enter</code> 完成系统安装。</li></ol><p><img src="/../images/image-20230531120441866.png" alt="image-20230531120441866"></p><hr><h2 id="安装-net-tools-获得本地-IP-地址"><a href="#安装-net-tools-获得本地-IP-地址" class="headerlink" title="安装 net-tools 获得本地 IP 地址"></a>安装 net-tools 获得本地 IP 地址</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install net-tools</span><br><span class="line">ifconfig</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">rahn@virtualbox:~$ sudo apt install net-tools</span><br><span class="line">[sudo] password <span class="keyword">for</span> rahn:</span><br><span class="line">Reading package lists... Done</span><br><span class="line">Building dependency tree</span><br><span class="line">Reading state information... Done</span><br><span class="line">The following NEW packages will be installed:</span><br><span class="line">  net-tools</span><br><span class="line">0 upgraded, 1 newly installed, 0 to remove and 23 not upgraded.</span><br><span class="line">Need to get 196 kB of archives.</span><br><span class="line">After this operation, 864 kB of additional disk space will be used.</span><br><span class="line">Get:1 http://mirrors.aliyun.com/ubuntu focal/main amd64 net-tools amd64 1.60+git20180626.aebd88e-1ubuntu1 [196 kB]</span><br><span class="line">Fetched 196 kB <span class="keyword">in</span> 0s (1,988 kB/s)</span><br><span class="line">Selecting previously unselected package net-tools.</span><br><span class="line">(Reading database ... 72317 files and directories currently installed.)</span><br><span class="line">Preparing to unpack .../net-tools_1.60+git20180626.aebd88e-1ubuntu1_amd64.deb ...</span><br><span class="line">Unpacking net-tools (1.60+git20180626.aebd88e-1ubuntu1) ...</span><br><span class="line">Setting up net-tools (1.60+git20180626.aebd88e-1ubuntu1) ...</span><br><span class="line">Processing triggers <span class="keyword">for</span> man-db (2.9.1-1) ...</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">rahn@virtualbox:~$ ifconfig</span><br><span class="line">enp0s3: flags=4163&lt;UP,BROADCAST,RUNNING,MULTICAST&gt;  mtu 1500</span><br><span class="line">        inet 192.168.6.212  netmask 255.255.255.0  broadcast 192.168.6.255</span><br><span class="line">        inet6 fdf7:ca7:929d::4a6  prefixlen 128  scopeid 0x0&lt;global&gt;</span><br><span class="line">        inet6 fdf7:ca7:929d:0:a00:27ff:fe52:e1f0  prefixlen 64  scopeid 0x0&lt;glob         al&gt;</span><br><span class="line">        inet6 2409:8a28:666d:43f1:a00:27ff:fe52:e1f0  prefixlen 64  scopeid 0x0&lt;         global&gt;</span><br><span class="line">        inet6 fe80::a00:27ff:fe52:e1f0  prefixlen 64  scopeid 0x20&lt;<span class="built_in">link</span>&gt;</span><br><span class="line">        inet6 2409:8a28:666d:43f1::4a6  prefixlen 128  scopeid 0x0&lt;global&gt;</span><br><span class="line">        ether 08:00:27:52:e1:f0  txqueuelen 1000  (Ethernet)</span><br><span class="line">        RX packets 354  bytes 237751 (237.7 KB)</span><br><span class="line">        RX errors 0  dropped 0  overruns 0  frame 0</span><br><span class="line">        TX packets 300  bytes 40407 (40.4 KB)</span><br><span class="line">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</span><br><span class="line"></span><br><span class="line">lo: flags=73&lt;UP,LOOPBACK,RUNNING&gt;  mtu 65536</span><br><span class="line">        inet 127.0.0.1  netmask 255.0.0.0</span><br><span class="line">        inet6 ::1  prefixlen 128  scopeid 0x10&lt;host&gt;</span><br><span class="line">        loop  txqueuelen 1000  (Local Loopback)</span><br><span class="line">        RX packets 98  bytes 7826 (7.8 KB)</span><br><span class="line">        RX errors 0  dropped 0  overruns 0  frame 0</span><br><span class="line">        TX packets 98  bytes 7826 (7.8 KB)</span><br><span class="line">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</span><br></pre></td></tr></table></figure><blockquote><p>知晓本地IP 192.168.6.212  可以使用 Putty 对虚拟机进行连接</p></blockquote><hr><h2 id="设置-root-密码"><a href="#设置-root-密码" class="headerlink" title="设置 root 密码"></a>设置 root 密码</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo passwd root</span><br><span class="line">su root</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">rahn@virtualbox:~$ sudo passwd root</span><br><span class="line">[sudo] password <span class="keyword">for</span> rahn:</span><br><span class="line">New password:</span><br><span class="line">Retype new password:</span><br><span class="line">passwd: password updated successfully</span><br><span class="line">rahn@virtualbox:~$ su root</span><br><span class="line">Password:</span><br><span class="line">root@virtualbox:/home/rahn<span class="comment"># cd</span></span><br><span class="line">root@virtualbox:~<span class="comment"># pwd</span></span><br><span class="line">/root</span><br><span class="line">root@virtualbox:~<span class="comment">#</span></span><br></pre></td></tr></table></figure><hr><h2 id="安装增强功能"><a href="#安装增强功能" class="headerlink" title="安装增强功能"></a>安装增强功能</h2><ol><li>安装依赖</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install gcc</span><br><span class="line">sudo apt install make</span><br><span class="line"></span><br><span class="line"><span class="comment"># 也可以合并为一个命令</span></span><br><span class="line">sudo apt install -y gcc make</span><br></pre></td></tr></table></figure><ol start="2"><li>点击 VirtualBox 菜单栏 - 设备 -  安装增强功能</li></ol><p><img src="/../images/image-20230531124307636.png" alt="image-20230531124307636"></p><ol start="3"><li>点击后，就可以执行挂载命令</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo mount /dev/cdrom /mnt</span><br></pre></td></tr></table></figure><p>提示：如果出现 <code>mount: /mnt: no medium found on /dev/sr0.</code>  错误，就再次点击 <code>安装增强功能</code> ，再次执行挂载命令。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">root@virtualbox:~<span class="comment"># sudo mount /dev/cdrom /mnt</span></span><br><span class="line">mount: /mnt: no medium found on /dev/sr0.</span><br><span class="line">root@virtualbox:~<span class="comment"># sudo mount /dev/cdrom /mnt</span></span><br><span class="line">mount: /mnt: WARNING: device write-protected, mounted read-only.</span><br></pre></td></tr></table></figure><ol start="4"><li>开始安装增强工具</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /mnt</span><br><span class="line">sudo ./VBoxLinuxAdditions.run</span><br><span class="line"></span><br><span class="line"><span class="comment"># 也可以直接执行</span></span><br><span class="line">sudo /mnt/VBoxLinuxAdditions.run</span><br></pre></td></tr></table></figure><ol start="6"><li>重启</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">reboot</span><br></pre></td></tr></table></figure><ol start="7"><li>直接在 <code>VirtualBox</code> 中挂载目录，如下</li></ol><p><img src="/../images/image-20230531131211586.png" alt="image-20230531131211586"></p><blockquote><p>命令挂载</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo mount -t vboxsf 共享文件夹名 Liunx挂载点</span><br><span class="line">sudo mount -t vboxsf shared /root/shared</span><br></pre></td></tr></table></figure><hr><h2 id="安装-Docker-与-Docker-Compose"><a href="#安装-Docker-与-Docker-Compose" class="headerlink" title="安装 Docker 与 Docker-Compose"></a>安装 Docker 与 Docker-Compose</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">apt install docker.io</span><br><span class="line">apt install docker-compose</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt install -y docker.io docker-compose</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker -v</span><br><span class="line">docker-compose -v</span><br></pre></td></tr></table></figure><hr><h2 id="配置-Docker-镜像加速"><a href="#配置-Docker-镜像加速" class="headerlink" title="配置 Docker 镜像加速"></a>配置 Docker 镜像加速</h2><ol><li>编辑 daemon.json 文件。</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nano /etc/docker/daemon.json</span><br></pre></td></tr></table></figure><ol start="2"><li>添加镜像地址</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123; <span class="string">&quot;registry-mirrors&quot;</span>: [ <span class="string">&quot;https://dockerproxy.com&quot;</span> ] &#125;</span><br></pre></td></tr></table></figure><blockquote><p>添加更多镜像格式</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;registry-mirrors&quot;</span>: [</span><br><span class="line">    <span class="string">&quot;https://hub-mirror.c.163.com&quot;</span>,</span><br><span class="line">    <span class="string">&quot;https://mirror.baidubce.com&quot;</span>,</span><br><span class="line">    <span class="string">&quot;https://registry.docker-cn.com&quot;</span>,</span><br><span class="line">    <span class="string">&quot;https://reg-mirror.qiniu.com&quot;</span>,</span><br><span class="line">    <span class="string">&quot;https://dockerhub.azk8s.cn&quot;</span>,</span><br><span class="line">    <span class="string">&quot;https://docker.mirrors.ustc.edu.cn&quot;</span></span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="3"><li>重新加载 daemon.json 配置</li></ol> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl daemon-reload</span><br></pre></td></tr></table></figure><ol start="4"><li>重启 Docker</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl restart docker</span><br></pre></td></tr></table></figure><blockquote><p> Docker 镜像加速脚本</p></blockquote><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#! /bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">red</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;\033[31m\033[01m<span class="variable">$1</span>\033[0m&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">green</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;\033[32m\033[01m<span class="variable">$1</span>\033[0m&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">yellow</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;\033[33m\033[01m<span class="variable">$1</span>\033[0m&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># docker 镜像加速</span></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">docker_up</span></span>()&#123;</span><br><span class="line"><span class="built_in">cd</span> /etc/docker/</span><br><span class="line"><span class="keyword">if</span> [ -f <span class="string">&quot;daemon.json&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">rm</span> daemon.json</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">cat</span> &lt;&lt;<span class="string">EOF &gt; daemon.json</span></span><br><span class="line"><span class="string">&#123; &quot;registry-mirrors&quot;: [ &quot;https://dockerproxy.com&quot; ] &#125;</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line">yellow <span class="string">&quot;-----------------------------------------------&quot;</span></span><br><span class="line">green <span class="string">&quot; 加载 daemon.json 文件&quot;</span></span><br><span class="line">sudo systemctl daemon-reload</span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">green <span class="string">&quot; 重新启动 docker&quot;</span></span><br><span class="line">sudo systemctl restart docker</span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">green <span class="string">&quot; Docker 镜像加速完毕！&quot;</span></span><br><span class="line">yellow <span class="string">&quot;-----------------------------------------------&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">docker_up</span><br></pre></td></tr></table></figure><hr><h2 id="配置-Ubuntu-软件包镜像"><a href="#配置-Ubuntu-软件包镜像" class="headerlink" title="配置 Ubuntu 软件包镜像"></a>配置 Ubuntu 软件包镜像</h2><ol><li>如果存在 <code>/etc/apt/sources.list</code> 文件，将其复制进行防错备用，如果不存在 <code>sources.list</code> 则创建这个文件。</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cp</span> /etc/apt/sources.list /etc/apt/sources-bak.list</span><br><span class="line">nano /etc/apt/sources.list</span><br></pre></td></tr></table></figure><ol start="2"><li><p>将URL替换为新镜像的URL。可以在 Ubuntu 官方镜像 <a href="https://launchpad.net/ubuntu/+archivemirrors">https://launchpad.net/ubuntu/+archivemirrors</a> 中找到。</p></li><li><p>保存并关闭文件。</p></li><li><p>运行 <code>sudo apt update</code> 使用新归档镜像刷新软件包列表。</p></li></ol><h2 id="设置本地时间为上海时区的时间"><a href="#设置本地时间为上海时区的时间" class="headerlink" title="设置本地时间为上海时区的时间"></a>设置本地时间为上海时区的时间</h2><blockquote><ol><li><code>date -R</code>：这个命令用于显示当前的本地时间和日期，格式为 RFC 2822 格式。可以使用这个命令来检查系统当前的时间是否正确。</li><li><code>tzselect</code>：这是一个交互式命令行实用程序，用于让用户选择所在的时区。执行这个命令后会提示用户回答一些问题，以确定其所在的位置和时区。</li><li><code>cp /usr/share/zoneinfo/Asia/Shanghai /etc/localtime</code>：这个命令将上海时区信息文件复制到本机的 <code>/etc/localtime</code> 文件中。通过这个操作，系统就能够使用上海的时区信息来设置本地时间了。</li></ol></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">date</span> -R</span><br><span class="line">tzselect</span><br><span class="line"><span class="built_in">cp</span> /usr/share/zoneinfo/Asia/Shanghai /etc/localtime</span><br></pre></td></tr></table></figure><hr><p></p>]]></content>
      
      
      <categories>
          
          <category> Liunx </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ubuntu </tag>
            
            <tag> ubuntu server </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
